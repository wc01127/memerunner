/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/_app"],{

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[11].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[11].oneOf[14].use[2]!./src/styles/globals.css":
/*!****************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[11].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[11].oneOf[14].use[2]!./src/styles/globals.css ***!
  \****************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\");\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@import url('https://fonts.googleapis.com/css2?family=Orbitron&display=swap');\\n/*\\n! tailwindcss v3.4.1 | MIT License | https://tailwindcss.com\\n*/\\n/*\\n1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)\\n2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)\\n*/\\n*,\\n::before,\\n::after {\\n  box-sizing: border-box; /* 1 */\\n  border-width: 0; /* 2 */\\n  border-style: solid; /* 2 */\\n  border-color: #e5e7eb; /* 2 */\\n}\\n::before,\\n::after {\\n  --tw-content: '';\\n}\\n/*\\n1. Use a consistent sensible line-height in all browsers.\\n2. Prevent adjustments of font size after orientation changes in iOS.\\n3. Use a more readable tab size.\\n4. Use the user's configured `sans` font-family by default.\\n5. Use the user's configured `sans` font-feature-settings by default.\\n6. Use the user's configured `sans` font-variation-settings by default.\\n7. Disable tap highlights on iOS\\n*/\\nhtml,\\n:host {\\n  line-height: 1.5; /* 1 */\\n  -webkit-text-size-adjust: 100%; /* 2 */\\n  -moz-tab-size: 4; /* 3 */\\n  -o-tab-size: 4;\\n     tab-size: 4; /* 3 */\\n  font-family: ui-sans-serif, system-ui, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\", \\\"Noto Color Emoji\\\"; /* 4 */\\n  font-feature-settings: normal; /* 5 */\\n  font-variation-settings: normal; /* 6 */\\n  -webkit-tap-highlight-color: transparent; /* 7 */\\n}\\n/*\\n1. Remove the margin in all browsers.\\n2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.\\n*/\\nbody {\\n  margin: 0; /* 1 */\\n  line-height: inherit; /* 2 */\\n}\\n/*\\n1. Add the correct height in Firefox.\\n2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\\n3. Ensure horizontal rules are visible by default.\\n*/\\nhr {\\n  height: 0; /* 1 */\\n  color: inherit; /* 2 */\\n  border-top-width: 1px; /* 3 */\\n}\\n/*\\nAdd the correct text decoration in Chrome, Edge, and Safari.\\n*/\\nabbr:where([title]) {\\n  -webkit-text-decoration: underline dotted;\\n          text-decoration: underline dotted;\\n}\\n/*\\nRemove the default font size and weight for headings.\\n*/\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6 {\\n  font-size: inherit;\\n  font-weight: inherit;\\n}\\n/*\\nReset links to optimize for opt-in styling instead of opt-out.\\n*/\\na {\\n  color: inherit;\\n  text-decoration: inherit;\\n}\\n/*\\nAdd the correct font weight in Edge and Safari.\\n*/\\nb,\\nstrong {\\n  font-weight: bolder;\\n}\\n/*\\n1. Use the user's configured `mono` font-family by default.\\n2. Use the user's configured `mono` font-feature-settings by default.\\n3. Use the user's configured `mono` font-variation-settings by default.\\n4. Correct the odd `em` font sizing in all browsers.\\n*/\\ncode,\\nkbd,\\nsamp,\\npre {\\n  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \\\"Liberation Mono\\\", \\\"Courier New\\\", monospace; /* 1 */\\n  font-feature-settings: normal; /* 2 */\\n  font-variation-settings: normal; /* 3 */\\n  font-size: 1em; /* 4 */\\n}\\n/*\\nAdd the correct font size in all browsers.\\n*/\\nsmall {\\n  font-size: 80%;\\n}\\n/*\\nPrevent `sub` and `sup` elements from affecting the line height in all browsers.\\n*/\\nsub,\\nsup {\\n  font-size: 75%;\\n  line-height: 0;\\n  position: relative;\\n  vertical-align: baseline;\\n}\\nsub {\\n  bottom: -0.25em;\\n}\\nsup {\\n  top: -0.5em;\\n}\\n/*\\n1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\\n2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\\n3. Remove gaps between table borders by default.\\n*/\\ntable {\\n  text-indent: 0; /* 1 */\\n  border-color: inherit; /* 2 */\\n  border-collapse: collapse; /* 3 */\\n}\\n/*\\n1. Change the font styles in all browsers.\\n2. Remove the margin in Firefox and Safari.\\n3. Remove default padding in all browsers.\\n*/\\nbutton,\\ninput,\\noptgroup,\\nselect,\\ntextarea {\\n  font-family: inherit; /* 1 */\\n  font-feature-settings: inherit; /* 1 */\\n  font-variation-settings: inherit; /* 1 */\\n  font-size: 100%; /* 1 */\\n  font-weight: inherit; /* 1 */\\n  line-height: inherit; /* 1 */\\n  color: inherit; /* 1 */\\n  margin: 0; /* 2 */\\n  padding: 0; /* 3 */\\n}\\n/*\\nRemove the inheritance of text transform in Edge and Firefox.\\n*/\\nbutton,\\nselect {\\n  text-transform: none;\\n}\\n/*\\n1. Correct the inability to style clickable types in iOS and Safari.\\n2. Remove default button styles.\\n*/\\nbutton,\\n[type='button'],\\n[type='reset'],\\n[type='submit'] {\\n  -webkit-appearance: button; /* 1 */\\n  background-color: transparent; /* 2 */\\n  background-image: none; /* 2 */\\n}\\n/*\\nUse the modern Firefox focus style for all focusable elements.\\n*/\\n:-moz-focusring {\\n  outline: auto;\\n}\\n/*\\nRemove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)\\n*/\\n:-moz-ui-invalid {\\n  box-shadow: none;\\n}\\n/*\\nAdd the correct vertical alignment in Chrome and Firefox.\\n*/\\nprogress {\\n  vertical-align: baseline;\\n}\\n/*\\nCorrect the cursor style of increment and decrement buttons in Safari.\\n*/\\n::-webkit-inner-spin-button,\\n::-webkit-outer-spin-button {\\n  height: auto;\\n}\\n/*\\n1. Correct the odd appearance in Chrome and Safari.\\n2. Correct the outline style in Safari.\\n*/\\n[type='search'] {\\n  -webkit-appearance: textfield; /* 1 */\\n  outline-offset: -2px; /* 2 */\\n}\\n/*\\nRemove the inner padding in Chrome and Safari on macOS.\\n*/\\n::-webkit-search-decoration {\\n  -webkit-appearance: none;\\n}\\n/*\\n1. Correct the inability to style clickable types in iOS and Safari.\\n2. Change font properties to `inherit` in Safari.\\n*/\\n::-webkit-file-upload-button {\\n  -webkit-appearance: button; /* 1 */\\n  font: inherit; /* 2 */\\n}\\n/*\\nAdd the correct display in Chrome and Safari.\\n*/\\nsummary {\\n  display: list-item;\\n}\\n/*\\nRemoves the default spacing and border for appropriate elements.\\n*/\\nblockquote,\\ndl,\\ndd,\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6,\\nhr,\\nfigure,\\np,\\npre {\\n  margin: 0;\\n}\\nfieldset {\\n  margin: 0;\\n  padding: 0;\\n}\\nlegend {\\n  padding: 0;\\n}\\nol,\\nul,\\nmenu {\\n  list-style: none;\\n  margin: 0;\\n  padding: 0;\\n}\\n/*\\nReset default styling for dialogs.\\n*/\\ndialog {\\n  padding: 0;\\n}\\n/*\\nPrevent resizing textareas horizontally by default.\\n*/\\ntextarea {\\n  resize: vertical;\\n}\\n/*\\n1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)\\n2. Set the default placeholder color to the user's configured gray 400 color.\\n*/\\ninput::-moz-placeholder, textarea::-moz-placeholder {\\n  opacity: 1; /* 1 */\\n  color: #9ca3af; /* 2 */\\n}\\ninput::placeholder,\\ntextarea::placeholder {\\n  opacity: 1; /* 1 */\\n  color: #9ca3af; /* 2 */\\n}\\n/*\\nSet the default cursor for buttons.\\n*/\\nbutton,\\n[role=\\\"button\\\"] {\\n  cursor: pointer;\\n}\\n/*\\nMake sure disabled buttons don't get the pointer cursor.\\n*/\\n:disabled {\\n  cursor: default;\\n}\\n/*\\n1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)\\n2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)\\n   This can trigger a poorly considered lint error in some tools but is included by design.\\n*/\\nimg,\\nsvg,\\nvideo,\\ncanvas,\\naudio,\\niframe,\\nembed,\\nobject {\\n  display: block; /* 1 */\\n  vertical-align: middle; /* 2 */\\n}\\n/*\\nConstrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)\\n*/\\nimg,\\nvideo {\\n  max-width: 100%;\\n  height: auto;\\n}\\n/* Make elements with the HTML hidden attribute stay hidden by default */\\n[hidden] {\\n  display: none;\\n}\\n*, ::before, ::after{\\n  --tw-border-spacing-x: 0;\\n  --tw-border-spacing-y: 0;\\n  --tw-translate-x: 0;\\n  --tw-translate-y: 0;\\n  --tw-rotate: 0;\\n  --tw-skew-x: 0;\\n  --tw-skew-y: 0;\\n  --tw-scale-x: 1;\\n  --tw-scale-y: 1;\\n  --tw-pan-x:  ;\\n  --tw-pan-y:  ;\\n  --tw-pinch-zoom:  ;\\n  --tw-scroll-snap-strictness: proximity;\\n  --tw-gradient-from-position:  ;\\n  --tw-gradient-via-position:  ;\\n  --tw-gradient-to-position:  ;\\n  --tw-ordinal:  ;\\n  --tw-slashed-zero:  ;\\n  --tw-numeric-figure:  ;\\n  --tw-numeric-spacing:  ;\\n  --tw-numeric-fraction:  ;\\n  --tw-ring-inset:  ;\\n  --tw-ring-offset-width: 0px;\\n  --tw-ring-offset-color: #fff;\\n  --tw-ring-color: rgb(59 130 246 / 0.5);\\n  --tw-ring-offset-shadow: 0 0 #0000;\\n  --tw-ring-shadow: 0 0 #0000;\\n  --tw-shadow: 0 0 #0000;\\n  --tw-shadow-colored: 0 0 #0000;\\n  --tw-blur:  ;\\n  --tw-brightness:  ;\\n  --tw-contrast:  ;\\n  --tw-grayscale:  ;\\n  --tw-hue-rotate:  ;\\n  --tw-invert:  ;\\n  --tw-saturate:  ;\\n  --tw-sepia:  ;\\n  --tw-drop-shadow:  ;\\n  --tw-backdrop-blur:  ;\\n  --tw-backdrop-brightness:  ;\\n  --tw-backdrop-contrast:  ;\\n  --tw-backdrop-grayscale:  ;\\n  --tw-backdrop-hue-rotate:  ;\\n  --tw-backdrop-invert:  ;\\n  --tw-backdrop-opacity:  ;\\n  --tw-backdrop-saturate:  ;\\n  --tw-backdrop-sepia:  ;\\n}\\n::backdrop{\\n  --tw-border-spacing-x: 0;\\n  --tw-border-spacing-y: 0;\\n  --tw-translate-x: 0;\\n  --tw-translate-y: 0;\\n  --tw-rotate: 0;\\n  --tw-skew-x: 0;\\n  --tw-skew-y: 0;\\n  --tw-scale-x: 1;\\n  --tw-scale-y: 1;\\n  --tw-pan-x:  ;\\n  --tw-pan-y:  ;\\n  --tw-pinch-zoom:  ;\\n  --tw-scroll-snap-strictness: proximity;\\n  --tw-gradient-from-position:  ;\\n  --tw-gradient-via-position:  ;\\n  --tw-gradient-to-position:  ;\\n  --tw-ordinal:  ;\\n  --tw-slashed-zero:  ;\\n  --tw-numeric-figure:  ;\\n  --tw-numeric-spacing:  ;\\n  --tw-numeric-fraction:  ;\\n  --tw-ring-inset:  ;\\n  --tw-ring-offset-width: 0px;\\n  --tw-ring-offset-color: #fff;\\n  --tw-ring-color: rgb(59 130 246 / 0.5);\\n  --tw-ring-offset-shadow: 0 0 #0000;\\n  --tw-ring-shadow: 0 0 #0000;\\n  --tw-shadow: 0 0 #0000;\\n  --tw-shadow-colored: 0 0 #0000;\\n  --tw-blur:  ;\\n  --tw-brightness:  ;\\n  --tw-contrast:  ;\\n  --tw-grayscale:  ;\\n  --tw-hue-rotate:  ;\\n  --tw-invert:  ;\\n  --tw-saturate:  ;\\n  --tw-sepia:  ;\\n  --tw-drop-shadow:  ;\\n  --tw-backdrop-blur:  ;\\n  --tw-backdrop-brightness:  ;\\n  --tw-backdrop-contrast:  ;\\n  --tw-backdrop-grayscale:  ;\\n  --tw-backdrop-hue-rotate:  ;\\n  --tw-backdrop-invert:  ;\\n  --tw-backdrop-opacity:  ;\\n  --tw-backdrop-saturate:  ;\\n  --tw-backdrop-sepia:  ;\\n}\\n.absolute{\\n  position: absolute;\\n}\\n.right-5{\\n  right: 1.25rem;\\n}\\n.top-5{\\n  top: 1.25rem;\\n}\\n.rounded{\\n  border-radius: 0.25rem;\\n}\\n.bg-cyberpunkBlack{\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(0 0 0 / var(--tw-bg-opacity));\\n}\\n.bg-cyberpunkYellow{\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(254 255 5 / var(--tw-bg-opacity));\\n}\\n.px-6{\\n  padding-left: 1.5rem;\\n  padding-right: 1.5rem;\\n}\\n.py-3{\\n  padding-top: 0.75rem;\\n  padding-bottom: 0.75rem;\\n}\\n.font-cyberpunk{\\n  font-family: Orbitron, sans-serif;\\n}\\n.font-bold{\\n  font-weight: 700;\\n}\\n.text-cyberpunkBlack{\\n  --tw-text-opacity: 1;\\n  color: rgb(0 0 0 / var(--tw-text-opacity));\\n}\\n.text-cyberpunkYellow{\\n  --tw-text-opacity: 1;\\n  color: rgb(254 255 5 / var(--tw-text-opacity));\\n}\\n.opacity-75{\\n  opacity: 0.75;\\n}\\n.transition{\\n  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;\\n  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;\\n  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;\\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\\n  transition-duration: 150ms;\\n}\\n.duration-300{\\n  transition-duration: 300ms;\\n}\\n\\n.button-connect-wallet {\\n  width: 8em;\\n  padding: 0.1em 0.4em;\\n  background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent background */\\n  color: #FEFF05; /* Cyberpunk Yellow text */\\n  border: 2px solid #FEFF05; /* Cyberpunk Yellow border */\\n  font-weight: bold;\\n  font-size: 0.7em;\\n  opacity: 0.95;\\n  border-radius: 5px;\\n  transition: background-color 0.3s, color 0.3s, border 0.3s, opacity 0.3s;\\n}\\n\\n.button-connect-wallet:hover {\\n  background-color: #FEFF05; /* Cyberpunk Yellow background */\\n  color: #000000; /* Make text color match the background color for 'transparent' effect */\\n  border-color: transparent; /* Optional: make border transparent on hover */\\n  opacity: 0.95;\\n}\\n\\n.vertical-button {\\n  width: 2em;\\n  padding: 0.1em 0.4em;\\n  background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent background */\\n  color: #FEFF05; /* Cyberpunk Yellow text */\\n  border: 2px solid #FEFF05; /* Cyberpunk Yellow border */\\n  font-weight: bold;\\n  opacity: 0.95;\\n  border-radius: 5px;\\n  transition: background-color 0.3s, color 0.3s, border 0.3s, opacity 0.3s;\\n}\\n\\n.vertical-button:hover {\\n  background-color: #FEFF05; /* Cyberpunk Yellow background */\\n  color: #000000; /* Make text color match the background color for 'transparent' effect */\\n  border-color: transparent; /* Optional: make border transparent on hover */\\n  opacity: 0.95;\\n}\\n\\n:root {\\n  --foreground-rgb: 0, 0, 0;\\n  --background-start-rgb: 214, 219, 220;\\n  --background-end-rgb: 255, 255, 255;\\n}\\n\\n@media (prefers-color-scheme: dark) {\\n  :root {\\n    --foreground-rgb: 255, 255, 255;\\n    --background-start-rgb: 0, 0, 0;\\n    --background-end-rgb: 0, 0, 0;\\n  }\\n}\\n\\nbody {\\n  font-family: 'Orbitron', sans-serif;\\n  background-color: #000000; /* Cyberpunk Black */\\n  color: #FEFF05; /* Cyberpunk Yellow */\\n}\\n\\n.ufo {\\n  position: absolute;\\n  /* Adjust size as needed */\\n}\\n\\n.ufo1 {\\n  animation: ufo1Animation 5s linear infinite;\\n  width: 7em; /* Adjust size as needed */\\n}\\n\\n@keyframes ufo1Animation {\\n  0% { right: 0%; }\\n  100% { right: 200%; }\\n}\\n\\n.ufo2 {\\n  position: absolute;\\n  width: 80px; /* Adjust size as needed */\\n  top: 10px; /* Start just off the top of the screen */\\n  left: -100px; /* Start off-screen to the left */\\n  opacity: 0; /* Initially hidden */\\n  animation: none; /* No animation initially */\\n}\\n\\n@keyframes ufo2Animation {\\n  0%, 100% { left: -100px; opacity: 0; }\\n  25%, 75% { left: 120px; opacity: 1; } /* Adjust as needed */\\n}\\n\\n@keyframes bombAnimation {\\n  0%, 100% { opacity: 0; }\\n  50% { opacity: 1; }\\n}\\n\\n.bomb {\\n  position: absolute;\\n  animation: bombAnimation 1.7s linear;\\n  width: 28px; /* Adjust size as needed */\\n  opacity: 0.8;\\n}\\n\\n.neon-title-main {\\n  padding-top: 0.2em;\\n  font-size: 2em; /* Adjust the size as needed */\\n  text-align: center; /* Center align the title */\\n  margin: 0 auto; /* Center the title block if needed */\\n  display: block;\\n  opacity: 0.96;\\n}\\n.neon-title-main:hover {\\n  font-size: 2.01em; /* Adjust the size as needed */\\n  text-align: center; /* Center align the title */\\n  margin: 0 auto; /* Center the title block if needed */\\n  display: block;\\n  opacity: 0.98;\\n  filter: brightness(130%) contrast(130%);\\n}\\n\\n/* Neon glow effect for the title */\\n.neon-title {\\n  text-shadow:\\n    0 0 1px rgba(254, 255, 5, 0.7), /* Slightly transparent */\\n    0 0 2px rgba(254, 255, 5, 0.5),\\n    0 0 4px rgba(254, 255, 5, 0.4);\\n}\\n\\n.neon-value {\\n  color: #e9f1ff;\\n  opacity: 0.9;\\n  text-shadow:\\n    0 0 1px rgba(233,241,255, 0.7), /* Slightly transparent */\\n    0 0 2px rgba(233,241,255, 0.5),\\n    0 0 4px rgba(233,241,255, 0.4);\\n}\\n\\n\\n/* Neon glow effect for the button */\\n.neon-button, .vertical-button {\\n  box-shadow:\\n    0 0 1px rgba(254, 255, 5, 0.7),\\n    0 0 2px rgba(254, 255, 5, 0.5),\\n    0 0 4px rgba(254, 255, 5, 0.4);\\n}\\n\\n.neon-button:hover {\\n  background-color: #FEFF05; /* Cyberpunk Yellow background */\\n  color: #000000; /* Make text color match the background color for 'transparent' effect */\\n  border-color: transparent; /* Optional: make border transparent on hover */\\n  opacity: 0.95;\\n}\\n\\n.title-button-container {\\n  position: fixed; /* Fixed position at the top */\\n  top: 0; /* Align to the top of the screen */\\n  left: 0; /* Align to the left of the screen */\\n  width: 100%; /* Stretch across the full width */\\n\\n  z-index: 1000; /* Ensure it's above other elements */\\n  display: flex;\\n  justify-content: space-between; /* Keep existing alignment */\\n  align-items: center;\\n  padding: 1em; /* Add some padding */\\n}\\n\\n.invisible-spacer {\\n  visibility: hidden;\\n}\\n\\n.invisible-button-spacer {\\n  width: same-as-button; /* Replace with the width of your button */\\n  height: same-as-button; /* Replace with the height of your button */\\n  visibility: hidden; /* Make the spacer invisible */\\n}\\n\\n@keyframes flickerAnimation {\\n  0%, 100% { filter: brightness(97%) contrast(103%); }\\n  20% { filter: brightness(99%) contrast(98%); }\\n  40% { filter: brightness(95%) contrast(105%); }\\n  60% { filter: brightness(99%) contrast(98%); }\\n  80% { filter: brightness(95%) contrast(105%); }\\n}\\n\\n.main-background {\\n  animation: flickerAnimation 8s infinite;\\n  display: flex;\\n  padding-top: 5em; /* Add padding to the top equal to the height of the title bar */\\n  flex-direction: column;\\n  justify-content: center; /* Center vertically */\\n  align-items: center; /* Center horizontally */\\n  min-height: 100vh;\\n}\\n\\n.notification-text {\\n  display: inline; /* Ensure inline display */\\n  white-space: nowrap; /* Prevent line breaks within the text */\\n}\\n\\n.wallet-address {\\n  /* Add styles similar to your other text elements */\\n  font-size: 0.77em; /* Adjust as needed */\\n  color: #FEFF05; /* Cyberpunk Yellow */\\n  /* Add any other styles to match the page's theme */\\n}\\n\\n.coins-container {\\n  display: flex;\\n  flex-wrap: wrap;\\n  justify-content: center; /* Keep coins centered */\\n  gap: 0.1em; /* Adjust based on your layout */\\n  flex-basis: 15%; /* Adjust if necessary but might not be needed */\\n  max-width: 80%; \\n  position: relative;\\n  padding: 0.2em; /* Add some padding around the coins */\\n  border-radius: 8px; /* Optional: adds rounded corners */\\n  background-color: rgba(211, 211, 211, 0.45);\\n}\\n\\n.coin-image-container {\\n  width: 5.8em; /* Diameter of the circle */\\n  height: 5.8em; /* Diameter of the circle */\\n  border-radius: 50%; /* Makes it a circle */\\n  overflow: hidden; /* Hides the overflow to maintain the circle shape */\\n  display: flex;\\n  opacity: 0.9;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.coin-image {\\n  width: 100%; /* Fill the container */\\n  height: 100%;\\n  border-radius: 50%;\\n  -o-object-fit: cover;\\n     object-fit: cover; /* Ensure the image covers the container */\\n  image-rendering: pixelated; /* Creates a pixelated effect */\\n  opacity: 0.82;\\n  filter: brightness(97%) contrast(115%);\\n  transition: box-shadow 0.3s ease-in-out, opacity 0.3s ease-in-out; /* Smooth transition for glow and opacity */\\n}\\n\\n.coin-image:hover {\\n  box-shadow: 0 0 15px 5px rgba(255, 255, 255, 0.6); /* White glow */\\n  opacity: 0.99; /* Increase opacity on hover for emphasis */\\n  filter: brightness(105%) contrast(145%);\\n}\\n\\n.gif-overlay {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  -o-object-fit: cover;\\n     object-fit: cover; /* Cover the coin image */\\n}\\n\\n.coin {\\n  width: 6em;\\n  height: 9em;\\n  display: flex;\\n  flex-direction: column;\\n  margin: 0.1em;\\n  align-items: center;\\n  text-align: center;\\n  background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent grey */\\n  border-radius: 8px; /* Optional: for rounded corners */\\n  padding: 0.1em; /* Optional: for some space inside the container */\\n}\\n\\n.coin:hover {\\n  width: 6em;\\n  height: 9em;\\n  margin: 0.1em;\\n  text-align: center;\\n  background-color: rgba(0, 0, 0, 0.75); /* Semi-transparent grey */\\n  border-radius: 8px; /* Optional: for rounded corners */\\n  padding: 0.2em; /* Optional: for some space inside the container */\\n}\\n\\n\\n.coin-name {\\n  width: 6em; /* Match the width of the image */\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  font-size: 1em;\\n  opacity: 0.9;\\n}\\n\\n.coin-name:hover {\\n  width: 6em; /* Match the width of the image */\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  font-size: 1em;\\n  opacity: 0.97;\\n}\\n\\n.coin-value {\\n  font-size: 0.8em;\\n  opacity: 0.9;\\n}\\n\\n.coin-value:hover {\\n  font-size: 0.8em;\\n  opacity: 0.97;\\n}\\n\\n#background-video {\\n  width: 100vw;\\n  height: 100vh;\\n  -o-object-fit: cover;\\n     object-fit: cover;\\n  position: fixed;\\n  left: 0;\\n  right: 0;\\n  top: 0;\\n  bottom: 0;\\n  z-index: -1;\\n}\\n\\n.robot-gif {\\n  position: absolute;\\n  bottom: 85%; /* Place the bottom of the robot at the top of the watermark */\\n  width: 4em; /* Adjust size as needed */\\n  height: auto;\\n}\\n\\n.watermark {\\n  position: fixed; /* Fixed position relative to the viewport */\\n  bottom: 1%; /* Distance from the bottom */\\n  right: 1%; /* Distance from the right */\\n  width: 160px; /* Adjust the width as needed */\\n  height: auto; /* Maintain aspect ratio */\\n  z-index: 1000; /* Ensure it's above other elements */\\n  filter: brightness(98%) contrast(120%);\\n  opacity: 0.87; /* Adjust opacity as needed */\\n  display: flex; /* Use flexbox to center child elements */\\n  justify-content: center; /* Center horizontally */\\n  align-items: end; /* Align at the bottom */\\n}\\n\\n.watermark:hover {\\n  position: fixed; /* Fixed position relative to the viewport */\\n  bottom: 0%; /* Distance from the bottom */\\n  right: 1%; /* Distance from the right */\\n  width: 240px; /* Adjust the width as needed */\\n  filter: brightness(100%) contrast(140%);\\n  height: auto; /* Maintain aspect ratio */\\n  z-index: 1000; /* Ensure it's above other elements */\\n  opacity: 0.94; /* Adjust opacity as needed */\\n  transition: 0.5s ease-in-out;\\n}\\n\\n.watermark2 {\\n  position: fixed; /* Fixed position relative to the viewport */\\n  bottom: 0%; /* Distance from the bottom */\\n  left: 0%; /* Distance from the left, changed from right to left */\\n  width: 160px; /* Adjust the width as needed */\\n  height: auto; /* Maintain aspect ratio */\\n  z-index: 1000; /* Ensure it's above other elements */\\n  filter: brightness(98%) contrast(120%);\\n  opacity: 0.87; /* Adjust opacity as needed */\\n  display: middle; /* Use flexbox to center child elements */\\n  justify-content: right; /* Center horizontally */\\n  align-items: right; /* Align at the bottom */\\n}\\n\\n.watermark2:hover {\\n  position: fixed; /* Fixed position relative to the viewport */\\n  bottom: 0%; /* Distance from the bottom */\\n  left: 0%; /* Distance from the left, changed from right to left */\\n  width: 240px; /* Adjust the width as needed */\\n  filter: brightness(100%) contrast(140%);\\n  height: auto; /* Maintain aspect ratio */\\n  z-index: 1000; /* Ensure it's above other elements */\\n  opacity: 0.94; /* Adjust opacity as needed */\\n  transition: 0.5s ease-in-out;\\n}\\n\\n.ape-gif {\\n  position: absolute;\\n  bottom: 90%; /* Place the bottom of the robot at the top of the watermark */\\n  left: 28%;\\n  width: 4.5em; /* Adjust size as needed */\\n  height: auto;\\n}\\n\\n.vertical-button{\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  font-weight: bold;\\n  writing-mode: horizontal-tb;\\n  text-orientation: upright;\\n  position: fixed; /* Fixed position to place them on the sides */\\n  z-index: 10; /* Ensure they're above other elements */\\n}\\n\\n.button-make {\\n  width: 2em;\\n  padding: 0.1em 0.4em;\\n  background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent background */\\n  color: #FEFF05; /* Cyberpunk Yellow text */\\n  border: 2px solid #FEFF05; /* Cyberpunk Yellow border */\\n  font-weight: bold;\\n  opacity: 0.95;\\n  border-radius: 5px;\\n  transition: background-color 0.3s, color 0.3s, border 0.3s, opacity 0.3s;\\n}\\n\\n.button-make:hover {\\n  background-color: #FEFF05; /* Cyberpunk Yellow background */\\n  color: #000000; /* Make text color match the background color for 'transparent' effect */\\n  border-color: transparent; /* Optional: make border transparent on hover */\\n  opacity: 0.95;\\n}\\n\\n.button-make {\\n  box-shadow:\\n    0 0 1px rgba(254, 255, 5, 0.7),\\n    0 0 2px rgba(254, 255, 5, 0.5),\\n    0 0 4px rgba(254, 255, 5, 0.4);\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  font-weight: bold;\\n  writing-mode: horizontal-tb;\\n  text-orientation: upright;\\n  position: fixed; /* Fixed position to place them on the sides */\\n  z-index: 10; /* Ensure they're above other elements */\\n  left: 0.5em; /* Adjust as necessary for spacing from the left edge */\\n  top: 50%; /* Center vertically */\\n  transform: translateY(-50%); /* Adjust vertical centering */\\n}\\n\\n.button-take {\\n  width: 2em;\\n  padding: 0.1em 0.4em;\\n  background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent background */\\n  color: #FEFF05; /* Cyberpunk Yellow text */\\n  border: 2px solid #FEFF05; /* Cyberpunk Yellow border */\\n  font-weight: bold;\\n  opacity: 0.95;\\n  border-radius: 5px;\\n  transition: background-color 0.3s, color 0.3s, border 0.3s, opacity 0.3s;\\n}\\n\\n.button-take:hover {\\n  background-color: #FEFF05; /* Cyberpunk Yellow background */\\n  color: #000000; /* Make text color match the background color for 'transparent' effect */\\n  border-color: transparent; /* Optional: make border transparent on hover */\\n  opacity: 0.95;\\n}\\n\\n.button-take {\\n  box-shadow:\\n    0 0 1px rgba(254, 255, 5, 0.7),\\n    0 0 2px rgba(254, 255, 5, 0.5),\\n    0 0 4px rgba(254, 255, 5, 0.4);\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  font-weight: bold;\\n  writing-mode: horizontal-tb;\\n  text-orientation: upright;\\n  position: fixed; /* Fixed position to place them on the sides */\\n  z-index: 10; /* Ensure they're above other elements */\\n  right: 0.5em; /* Adjust as necessary for spacing from the right edge */\\n  top: 50%; /* Center vertically */\\n  transform: translateY(-50%); /* Adjust vertical centering */\\n}\\n\\n.sort-dropdown {\\n  background-color: transparent;\\n  color: #FEFF05; /* Yellow text */\\n  border: 2px solid #FEFF05; /* Yellow border */\\n  padding: 8px;\\n  cursor: pointer;\\n}\\n\\n.sort-dropdown:hover {\\n  background-color: #FEFF05; /* Yellow background */\\n  color: black; /* Black text */\\n}\\n\\n.sort-dropdown option {\\n  background-color: #000000; /* Cyberpunk Black for options */\\n  color: #FEFF05; /* Cyberpunk Yellow text for options */\\n  font-family: 'Orbitron'; /* Match the font with the rest of the site */\\n}\\n\\n.coins-section {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center; /* Ensure the section is centered */\\n  width: 100%;\\n  padding-bottom: 7em;\\n}\\n\\n.selector-container {\\n  margin-bottom: 0.5em; /* Space between the selector and the coins */\\n  margin-left: 10%;\\n  align-self: flex-start; /* Align the dropdown selector */\\n  width: 15%; \\n  background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent grey */\\n  border-radius: 10px; /* Rounded corners for the container */\\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* Optional: Adds a subtle shadow for depth */\\n  z-index: 1000;\\n}\\n.selector-container:hover {\\n  background-color: rgba(0, 0, 0, 0.75); /* Darker semi-transparent grey on hover */\\n}\\n\\n.custom-react-select-container:hover .custom-react-select__control {\\n  background-color: #FEFF05; /* Yellow background on hover */\\n  color: #000000; /* Black text on hover */\\n}\\n\\n.custom-react-select-container:hover .custom-react-select__single-value {\\n  color: #000000; /* Ensure text color changes to black on hover */\\n}\\n\\n.grave-button {\\n  padding: 6px 12px;\\n  background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent background */\\n  color: #FEFF05; /* Cyberpunk Yellow */\\n  border: 2px solid #FEFF05;\\n  font-weight: bold;\\n  opacity: 0.95;\\n  border-radius: 5px;\\n  transition: background-color 0.3s, color 0.3s, border 0.3s;\\n  cursor: pointer;\\n  text-align: center;\\n  display: inline-block; /* or 'block' if you prefer */\\n}\\n\\n.grave-button:hover {\\n  background-color: #FEFF05;\\n  color: #000000;\\n  border-color: transparent;\\n}\\n\\n.graveyard-button-container {\\n  position: fixed;\\n  display: flex;\\n  justify-content: center;\\n  margin-top: 50px; /* Adjust the space above the button */\\n  bottom: 2%; /* Distance from the bottom */\\n  width: 35%;\\n}\\n\\n.graveyard-coin-image {\\n  filter: grayscale(50%) brightness(75%);\\n  transition: filter 0.3s ease;\\n}\\n\\n.graveyard-coin-image:hover {\\n  filter: grayscale(25%) brightness(90%);\\n}\\n\\n.grave-value {\\n  font-size: 0.6em;\\n  color: #ffa4a8;\\n  opacity: 0.9;\\n  text-shadow:\\n    0 0 1px rgba(255,164,168, 0.7), /* Slightly transparent */\\n    0 0 2px rgba(255,164,168, 0.5),\\n    0 0 4px rgba(255,164,168, 0.4);\\n}\\n\\n\\n:root {\\n  --scale-factor: 1; /* Default scale factor */\\n  --spotlight-size-base: 100px; /* Base size of the spotlight */\\n\\n}\\n\\n@media (max-width: 768px) {\\n  .spotlight, .dogedance .spotlight {\\n    width: calc(var(--spotlight-size-base) * 0.75); /* Scale down the size for medium screens */\\n    height: calc(var(--spotlight-size-base) * 0.75); /* Scale down the size for medium screens */\\n  }\\n  :root {\\n    --scale-factor: 0.75; /* Scale down to 75% on medium screens */\\n  }\\n}\\n\\n@media (max-width: 480px) {\\n  .spotlight, .dogedance .spotlight {\\n    width: calc(var(--spotlight-size-base) * 0.5); /* Scale down the size for small screens */\\n    height: calc(var(--spotlight-size-base) * 0.5); /* Scale down the size for small screens */\\n  }\\n  :root {\\n    --scale-factor: 0.5; /* Scale down to 50% on small screens */\\n  }\\n}\\n\\n.dancehall {\\n  position: relative;\\n  width: 100%;\\n  min-height: 100vh;\\n  overflow: hidden;\\n}\\n\\n.dancehall-background {\\n  position: absolute;\\n  width: 100%;\\n  height: 100%;\\n  z-index: -1;\\n}\\n\\n.gifs-container {\\n  position: absolute;\\n  left: 25%; /* Start of the dance floor */\\n  right: 25%; /* End of the dance floor */\\n  bottom: 10%; /* Bottom of the dance floor */\\n  top: 70%; /* Top of the dance floor */\\n  display: flex;\\n  flex-wrap: wrap;\\n  align-content: flex-end;\\n  justify-content: space-around;\\n}\\n\\n.gif {\\n  position: absolute;\\n  transition: transform 0.3s ease, filter 0.3s ease;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.gif:hover {\\n  transform: scale(1.15); /* Increase size */\\n  filter: brightness(1.25) contrast(1.2); /* Make it brighter */\\n}\\n\\n.spotlight {\\n  position: absolute;\\n  bottom: 0; /* Start below the GIF */\\n  left: 50%;\\n  transform: translateX(-50%) translateY(40%);\\n  width: var(--spotlight-size-base);\\n  height: var(--spotlight-size-base);\\n  border-radius: 50%;\\n  background: rgba(255, 255, 255, 0.25); /* Semi-transparent white for the spotlight effect */\\n  z-index: -1; /* Ensure it's under the GIF */\\n  transition: width 0.3s ease, height 0.3s ease; /* Smooth transition for resizing */\\n}\\n\\n.special-spotlight {\\n  bottom: -20%; /* Adjust for dogedance.gif to move the spotlight lower */\\n}\\n\\n.dogedance .spotlight {\\n  bottom: -30%; /* Lower the spotlight for the dogedance.gif */\\n  transform: translateX(-50%) translateY(50%); /* Adjust specifically for dogedance.gif */\\n}\\n\\n.home-button-container {\\n  position: fixed;\\n  left: 50%;\\n  bottom: 3%;\\n  transform: translateX(-50%);\\n  z-index: 100; /* Adjust as needed to ensure it's above other elements */\\n}\\n\\n.home-button {\\n  padding: 6px 12px;\\n  background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent background */\\n  color: #FEFF05; /* Cyberpunk Yellow text */\\n  border: 2px solid #FEFF05; /* Cyberpunk Yellow border */\\n  font-weight: bold;\\n  opacity: 0.95;\\n  left: 0;\\n  right: 0;\\n  bottom: 0%; /* Adjust this value as needed to move the button lower */ \\n  border-radius: 5px;\\n  transition: background-color 0.3s, color 0.3s, border 0.3s;\\n  text-align: center;\\n  display: inline-block; /* Ensures the link behaves like a button */\\n}\\n\\n.home-button:hover {\\n  background-color: #FEFF05; /* Cyberpunk Yellow background on hover */\\n  color: #000000; /* Text color on hover */\\n  border-color: transparent; /* Border color on hover */\\n}\\n\\n.song-selector-container {\\n  position: fixed;\\n  left: 10%;\\n  top: 40%;\\n  transform: translateY(-50%);\\n  z-index: 100;\\n  align-self: flex-start; /* Align the dropdown selector */\\n  width: 20%; \\n  background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent grey */\\n  border-radius: 10px; /* Rounded corners for the container */\\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* Optional: Adds a subtle shadow for depth */\\n}\\n\\n.song-selector {\\n  background-color: rgba(0, 0, 0, 0.8);\\n  color: #FEFF05; /* Cyberpunk Yellow */\\n  border: 1px solid #FEFF05; /* Cyberpunk Yellow border */\\n  font-family: 'Orbitron', sans-serif;\\n  padding: 10px;\\n  border-radius: 5px;\\n  cursor: pointer;\\n  opacity: 0.95;\\n}\\n\\n.song-selector:hover {\\n  filter: brightness(1.2);\\n}\\n/* globals.css */\\n.elonGif {\\n  position: fixed;\\n  bottom: 0;\\n  width: 15%; /* Adjust based on your preference */\\n  height: 10%; /* Example height */\\n  z-index: 1; /* Adjust based on layering needs */\\n}\\n.filledZoomGif {\\n  position: fixed;\\n  bottom: 0;\\n  width: 12%; /* Adjust based on your preference */\\n  height: 12%; /* Example height */\\n  z-index: 1; /* Adjust based on layering needs */\\n}\\n.pepeImage {\\n  position: fixed;\\n  bottom: 0;\\n  width: 11%; /* Adjust based on your preference */\\n  height: 11%; /* Example height */\\n  z-index: 1; /* Adjust based on layering needs */\\n}\\n.eggdogImage {\\n  position: fixed;\\n  bottom: 0;\\n  width: 11%; /* Adjust based on your preference */\\n  height: 11%; /* Example height */\\n  z-index: 1; /* Adjust based on layering needs */\\n}\\n\\n.leftImage {\\n  position: fixed;\\n  bottom: 0;\\n  width: 28%; /* Adjust based on your preference */\\n  height: 12%; /* Example height */\\n  z-index: 1; /* Adjust based on layering needs */\\n}\\n\\n.rightImage {\\n  position: fixed;\\n  bottom: 0;\\n  width: 20%; /* Adjust based on your preference */\\n  height: 13%; /* Example height */\\n  z-index: 23; /* Adjust based on layering needs */\\n}\\n\\n.leftImage {\\n  left: 10%;\\n}\\n\\n.rightImage {\\n  right: 10%;\\n  z-index: 3;\\n}\\n\\n.elonGif {\\n  right: 20%; /* Position to the left of right.png */\\n  z-index: 2;\\n}\\n\\n.filledZoomGif {\\n  left: 29%; /* Position to the right of left.png */\\n  z-index: 2;\\n}\\n\\n.pepeImage {\\n  right: 15%;\\n  top: 70%;\\n  z-index: 2;\\n}\\n\\n.eggdogImage {\\n  left: 15%;\\n  top: 70%;\\n  z-index: 2;\\n}\\n\\n\\n.leftImage:hover, .rightImage:hover, .elonGif:hover, .filledZoomGif:hover, .pepeImage:hover, .eggdogImage:hover {\\n  /* Increase size */\\n  transform: scale(1.1);\\n  transition: transform 0.3s ease, filter 0.3s ease;\\n\\n  /* Glow effect */\\n  filter: drop-shadow(0 0 8px #FEFF05) drop-shadow(0 0 12px #FEFF05);\\n  z-index: 10; /* Ensure the hovered element is above others */\\n}\\n\\n/* Ensure the transform origin is the bottom center for a natural growth effect */\\n.leftImage, .rightImage, .elonGif, .filledZoomGif, .pepeImage, .eggdogImage {\\n  transition: transform 0.3s ease, filter 0.3s ease; /* Smooth transition for transform and filter */\\n  transform-origin: bottom center; /* Grow from the bottom */\\n}\\n\\n.ape-gif:hover {\\n  filter: brightness(1.2) drop-shadow(0 0 10px #FEFF05); /* Glow effect */\\n  transition: filter 0.3s ease;\\n}\\n\\n.ape-container:hover {\\n  cursor: url('/special-cursor.png'), auto;\\n}\\n\\n.ape-container:hover .ape-gif {\\n  filter: brightness(1.2) drop-shadow(0 0 10px #FEFF05); /* Glow effect */\\n  transform: scale(1.1); /* Slight increase in size */\\n  transition: filter 0.3s ease, transform 0.3s ease; /* Smooth transition */\\n}\\n\\n.title-background {\\n  display: inline-block; /* or 'block' depending on your layout */\\n  background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent black */\\n  border-radius: 8px; /* Adjust as needed for rounded corners */\\n  padding: 5px; /* Adjust padding to control the space around the text */\\n  color: #FEFF05; /* Example text color, adjust as needed */\\n  margin: 0 auto; /* Center the title if needed */\\n  text-align: center; /* Center text within the background */\\n}\\n\\n.hover\\\\:opacity-100:hover{\\n  opacity: 1;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://src/styles/globals.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"@import url('https://fonts.googleapis.com/css2?family=Orbitron&display=swap');\\n@tailwind base;\\n@tailwind components;\\n@tailwind utilities;\\n\\n.button-connect-wallet {\\n  width: 8em;\\n  padding: 0.1em 0.4em;\\n  background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent background */\\n  color: #FEFF05; /* Cyberpunk Yellow text */\\n  border: 2px solid #FEFF05; /* Cyberpunk Yellow border */\\n  font-weight: bold;\\n  font-size: 0.7em;\\n  opacity: 0.95;\\n  border-radius: 5px;\\n  transition: background-color 0.3s, color 0.3s, border 0.3s, opacity 0.3s;\\n}\\n\\n.button-connect-wallet:hover {\\n  background-color: #FEFF05; /* Cyberpunk Yellow background */\\n  color: #000000; /* Make text color match the background color for 'transparent' effect */\\n  border-color: transparent; /* Optional: make border transparent on hover */\\n  opacity: 0.95;\\n}\\n\\n.vertical-button {\\n  width: 2em;\\n  padding: 0.1em 0.4em;\\n  background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent background */\\n  color: #FEFF05; /* Cyberpunk Yellow text */\\n  border: 2px solid #FEFF05; /* Cyberpunk Yellow border */\\n  font-weight: bold;\\n  opacity: 0.95;\\n  border-radius: 5px;\\n  transition: background-color 0.3s, color 0.3s, border 0.3s, opacity 0.3s;\\n}\\n\\n.vertical-button:hover {\\n  background-color: #FEFF05; /* Cyberpunk Yellow background */\\n  color: #000000; /* Make text color match the background color for 'transparent' effect */\\n  border-color: transparent; /* Optional: make border transparent on hover */\\n  opacity: 0.95;\\n}\\n\\n:root {\\n  --foreground-rgb: 0, 0, 0;\\n  --background-start-rgb: 214, 219, 220;\\n  --background-end-rgb: 255, 255, 255;\\n}\\n\\n@media (prefers-color-scheme: dark) {\\n  :root {\\n    --foreground-rgb: 255, 255, 255;\\n    --background-start-rgb: 0, 0, 0;\\n    --background-end-rgb: 0, 0, 0;\\n  }\\n}\\n\\nbody {\\n  font-family: 'Orbitron', sans-serif;\\n  background-color: #000000; /* Cyberpunk Black */\\n  color: #FEFF05; /* Cyberpunk Yellow */\\n}\\n\\n\\n@layer utilities {\\n  .text-balance {\\n    text-wrap: balance;\\n  }\\n}\\n\\n.ufo {\\n  position: absolute;\\n  /* Adjust size as needed */\\n}\\n\\n.ufo1 {\\n  animation: ufo1Animation 5s linear infinite;\\n  width: 7em; /* Adjust size as needed */\\n}\\n\\n@keyframes ufo1Animation {\\n  0% { right: 0%; }\\n  100% { right: 200%; }\\n}\\n\\n.ufo2 {\\n  position: absolute;\\n  width: 80px; /* Adjust size as needed */\\n  top: 10px; /* Start just off the top of the screen */\\n  left: -100px; /* Start off-screen to the left */\\n  opacity: 0; /* Initially hidden */\\n  animation: none; /* No animation initially */\\n}\\n\\n@keyframes ufo2Animation {\\n  0%, 100% { left: -100px; opacity: 0; }\\n  25%, 75% { left: 120px; opacity: 1; } /* Adjust as needed */\\n}\\n\\n@keyframes bombAnimation {\\n  0%, 100% { opacity: 0; }\\n  50% { opacity: 1; }\\n}\\n\\n.bomb {\\n  position: absolute;\\n  animation: bombAnimation 1.7s linear;\\n  width: 28px; /* Adjust size as needed */\\n  opacity: 0.8;\\n}\\n\\n.neon-title-main {\\n  padding-top: 0.2em;\\n  font-size: 2em; /* Adjust the size as needed */\\n  text-align: center; /* Center align the title */\\n  margin: 0 auto; /* Center the title block if needed */\\n  display: block;\\n  opacity: 0.96;\\n}\\n.neon-title-main:hover {\\n  font-size: 2.01em; /* Adjust the size as needed */\\n  text-align: center; /* Center align the title */\\n  margin: 0 auto; /* Center the title block if needed */\\n  display: block;\\n  opacity: 0.98;\\n  filter: brightness(130%) contrast(130%);\\n}\\n\\n/* Neon glow effect for the title */\\n.neon-title {\\n  text-shadow:\\n    0 0 1px rgba(254, 255, 5, 0.7), /* Slightly transparent */\\n    0 0 2px rgba(254, 255, 5, 0.5),\\n    0 0 4px rgba(254, 255, 5, 0.4);\\n}\\n\\n.neon-value {\\n  color: #e9f1ff;\\n  opacity: 0.9;\\n  text-shadow:\\n    0 0 1px rgba(233,241,255, 0.7), /* Slightly transparent */\\n    0 0 2px rgba(233,241,255, 0.5),\\n    0 0 4px rgba(233,241,255, 0.4);\\n}\\n\\n\\n/* Neon glow effect for the button */\\n.neon-button, .vertical-button {\\n  box-shadow:\\n    0 0 1px rgba(254, 255, 5, 0.7),\\n    0 0 2px rgba(254, 255, 5, 0.5),\\n    0 0 4px rgba(254, 255, 5, 0.4);\\n}\\n\\n.neon-button:hover {\\n  background-color: #FEFF05; /* Cyberpunk Yellow background */\\n  color: #000000; /* Make text color match the background color for 'transparent' effect */\\n  border-color: transparent; /* Optional: make border transparent on hover */\\n  opacity: 0.95;\\n}\\n\\n.title-button-container {\\n  position: fixed; /* Fixed position at the top */\\n  top: 0; /* Align to the top of the screen */\\n  left: 0; /* Align to the left of the screen */\\n  width: 100%; /* Stretch across the full width */\\n\\n  z-index: 1000; /* Ensure it's above other elements */\\n  display: flex;\\n  justify-content: space-between; /* Keep existing alignment */\\n  align-items: center;\\n  padding: 1em; /* Add some padding */\\n}\\n\\n.invisible-spacer {\\n  visibility: hidden;\\n}\\n\\n.invisible-button-spacer {\\n  width: same-as-button; /* Replace with the width of your button */\\n  height: same-as-button; /* Replace with the height of your button */\\n  visibility: hidden; /* Make the spacer invisible */\\n}\\n\\n@keyframes flickerAnimation {\\n  0%, 100% { filter: brightness(97%) contrast(103%); }\\n  20% { filter: brightness(99%) contrast(98%); }\\n  40% { filter: brightness(95%) contrast(105%); }\\n  60% { filter: brightness(99%) contrast(98%); }\\n  80% { filter: brightness(95%) contrast(105%); }\\n}\\n\\n.main-background {\\n  animation: flickerAnimation 8s infinite;\\n  display: flex;\\n  padding-top: 5em; /* Add padding to the top equal to the height of the title bar */\\n  flex-direction: column;\\n  justify-content: center; /* Center vertically */\\n  align-items: center; /* Center horizontally */\\n  min-height: 100vh;\\n}\\n\\n.notification-text {\\n  display: inline; /* Ensure inline display */\\n  white-space: nowrap; /* Prevent line breaks within the text */\\n}\\n\\n.wallet-address {\\n  /* Add styles similar to your other text elements */\\n  font-size: 0.77em; /* Adjust as needed */\\n  color: #FEFF05; /* Cyberpunk Yellow */\\n  /* Add any other styles to match the page's theme */\\n}\\n\\n.coins-container {\\n  display: flex;\\n  flex-wrap: wrap;\\n  justify-content: center; /* Keep coins centered */\\n  gap: 0.1em; /* Adjust based on your layout */\\n  flex-basis: 15%; /* Adjust if necessary but might not be needed */\\n  max-width: 80%; \\n  position: relative;\\n  padding: 0.2em; /* Add some padding around the coins */\\n  border-radius: 8px; /* Optional: adds rounded corners */\\n  background-color: rgba(211, 211, 211, 0.45);\\n}\\n\\n.coin-image-container {\\n  width: 5.8em; /* Diameter of the circle */\\n  height: 5.8em; /* Diameter of the circle */\\n  border-radius: 50%; /* Makes it a circle */\\n  overflow: hidden; /* Hides the overflow to maintain the circle shape */\\n  display: flex;\\n  opacity: 0.9;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.coin-image {\\n  width: 100%; /* Fill the container */\\n  height: 100%;\\n  border-radius: 50%;\\n  object-fit: cover; /* Ensure the image covers the container */\\n  image-rendering: pixelated; /* Creates a pixelated effect */\\n  opacity: 0.82;\\n  filter: brightness(97%) contrast(115%);\\n  transition: box-shadow 0.3s ease-in-out, opacity 0.3s ease-in-out; /* Smooth transition for glow and opacity */\\n}\\n\\n.coin-image:hover {\\n  box-shadow: 0 0 15px 5px rgba(255, 255, 255, 0.6); /* White glow */\\n  opacity: 0.99; /* Increase opacity on hover for emphasis */\\n  filter: brightness(105%) contrast(145%);\\n}\\n\\n.gif-overlay {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  object-fit: cover; /* Cover the coin image */\\n}\\n\\n.coin {\\n  width: 6em;\\n  height: 9em;\\n  display: flex;\\n  flex-direction: column;\\n  margin: 0.1em;\\n  align-items: center;\\n  text-align: center;\\n  background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent grey */\\n  border-radius: 8px; /* Optional: for rounded corners */\\n  padding: 0.1em; /* Optional: for some space inside the container */\\n}\\n\\n.coin:hover {\\n  width: 6em;\\n  height: 9em;\\n  margin: 0.1em;\\n  text-align: center;\\n  background-color: rgba(0, 0, 0, 0.75); /* Semi-transparent grey */\\n  border-radius: 8px; /* Optional: for rounded corners */\\n  padding: 0.2em; /* Optional: for some space inside the container */\\n}\\n\\n\\n.coin-name {\\n  width: 6em; /* Match the width of the image */\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  font-size: 1em;\\n  opacity: 0.9;\\n}\\n\\n.coin-name:hover {\\n  width: 6em; /* Match the width of the image */\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  font-size: 1em;\\n  opacity: 0.97;\\n}\\n\\n.coin-value {\\n  font-size: 0.8em;\\n  opacity: 0.9;\\n}\\n\\n.coin-value:hover {\\n  font-size: 0.8em;\\n  opacity: 0.97;\\n}\\n\\n#background-video {\\n  width: 100vw;\\n  height: 100vh;\\n  object-fit: cover;\\n  position: fixed;\\n  left: 0;\\n  right: 0;\\n  top: 0;\\n  bottom: 0;\\n  z-index: -1;\\n}\\n\\n.robot-gif {\\n  position: absolute;\\n  bottom: 85%; /* Place the bottom of the robot at the top of the watermark */\\n  width: 4em; /* Adjust size as needed */\\n  height: auto;\\n}\\n\\n.watermark {\\n  position: fixed; /* Fixed position relative to the viewport */\\n  bottom: 1%; /* Distance from the bottom */\\n  right: 1%; /* Distance from the right */\\n  width: 160px; /* Adjust the width as needed */\\n  height: auto; /* Maintain aspect ratio */\\n  z-index: 1000; /* Ensure it's above other elements */\\n  filter: brightness(98%) contrast(120%);\\n  opacity: 0.87; /* Adjust opacity as needed */\\n  display: flex; /* Use flexbox to center child elements */\\n  justify-content: center; /* Center horizontally */\\n  align-items: end; /* Align at the bottom */\\n}\\n\\n.watermark:hover {\\n  position: fixed; /* Fixed position relative to the viewport */\\n  bottom: 0%; /* Distance from the bottom */\\n  right: 1%; /* Distance from the right */\\n  width: 240px; /* Adjust the width as needed */\\n  filter: brightness(100%) contrast(140%);\\n  height: auto; /* Maintain aspect ratio */\\n  z-index: 1000; /* Ensure it's above other elements */\\n  opacity: 0.94; /* Adjust opacity as needed */\\n  transition: 0.5s ease-in-out;\\n}\\n\\n.watermark2 {\\n  position: fixed; /* Fixed position relative to the viewport */\\n  bottom: 0%; /* Distance from the bottom */\\n  left: 0%; /* Distance from the left, changed from right to left */\\n  width: 160px; /* Adjust the width as needed */\\n  height: auto; /* Maintain aspect ratio */\\n  z-index: 1000; /* Ensure it's above other elements */\\n  filter: brightness(98%) contrast(120%);\\n  opacity: 0.87; /* Adjust opacity as needed */\\n  display: middle; /* Use flexbox to center child elements */\\n  justify-content: right; /* Center horizontally */\\n  align-items: right; /* Align at the bottom */\\n}\\n\\n.watermark2:hover {\\n  position: fixed; /* Fixed position relative to the viewport */\\n  bottom: 0%; /* Distance from the bottom */\\n  left: 0%; /* Distance from the left, changed from right to left */\\n  width: 240px; /* Adjust the width as needed */\\n  filter: brightness(100%) contrast(140%);\\n  height: auto; /* Maintain aspect ratio */\\n  z-index: 1000; /* Ensure it's above other elements */\\n  opacity: 0.94; /* Adjust opacity as needed */\\n  transition: 0.5s ease-in-out;\\n}\\n\\n.ape-gif {\\n  position: absolute;\\n  bottom: 90%; /* Place the bottom of the robot at the top of the watermark */\\n  left: 28%;\\n  width: 4.5em; /* Adjust size as needed */\\n  height: auto;\\n}\\n\\n.vertical-button {\\n  @apply flex flex-col justify-center items-center;\\n  font-weight: bold;\\n  writing-mode: horizontal-tb;\\n  text-orientation: upright;\\n  position: fixed; /* Fixed position to place them on the sides */\\n  z-index: 10; /* Ensure they're above other elements */\\n}\\n\\n.button-make {\\n  @apply vertical-button;\\n  left: 0.5em; /* Adjust as necessary for spacing from the left edge */\\n  top: 50%; /* Center vertically */\\n  transform: translateY(-50%); /* Adjust vertical centering */\\n}\\n\\n.button-take {\\n  @apply vertical-button;\\n  right: 0.5em; /* Adjust as necessary for spacing from the right edge */\\n  top: 50%; /* Center vertically */\\n  transform: translateY(-50%); /* Adjust vertical centering */\\n}\\n\\n.sort-dropdown {\\n  background-color: transparent;\\n  color: #FEFF05; /* Yellow text */\\n  border: 2px solid #FEFF05; /* Yellow border */\\n  padding: 8px;\\n  cursor: pointer;\\n}\\n\\n.sort-dropdown:hover {\\n  background-color: #FEFF05; /* Yellow background */\\n  color: black; /* Black text */\\n}\\n\\n.sort-dropdown option {\\n  background-color: #000000; /* Cyberpunk Black for options */\\n  color: #FEFF05; /* Cyberpunk Yellow text for options */\\n  font-family: 'Orbitron'; /* Match the font with the rest of the site */\\n}\\n\\n.coins-section {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center; /* Ensure the section is centered */\\n  width: 100%;\\n  padding-bottom: 7em;\\n}\\n\\n.selector-container {\\n  margin-bottom: 0.5em; /* Space between the selector and the coins */\\n  margin-left: 10%;\\n  align-self: flex-start; /* Align the dropdown selector */\\n  width: 15%; \\n  background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent grey */\\n  border-radius: 10px; /* Rounded corners for the container */\\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* Optional: Adds a subtle shadow for depth */\\n  z-index: 1000;\\n}\\n.selector-container:hover {\\n  background-color: rgba(0, 0, 0, 0.75); /* Darker semi-transparent grey on hover */\\n}\\n\\n.custom-react-select-container:hover .custom-react-select__control {\\n  background-color: #FEFF05; /* Yellow background on hover */\\n  color: #000000; /* Black text on hover */\\n}\\n\\n.custom-react-select-container:hover .custom-react-select__single-value {\\n  color: #000000; /* Ensure text color changes to black on hover */\\n}\\n\\n.grave-button {\\n  padding: 6px 12px;\\n  background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent background */\\n  color: #FEFF05; /* Cyberpunk Yellow */\\n  border: 2px solid #FEFF05;\\n  font-weight: bold;\\n  opacity: 0.95;\\n  border-radius: 5px;\\n  transition: background-color 0.3s, color 0.3s, border 0.3s;\\n  cursor: pointer;\\n  text-align: center;\\n  display: inline-block; /* or 'block' if you prefer */\\n}\\n\\n.grave-button:hover {\\n  background-color: #FEFF05;\\n  color: #000000;\\n  border-color: transparent;\\n}\\n\\n.graveyard-button-container {\\n  position: fixed;\\n  width: 100%;\\n  display: flex;\\n  justify-content: center;\\n  margin-top: 50px; /* Adjust the space above the button */\\n  bottom: 2%; /* Distance from the bottom */\\n  width: 35%;\\n}\\n\\n.graveyard-coin-image {\\n  filter: grayscale(50%) brightness(75%);\\n  transition: filter 0.3s ease;\\n}\\n\\n.graveyard-coin-image:hover {\\n  filter: grayscale(25%) brightness(90%);\\n}\\n\\n.grave-value {\\n  font-size: 0.6em;\\n  color: #ffa4a8;\\n  opacity: 0.9;\\n  text-shadow:\\n    0 0 1px rgba(255,164,168, 0.7), /* Slightly transparent */\\n    0 0 2px rgba(255,164,168, 0.5),\\n    0 0 4px rgba(255,164,168, 0.4);\\n}\\n\\n\\n:root {\\n  --scale-factor: 1; /* Default scale factor */\\n  --spotlight-size-base: 100px; /* Base size of the spotlight */\\n\\n}\\n\\n@media (max-width: 768px) {\\n  .spotlight, .dogedance .spotlight {\\n    width: calc(var(--spotlight-size-base) * 0.75); /* Scale down the size for medium screens */\\n    height: calc(var(--spotlight-size-base) * 0.75); /* Scale down the size for medium screens */\\n  }\\n  :root {\\n    --scale-factor: 0.75; /* Scale down to 75% on medium screens */\\n  }\\n}\\n\\n@media (max-width: 480px) {\\n  .spotlight, .dogedance .spotlight {\\n    width: calc(var(--spotlight-size-base) * 0.5); /* Scale down the size for small screens */\\n    height: calc(var(--spotlight-size-base) * 0.5); /* Scale down the size for small screens */\\n  }\\n  :root {\\n    --scale-factor: 0.5; /* Scale down to 50% on small screens */\\n  }\\n}\\n\\n.dancehall {\\n  position: relative;\\n  width: 100%;\\n  min-height: 100vh;\\n  overflow: hidden;\\n}\\n\\n.dancehall-background {\\n  position: absolute;\\n  width: 100%;\\n  height: 100%;\\n  z-index: -1;\\n}\\n\\n.gifs-container {\\n  position: absolute;\\n  left: 25%; /* Start of the dance floor */\\n  right: 25%; /* End of the dance floor */\\n  bottom: 10%; /* Bottom of the dance floor */\\n  top: 70%; /* Top of the dance floor */\\n  display: flex;\\n  flex-wrap: wrap;\\n  align-content: flex-end;\\n  justify-content: space-around;\\n}\\n\\n.gif {\\n  position: absolute;\\n  transition: transform 0.3s ease, filter 0.3s ease;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.gif:hover {\\n  transform: scale(1.15); /* Increase size */\\n  filter: brightness(1.25) contrast(1.2); /* Make it brighter */\\n}\\n\\n.spotlight {\\n  position: absolute;\\n  bottom: 0; /* Start below the GIF */\\n  left: 50%;\\n  transform: translateX(-50%) translateY(40%);\\n  width: var(--spotlight-size-base);\\n  height: var(--spotlight-size-base);\\n  border-radius: 50%;\\n  background: rgba(255, 255, 255, 0.25); /* Semi-transparent white for the spotlight effect */\\n  z-index: -1; /* Ensure it's under the GIF */\\n  transition: width 0.3s ease, height 0.3s ease; /* Smooth transition for resizing */\\n}\\n\\n.special-spotlight {\\n  bottom: -20%; /* Adjust for dogedance.gif to move the spotlight lower */\\n}\\n\\n.dogedance .spotlight {\\n  bottom: -30%; /* Lower the spotlight for the dogedance.gif */\\n  transform: translateX(-50%) translateY(50%); /* Adjust specifically for dogedance.gif */\\n}\\n\\n.home-button-container {\\n  position: fixed;\\n  left: 50%;\\n  bottom: 3%;\\n  transform: translateX(-50%);\\n  z-index: 100; /* Adjust as needed to ensure it's above other elements */\\n}\\n\\n.home-button {\\n  padding: 6px 12px;\\n  background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent background */\\n  color: #FEFF05; /* Cyberpunk Yellow text */\\n  border: 2px solid #FEFF05; /* Cyberpunk Yellow border */\\n  font-weight: bold;\\n  opacity: 0.95;\\n  left: 0;\\n  right: 0;\\n  bottom: 0%; /* Adjust this value as needed to move the button lower */ \\n  border-radius: 5px;\\n  transition: background-color 0.3s, color 0.3s, border 0.3s;\\n  text-align: center;\\n  display: inline-block; /* Ensures the link behaves like a button */\\n}\\n\\n.home-button:hover {\\n  background-color: #FEFF05; /* Cyberpunk Yellow background on hover */\\n  color: #000000; /* Text color on hover */\\n  border-color: transparent; /* Border color on hover */\\n}\\n\\n.song-selector-container {\\n  position: fixed;\\n  left: 10%;\\n  top: 40%;\\n  width: 20%;\\n  transform: translateY(-50%);\\n  z-index: 100;\\n  align-self: flex-start; /* Align the dropdown selector */\\n  width: 20%; \\n  background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent grey */\\n  border-radius: 10px; /* Rounded corners for the container */\\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* Optional: Adds a subtle shadow for depth */\\n}\\n\\n.song-selector {\\n  background-color: rgba(0, 0, 0, 0.8);\\n  color: #FEFF05; /* Cyberpunk Yellow */\\n  border: 1px solid #FEFF05; /* Cyberpunk Yellow border */\\n  font-family: 'Orbitron', sans-serif;\\n  padding: 10px;\\n  border-radius: 5px;\\n  cursor: pointer;\\n  opacity: 0.95;\\n}\\n\\n.song-selector:hover {\\n  filter: brightness(1.2);\\n}\\n/* globals.css */\\n.elonGif {\\n  position: fixed;\\n  bottom: 0;\\n  width: 15%; /* Adjust based on your preference */\\n  height: 10%; /* Example height */\\n  z-index: 1; /* Adjust based on layering needs */\\n}\\n.filledZoomGif {\\n  position: fixed;\\n  bottom: 0;\\n  width: 12%; /* Adjust based on your preference */\\n  height: 12%; /* Example height */\\n  z-index: 1; /* Adjust based on layering needs */\\n}\\n.pepeImage {\\n  position: fixed;\\n  bottom: 0;\\n  width: 11%; /* Adjust based on your preference */\\n  height: 11%; /* Example height */\\n  z-index: 1; /* Adjust based on layering needs */\\n}\\n.eggdogImage {\\n  position: fixed;\\n  bottom: 0;\\n  width: 11%; /* Adjust based on your preference */\\n  height: 11%; /* Example height */\\n  z-index: 1; /* Adjust based on layering needs */\\n}\\n\\n.leftImage {\\n  position: fixed;\\n  bottom: 0;\\n  width: 28%; /* Adjust based on your preference */\\n  height: 12%; /* Example height */\\n  z-index: 1; /* Adjust based on layering needs */\\n}\\n\\n.rightImage {\\n  position: fixed;\\n  bottom: 0;\\n  width: 20%; /* Adjust based on your preference */\\n  height: 13%; /* Example height */\\n  z-index: 23; /* Adjust based on layering needs */\\n}\\n\\n.leftImage {\\n  left: 10%;\\n}\\n\\n.rightImage {\\n  right: 10%;\\n  z-index: 3;\\n}\\n\\n.elonGif {\\n  right: 20%; /* Position to the left of right.png */\\n  z-index: 2;\\n}\\n\\n.filledZoomGif {\\n  left: 29%; /* Position to the right of left.png */\\n  z-index: 2;\\n}\\n\\n.pepeImage {\\n  right: 15%;\\n  top: 70%;\\n  z-index: 2;\\n}\\n\\n.eggdogImage {\\n  left: 15%;\\n  top: 70%;\\n  z-index: 2;\\n}\\n\\n\\n.leftImage:hover, .rightImage:hover, .elonGif:hover, .filledZoomGif:hover, .pepeImage:hover, .eggdogImage:hover {\\n  /* Increase size */\\n  transform: scale(1.1);\\n  transition: transform 0.3s ease, filter 0.3s ease;\\n\\n  /* Glow effect */\\n  filter: drop-shadow(0 0 8px #FEFF05) drop-shadow(0 0 12px #FEFF05);\\n  z-index: 10; /* Ensure the hovered element is above others */\\n}\\n\\n/* Ensure the transform origin is the bottom center for a natural growth effect */\\n.leftImage, .rightImage, .elonGif, .filledZoomGif, .pepeImage, .eggdogImage {\\n  transition: transform 0.3s ease, filter 0.3s ease; /* Smooth transition for transform and filter */\\n  transform-origin: bottom center; /* Grow from the bottom */\\n}\\n\\n.ape-gif:hover {\\n  filter: brightness(1.2) drop-shadow(0 0 10px #FEFF05); /* Glow effect */\\n  transition: filter 0.3s ease;\\n}\\n\\n.ape-container:hover {\\n  cursor: url('/special-cursor.png'), auto;\\n}\\n\\n.ape-container:hover .ape-gif {\\n  filter: brightness(1.2) drop-shadow(0 0 10px #FEFF05); /* Glow effect */\\n  transform: scale(1.1); /* Slight increase in size */\\n  transition: filter 0.3s ease, transform 0.3s ease; /* Smooth transition */\\n}\\n\\n.title-background {\\n  display: inline-block; /* or 'block' depending on your layout */\\n  background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent black */\\n  border-radius: 8px; /* Adjust as needed for rounded corners */\\n  padding: 5px; /* Adjust padding to control the space around the text */\\n  color: #FEFF05; /* Example text color, adjust as needed */\\n  margin: 0 auto; /* Center the title if needed */\\n  text-align: center; /* Center text within the background */\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ __webpack_exports__[\"default\"] = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1sxMV0ub25lT2ZbMTRdLnVzZVsxXSEuL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1sxMV0ub25lT2ZbMTRdLnVzZVsyXSEuL3NyYy9zdHlsZXMvZ2xvYmFscy5jc3MiLCJtYXBwaW5ncyI6Ijs7O0FBQUE7QUFDMkg7QUFDM0gsOEJBQThCLGtIQUEyQjtBQUN6RDtBQUNBLHdIQUF3SCxrVkFBa1YsNEJBQTRCLDRCQUE0QixnQ0FBZ0Msa0NBQWtDLFVBQVUsc0JBQXNCLHFCQUFxQixHQUFHLDJhQUEyYSxzQkFBc0IsMkNBQTJDLDZCQUE2QiwwQkFBMEIsb0JBQW9CLG9KQUFvSiwwQ0FBMEMsNENBQTRDLHFEQUFxRCxVQUFVLDRKQUE0SixlQUFlLGlDQUFpQyxVQUFVLHVOQUF1TixlQUFlLDJCQUEyQixrQ0FBa0MsVUFBVSw2RkFBNkYsOENBQThDLDhDQUE4QyxHQUFHLDhGQUE4Rix1QkFBdUIseUJBQXlCLEdBQUcsNkVBQTZFLG1CQUFtQiw2QkFBNkIsR0FBRyx1RUFBdUUsd0JBQXdCLEdBQUcsc1NBQXNTLHlIQUF5SCwwQ0FBMEMsNENBQTRDLDJCQUEyQixVQUFVLDZEQUE2RCxtQkFBbUIsR0FBRyx1R0FBdUcsbUJBQW1CLG1CQUFtQix1QkFBdUIsNkJBQTZCLEdBQUcsT0FBTyxvQkFBb0IsR0FBRyxPQUFPLGdCQUFnQixHQUFHLDRhQUE0YSxvQkFBb0Isa0NBQWtDLHNDQUFzQyxVQUFVLDhMQUE4TCwwQkFBMEIsMkNBQTJDLDZDQUE2Qyw0QkFBNEIsaUNBQWlDLGlDQUFpQywyQkFBMkIsc0JBQXNCLHVCQUF1QixVQUFVLDBGQUEwRix5QkFBeUIsR0FBRywrS0FBK0ssZ0NBQWdDLDBDQUEw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QUssT0FBTyxLQUFLLE9BQU8scUJBQXFCLG9CQUFvQixxQkFBcUIscUJBQXFCLEtBQUssTUFBTSxXQUFXLEtBQUssWUFBWSxLQUFLLE1BQU0scUJBQXFCLHFCQUFxQixxQkFBcUIsVUFBVSxvQkFBb0IscUJBQXFCLHFCQUFxQixxQkFBcUIscUJBQXFCLEtBQUssT0FBTyxLQUFLLEtBQUssb0JBQW9CLHFCQUFxQixLQUFLLFFBQVEsS0FBSyxLQUFLLG9CQUFvQixvQkFBb0IscUJBQXFCLEtBQUssTUFBTSxLQUFLLEtBQUssV0FBVyxXQUFXLEtBQUssTUFBTSxLQUFLLFVBQVUsV0FBVyxXQUFXLEtBQUssTUFBTSxLQUFLLEtBQUssVUFBVSxXQUFXLEtBQUssTUFBTSxLQUFLLE1BQU0sV0FBVyxLQUFLLFNBQVMsS0FBSyxRQUFRLHFCQUFxQixxQkFBcUIscUJBQXFCLG9CQUFvQixLQUFLLE1BQU0sS0FBSyxLQUFLLFVBQVUsS0FBSyxNQUFNLEtBQUssTUFBTSxVQUFVLFVBQVUsV0FBVyxXQUFXLEtBQUssS0FBSyxVQUFVLEtBQUssS0FBSyxVQUFVLEtBQUssUUFBUSxLQUFLLEtBQUssb0JBQW9CLHFCQUFxQixxQkFBcUIsS0FBSyxRQUFRLEtBQUssU0FBUyxxQkFBcUIscUJBQXFCLHFCQUFxQixvQkFBb0IscUJBQXFCLHFCQUFxQixvQkFBb0Isb0JBQW9CLG9CQUFvQixLQUFLLE1BQU0sS0FBSyxNQUFNLFdBQVcsS0FBSyxPQUFPLEtBQUssUUFBUSxxQkFBcUIscUJBQXFCLHFCQUFxQixLQUFLLE1BQU0sS0FBSyxLQUFLLFVBQVUsS0FBSyxNQUFNLEtBQUssS0FBSyxXQUFXLEtBQUssTUFBTSxLQUFLLEtBQUssV0FBVyxLQUFLLE1BQU0sS0FBSyxNQUFNLFVBQVUsS0FBSyxPQUFPLEtBQUssS0FBSyxxQkFBcUIscUJBQXFCLEtBQUssTUFBTSxLQUFLLEtBQUssV0FBVyxLQUFLLE9BQU8sS0FBSyxLQUFLLHFCQUFxQixvQkFBb0IsS0FBSyxNQUFNLEtBQUssS0FBSyxXQUFXLEtBQUssTUFBTSxLQUFLLGlCQUFpQixVQUFVLEtBQUssS0FBSyxVQUFVLFVBQVUsS0FBSyxLQUFLLFVBQVUsS0FBSyxPQUFPLFdBQVcsVUFBVSxVQUFVLEtBQUssTUFBTSxLQUFLLEtBQUssVUFBVSxLQUFLLE1BQU0sS0FBSyxLQUFLLFdBQVcsS0FBSyxPQUFPLEtBQUssS0FBSyxvQkFBb0Isb0JBQW9CLEtBQUssTUFBTSxvQkFBb0Isb0JBQW9CLEtBQUssTUFBTSxLQUFLLE1BQU0sVUFBVSxLQUFLLE1BQU0sS0FBSyxLQUFLLFVBQVUsS0FBSyxRQUFRLEtBQUssWUFBWSxvQkFBb0IscUJBQXFCLEtBQUssTUFBTSxLQUFLLE1BQU0sVUFBVSxVQUFVLEtBQUssV0FBVyxLQUFLLFVBQVUsS0FBSyxLQUFLLFdBQVcsV0FBVyxXQUFXLFdBQVcsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxXQUFXLFdBQVcsV0FBVyxXQUFXLFdBQVcsVUFBVSxXQUFXLFdBQVcsV0FBVyxXQUFXLFdBQVcsV0FBVyxXQUFXLFdBQVcsV0FBVyxXQUFXLFdBQVcsV0FBVyxVQUFVLFdBQVcsV0FBVyxXQUFXLFdBQVcsVUFBVSxXQUFXLFVBQVUsV0FBVyxXQUFXLFdBQVcsV0FBVyxXQUFXLFdBQVcsV0FBVyxXQUFXLFdBQVcsS0FBSyxLQUFLLEtBQUssV0FBVyxXQUFXLFdBQVcsV0FBVyxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFdBQVcsV0FBVyxXQUFXLFdBQVcsV0FBVyxVQUFVLFdBQVcsV0FBVyxXQUFXLFdBQVcsV0FBVyxXQUFXLFdBQVcsV0FBVyxXQUFXLFdBQVcsV0FBVyxXQUFXLFVBQVUsV0FBVyxXQUFXLFdBQVcsV0FBVyxVQUFVLFdBQVcsVUFBVSxXQUFXLFdBQVcsV0FBVyxXQUFXLFdBQVcsV0FBVyxXQUFXLFdBQVcsV0FBVyxLQUFLLEtBQUssS0FBSyxLQUFLLE1BQU0sTUFBTSxLQUFLLE1BQU0sTUFBTSxLQUFLLE1BQU0sTUFBTSxLQUFLLE1BQU0sTUFBTSxZQUFZLE1BQU0sTUFBTSxNQUFNLFlBQVksTUFBTSxNQUFNLE1BQU0sWUFBWSxNQUFNLE1BQU0sTUFBTSxZQUFZLE1BQU0sTUFBTSxNQUFNLEtBQUssTUFBTSxNQUFNLEtBQUssTUFBTSxNQUFNLFlBQVksTUFBTSxNQUFNLE1BQU0sWUFBWSxNQUFNLE1BQU0sTUFBTSxLQUFLLE1BQU0sTUFBTSxZQUFZLGFBQWEsYUFBYSxhQUFhLE1BQU0sTUFBTSxNQUFNLEtBQUssT0FBTyxNQUFNLFVBQVUsWUFBWSx5QkFBeUIsdUJBQXVCLHlCQUF5QixhQUFhLGFBQWEsV0FBVyxZQUFZLGFBQWEsT0FBTyxLQUFLLHdCQUF3Qix1QkFBdUIseUJBQXlCLFdBQVcsTUFBTSxLQUFLLFVBQVUsWUFBWSx5QkFBeUIsdUJBQXVCLHlCQUF5QixhQUFhLFdBQVcsWUFBWSxhQUFhLE9BQU8sS0FBSyx3QkFBd0IsdUJBQXVCLHlCQUF5QixXQUFXLE1BQU0sS0FBSyxZQUFZLGFBQWEsYUFBYSxPQUFPLEtBQUssS0FBSyxZQUFZLGFBQWEsYUFBYSxNQUFNLE1BQU0sS0FBSyxZQUFZLHlCQUF5Qix1QkFBdUIsT0FBTyxLQUFLLFlBQVksYUFBYSxPQUFPLEtBQUssWUFBWSx1QkFBdUIsT0FBTyxLQUFLLG9CQUFvQixxQkFBcUIsT0FBTyxLQUFLLFlBQVksdUJBQXVCLHVCQUF1Qix1QkFBdUIsdUJBQXVCLHVCQUF1QixPQUFPLEtBQUssOEJBQThCLDJDQUEyQyxPQUFPLEtBQUssb0JBQW9CLHFCQUFxQixPQUFPLEtBQUssWUFBWSxhQUFhLHVCQUF1QixXQUFXLE1BQU0sS0FBSyxZQUFZLHVCQUF1Qix5QkFBeUIsdUJBQXVCLFdBQVcsVUFBVSxLQUFLLEtBQUssd0JBQXdCLHlCQUF5Qix1QkFBdUIsV0FBVyxVQUFVLFlBQVksT0FBTyxZQUFZLE1BQU0sT0FBTyxPQUFPLE9BQU8sS0FBSyxVQUFVLFVBQVUsT0FBTyxPQUFPLFFBQVEsWUFBWSxNQUFNLE9BQU8sT0FBTyxPQUFPLEtBQUssd0JBQXdCLHVCQUF1Qix5QkFBeUIsV0FBVyxNQUFNLEtBQUssc0JBQXNCLHVCQUF1Qix1QkFBdUIsd0JBQXdCLHVCQUF1QixXQUFXLHdCQUF3QixhQUFhLHVCQUF1QixPQUFPLEtBQUssWUFBWSxPQUFPLEtBQUssd0JBQXdCLHlCQUF5Qix5QkFBeUIsT0FBTyxLQUFLLHNCQUFzQix1QkFBdUIsdUJBQXVCLHVCQUF1Qix1QkFBdUIsT0FBTyxLQUFLLFlBQVksV0FBVyx3QkFBd0IsYUFBYSx5QkFBeUIseUJBQXlCLGFBQWEsT0FBTyxLQUFLLHNCQUFzQix5QkFBeUIsT0FBTyxLQUFLLFlBQVkseUJBQXlCLHVCQUF1QixhQUFhLE9BQU8sS0FBSyxVQUFVLFVBQVUsd0JBQXdCLHVCQUF1Qix1QkFBdUIsV0FBVyxZQUFZLHVCQUF1Qix5QkFBeUIsYUFBYSxPQUFPLEtBQUssc0JBQXNCLHVCQUF1Qix5QkFBeUIseUJBQXlCLFdBQVcsVUFBVSxZQUFZLGFBQWEsT0FBTyxLQUFLLHNCQUFzQixXQUFXLFlBQVksYUFBYSx5QkFBeUIseUJBQXlCLFdBQVcsWUFBWSx5QkFBeUIsT0FBTyxLQUFLLHNCQUFzQix1QkFBdUIsYUFBYSxPQUFPLEtBQUssWUFBWSxXQUFXLFVBQVUsVUFBVSxVQUFVLFlBQVkseUJBQXlCLE9BQU8sS0FBSyxVQUFVLFVBQVUsVUFBVSxZQUFZLFdBQVcsWUFBWSxhQUFhLHlCQUF5Qix5QkFBeUIsdUJBQXVCLE9BQU8sS0FBSyxVQUFVLFVBQVUsVUFBVSxZQUFZLHlCQUF5Qix5QkFBeUIsdUJBQXVCLFFBQVEsS0FBSyxzQkFBc0IsYUFBYSxhQUFhLGFBQWEsV0FBVyxVQUFVLE1BQU0sS0FBSyxzQkFBc0IsYUFBYSxhQUFhLGFBQWEsV0FBVyxVQUFVLE1BQU0sS0FBSyxZQUFZLFdBQVcsTUFBTSxLQUFLLFlBQVksV0FBVyxNQUFNLEtBQUssVUFBVSxVQUFVLFlBQVksYUFBYSxXQUFXLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxNQUFNLEtBQUssWUFBWSx1QkFBdUIsdUJBQXVCLFdBQVcsTUFBTSxLQUFLLHNCQUFzQix1QkFBdUIsdUJBQXVCLHVCQUF1Qix1QkFBdUIsdUJBQXVCLGFBQWEsdUJB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QkFBNEIsR0FBRywrQkFBK0Isb0JBQW9CLGNBQWMsZ0JBQWdCLHNEQUFzRCxvQ0FBb0MsdUNBQXVDLGtCQUFrQixvQkFBb0IsY0FBYyxnQkFBZ0Isc0RBQXNELG9DQUFvQyx1Q0FBdUMsY0FBYyxvQkFBb0IsY0FBYyxnQkFBZ0Isc0RBQXNELG9DQUFvQyx1Q0FBdUMsZ0JBQWdCLG9CQUFvQixjQUFjLGdCQUFnQixzREFBc0Qsb0NBQW9DLHVDQUF1QyxnQkFBZ0Isb0JBQW9CLGNBQWMsZ0JBQWdCLHNEQUFzRCxvQ0FBb0MsdUNBQXVDLGlCQUFpQixvQkFBb0IsY0FBYyxnQkFBZ0Isc0RBQXNELHFDQUFxQyx1Q0FBdUMsZ0JBQWdCLGNBQWMsR0FBRyxpQkFBaUIsZUFBZSxlQUFlLEdBQUcsY0FBYyxnQkFBZ0Isc0RBQXNELEdBQUcsb0JBQW9CLGVBQWUsc0RBQXNELEdBQUcsZ0JBQWdCLGVBQWUsYUFBYSxlQUFlLEdBQUcsa0JBQWtCLGNBQWMsYUFBYSxlQUFlLEdBQUcsdUhBQXVILGlEQUFpRCxzREFBc0QsOEZBQThGLGlCQUFpQixtREFBbUQscUtBQXFLLHVEQUF1RCxxRkFBcUYsNkJBQTZCLG9CQUFvQiwyREFBMkQsa0RBQWtELEdBQUcsMEJBQTBCLDZDQUE2QyxHQUFHLG1DQUFtQywyREFBMkQsNENBQTRDLG9GQUFvRiwwQkFBMEIsdUJBQXVCLDJCQUEyQixtRkFBbUYsb0RBQW9ELDREQUE0RCw2RUFBNkUsOERBQThELHdEQUF3RCwwQ0FBMEMsbUJBQW1CO0FBQ3R2dEU7QUFDQSwrREFBZSx1QkFBdUIsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvc3R5bGVzL2dsb2JhbHMuY3NzP2MxZTYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyh0cnVlKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIkBpbXBvcnQgdXJsKCdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PU9yYml0cm9uJmRpc3BsYXk9c3dhcCcpO1xcbi8qXFxuISB0YWlsd2luZGNzcyB2My40LjEgfCBNSVQgTGljZW5zZSB8IGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tXFxuKi9cXG4vKlxcbjEuIFByZXZlbnQgcGFkZGluZyBhbmQgYm9yZGVyIGZyb20gYWZmZWN0aW5nIGVsZW1lbnQgd2lkdGguIChodHRwczovL2dpdGh1Yi5jb20vbW96ZGV2cy9jc3NyZW1lZHkvaXNzdWVzLzQpXFxuMi4gQWxsb3cgYWRkaW5nIGEgYm9yZGVyIHRvIGFuIGVsZW1lbnQgYnkganVzdCBhZGRpbmcgYSBib3JkZXItd2lkdGguIChodHRwczovL2dpdGh1Yi5jb20vdGFpbHdpbmRjc3MvdGFpbHdpbmRjc3MvcHVsbC8xMTYpXFxuKi9cXG4qLFxcbjo6YmVmb3JlLFxcbjo6YWZ0ZXIge1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xcbiAgYm9yZGVyLXdpZHRoOiAwOyAvKiAyICovXFxuICBib3JkZXItc3R5bGU6IHNvbGlkOyAvKiAyICovXFxuICBib3JkZXItY29sb3I6ICNlNWU3ZWI7IC8qIDIgKi9cXG59XFxuOjpiZWZvcmUsXFxuOjphZnRlciB7XFxuICAtLXR3LWNvbnRlbnQ6ICcnO1xcbn1cXG4vKlxcbjEuIFVzZSBhIGNvbnNpc3RlbnQgc2Vuc2libGUgbGluZS1oZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxcbjIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gaU9TLlxcbjMuIFVzZSBhIG1vcmUgcmVhZGFibGUgdGFiIHNpemUuXFxuNC4gVXNlIHRoZSB1c2VyJ3MgY29uZmlndXJlZCBgc2Fuc2AgZm9udC1mYW1pbHkgYnkgZGVmYXVsdC5cXG41LiBVc2UgdGhlIHVzZXIncyBjb25maWd1cmVkIGBzYW5zYCBmb250LWZlYXR1cmUtc2V0dGluZ3MgYnkgZGVmYXVsdC5cXG42LiBVc2UgdGhlIHVzZXIncyBjb25maWd1cmVkIGBzYW5zYCBmb250LXZhcmlhdGlvbi1zZXR0aW5ncyBieSBkZWZhdWx0LlxcbjcuIERpc2FibGUgdGFwIGhpZ2hsaWdodHMgb24gaU9TXFxuKi9cXG5odG1sLFxcbjpob3N0IHtcXG4gIGxpbmUtaGVpZ2h0OiAxLjU7IC8qIDEgKi9cXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xcbiAgLW1vei10YWItc2l6ZTogNDsgLyogMyAqL1xcbiAgLW8tdGFiLXNpemU6IDQ7XFxuICAgICB0YWItc2l6ZTogNDsgLyogMyAqL1xcbiAgZm9udC1mYW1pbHk6IHVpLXNhbnMtc2VyaWYsIHN5c3RlbS11aSwgc2Fucy1zZXJpZiwgXFxcIkFwcGxlIENvbG9yIEVtb2ppXFxcIiwgXFxcIlNlZ29lIFVJIEVtb2ppXFxcIiwgXFxcIlNlZ29lIFVJIFN5bWJvbFxcXCIsIFxcXCJOb3RvIENvbG9yIEVtb2ppXFxcIjsgLyogNCAqL1xcbiAgZm9udC1mZWF0dXJlLXNldHRpbmdzOiBub3JtYWw7IC8qIDUgKi9cXG4gIGZvbnQtdmFyaWF0aW9uLXNldHRpbmdzOiBub3JtYWw7IC8qIDYgKi9cXG4gIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7IC8qIDcgKi9cXG59XFxuLypcXG4xLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMuXFxuMi4gSW5oZXJpdCBsaW5lLWhlaWdodCBmcm9tIGBodG1sYCBzbyB1c2VycyBjYW4gc2V0IHRoZW0gYXMgYSBjbGFzcyBkaXJlY3RseSBvbiB0aGUgYGh0bWxgIGVsZW1lbnQuXFxuKi9cXG5ib2R5IHtcXG4gIG1hcmdpbjogMDsgLyogMSAqL1xcbiAgbGluZS1oZWlnaHQ6IGluaGVyaXQ7IC8qIDIgKi9cXG59XFxuLypcXG4xLiBBZGQgdGhlIGNvcnJlY3QgaGVpZ2h0IGluIEZpcmVmb3guXFxuMi4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2Ugb2YgYm9yZGVyIGNvbG9yIGluIEZpcmVmb3guIChodHRwczovL2J1Z3ppbGxhLm1vemlsbGEub3JnL3Nob3dfYnVnLmNnaT9pZD0xOTA2NTUpXFxuMy4gRW5zdXJlIGhvcml6b250YWwgcnVsZXMgYXJlIHZpc2libGUgYnkgZGVmYXVsdC5cXG4qL1xcbmhyIHtcXG4gIGhlaWdodDogMDsgLyogMSAqL1xcbiAgY29sb3I6IGluaGVyaXQ7IC8qIDIgKi9cXG4gIGJvcmRlci10b3Atd2lkdGg6IDFweDsgLyogMyAqL1xcbn1cXG4vKlxcbkFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxcbiovXFxuYWJicjp3aGVyZShbdGl0bGVdKSB7XFxuICAtd2Via2l0LXRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDtcXG4gICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkO1xcbn1cXG4vKlxcblJlbW92ZSB0aGUgZGVmYXVsdCBmb250IHNpemUgYW5kIHdlaWdodCBmb3IgaGVhZGluZ3MuXFxuKi9cXG5oMSxcXG5oMixcXG5oMyxcXG5oNCxcXG5oNSxcXG5oNiB7XFxuICBmb250LXNpemU6IGluaGVyaXQ7XFxuICBmb250LXdlaWdodDogaW5oZXJpdDtcXG59XFxuLypcXG5SZXNldCBsaW5rcyB0byBvcHRpbWl6ZSBmb3Igb3B0LWluIHN0eWxpbmcgaW5zdGVhZCBvZiBvcHQtb3V0LlxcbiovXFxuYSB7XFxuICBjb2xvcjogaW5oZXJpdDtcXG4gIHRleHQtZGVjb3JhdGlvbjogaW5oZXJpdDtcXG59XFxuLypcXG5BZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gRWRnZSBhbmQgU2FmYXJpLlxcbiovXFxuYixcXG5zdHJvbmcge1xcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcXG59XFxuLypcXG4xLiBVc2UgdGhlIHVzZXIncyBjb25maWd1cmVkIGBtb25vYCBmb250LWZhbWlseSBieSBkZWZhdWx0LlxcbjIuIFVzZSB0aGUgdXNlcidzIGNvbmZpZ3VyZWQgYG1vbm9gIGZvbnQtZmVhdHVyZS1zZXR0aW5ncyBieSBkZWZhdWx0LlxcbjMuIFVzZSB0aGUgdXNlcidzIGNvbmZpZ3VyZWQgYG1vbm9gIGZvbnQtdmFyaWF0aW9uLXNldHRpbmdzIGJ5IGRlZmF1bHQuXFxuNC4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxcbiovXFxuY29kZSxcXG5rYmQsXFxuc2FtcCxcXG5wcmUge1xcbiAgZm9udC1mYW1pbHk6IHVpLW1vbm9zcGFjZSwgU0ZNb25vLVJlZ3VsYXIsIE1lbmxvLCBNb25hY28sIENvbnNvbGFzLCBcXFwiTGliZXJhdGlvbiBNb25vXFxcIiwgXFxcIkNvdXJpZXIgTmV3XFxcIiwgbW9ub3NwYWNlOyAvKiAxICovXFxuICBmb250LWZlYXR1cmUtc2V0dGluZ3M6IG5vcm1hbDsgLyogMiAqL1xcbiAgZm9udC12YXJpYXRpb24tc2V0dGluZ3M6IG5vcm1hbDsgLyogMyAqL1xcbiAgZm9udC1zaXplOiAxZW07IC8qIDQgKi9cXG59XFxuLypcXG5BZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cXG4qL1xcbnNtYWxsIHtcXG4gIGZvbnQtc2l6ZTogODAlO1xcbn1cXG4vKlxcblByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpbiBhbGwgYnJvd3NlcnMuXFxuKi9cXG5zdWIsXFxuc3VwIHtcXG4gIGZvbnQtc2l6ZTogNzUlO1xcbiAgbGluZS1oZWlnaHQ6IDA7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XFxufVxcbnN1YiB7XFxuICBib3R0b206IC0wLjI1ZW07XFxufVxcbnN1cCB7XFxuICB0b3A6IC0wLjVlbTtcXG59XFxuLypcXG4xLiBSZW1vdmUgdGV4dCBpbmRlbnRhdGlvbiBmcm9tIHRhYmxlIGNvbnRlbnRzIGluIENocm9tZSBhbmQgU2FmYXJpLiAoaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL2Nocm9taXVtL2lzc3Vlcy9kZXRhaWw/aWQ9OTk5MDg4LCBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MjAxMjk3KVxcbjIuIENvcnJlY3QgdGFibGUgYm9yZGVyIGNvbG9yIGluaGVyaXRhbmNlIGluIGFsbCBDaHJvbWUgYW5kIFNhZmFyaS4gKGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTkzNTcyOSwgaHR0cHM6Ly9idWdzLndlYmtpdC5vcmcvc2hvd19idWcuY2dpP2lkPTE5NTAxNilcXG4zLiBSZW1vdmUgZ2FwcyBiZXR3ZWVuIHRhYmxlIGJvcmRlcnMgYnkgZGVmYXVsdC5cXG4qL1xcbnRhYmxlIHtcXG4gIHRleHQtaW5kZW50OiAwOyAvKiAxICovXFxuICBib3JkZXItY29sb3I6IGluaGVyaXQ7IC8qIDIgKi9cXG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IC8qIDMgKi9cXG59XFxuLypcXG4xLiBDaGFuZ2UgdGhlIGZvbnQgc3R5bGVzIGluIGFsbCBicm93c2Vycy5cXG4yLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXFxuMy4gUmVtb3ZlIGRlZmF1bHQgcGFkZGluZyBpbiBhbGwgYnJvd3NlcnMuXFxuKi9cXG5idXR0b24sXFxuaW5wdXQsXFxub3B0Z3JvdXAsXFxuc2VsZWN0LFxcbnRleHRhcmVhIHtcXG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0OyAvKiAxICovXFxuICBmb250LWZlYXR1cmUtc2V0dGluZ3M6IGluaGVyaXQ7IC8qIDEgKi9cXG4gIGZvbnQtdmFyaWF0aW9uLXNldHRpbmdzOiBpbmhlcml0OyAvKiAxICovXFxuICBmb250LXNpemU6IDEwMCU7IC8qIDEgKi9cXG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0OyAvKiAxICovXFxuICBsaW5lLWhlaWdodDogaW5oZXJpdDsgLyogMSAqL1xcbiAgY29sb3I6IGluaGVyaXQ7IC8qIDEgKi9cXG4gIG1hcmdpbjogMDsgLyogMiAqL1xcbiAgcGFkZGluZzogMDsgLyogMyAqL1xcbn1cXG4vKlxcblJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSBhbmQgRmlyZWZveC5cXG4qL1xcbmJ1dHRvbixcXG5zZWxlY3Qge1xcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XFxufVxcbi8qXFxuMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cXG4yLiBSZW1vdmUgZGVmYXVsdCBidXR0b24gc3R5bGVzLlxcbiovXFxuYnV0dG9uLFxcblt0eXBlPSdidXR0b24nXSxcXG5bdHlwZT0ncmVzZXQnXSxcXG5bdHlwZT0nc3VibWl0J10ge1xcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDEgKi9cXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyAvKiAyICovXFxuICBiYWNrZ3JvdW5kLWltYWdlOiBub25lOyAvKiAyICovXFxufVxcbi8qXFxuVXNlIHRoZSBtb2Rlcm4gRmlyZWZveCBmb2N1cyBzdHlsZSBmb3IgYWxsIGZvY3VzYWJsZSBlbGVtZW50cy5cXG4qL1xcbjotbW96LWZvY3VzcmluZyB7XFxuICBvdXRsaW5lOiBhdXRvO1xcbn1cXG4vKlxcblJlbW92ZSB0aGUgYWRkaXRpb25hbCBgOmludmFsaWRgIHN0eWxlcyBpbiBGaXJlZm94LiAoaHR0cHM6Ly9naXRodWIuY29tL21vemlsbGEvZ2Vja28tZGV2L2Jsb2IvMmY5ZWFjZDlkM2Q5OTVjOTM3YjQyNTFhNTU1N2Q5NWQ0OTRjOWJlMS9sYXlvdXQvc3R5bGUvcmVzL2Zvcm1zLmNzcyNMNzI4LUw3MzcpXFxuKi9cXG46LW1vei11aS1pbnZhbGlkIHtcXG4gIGJveC1zaGFkb3c6IG5vbmU7XFxufVxcbi8qXFxuQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUgYW5kIEZpcmVmb3guXFxuKi9cXG5wcm9ncmVzcyB7XFxuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XFxufVxcbi8qXFxuQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gU2FmYXJpLlxcbiovXFxuOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxcbjo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XFxuICBoZWlnaHQ6IGF1dG87XFxufVxcbi8qXFxuMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXFxuMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXFxuKi9cXG5bdHlwZT0nc2VhcmNoJ10ge1xcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IC8qIDEgKi9cXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4OyAvKiAyICovXFxufVxcbi8qXFxuUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIG1hY09TLlxcbiovXFxuOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcXG59XFxuLypcXG4xLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxcbjIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cXG4qL1xcbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDEgKi9cXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cXG59XFxuLypcXG5BZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cXG4qL1xcbnN1bW1hcnkge1xcbiAgZGlzcGxheTogbGlzdC1pdGVtO1xcbn1cXG4vKlxcblJlbW92ZXMgdGhlIGRlZmF1bHQgc3BhY2luZyBhbmQgYm9yZGVyIGZvciBhcHByb3ByaWF0ZSBlbGVtZW50cy5cXG4qL1xcbmJsb2NrcXVvdGUsXFxuZGwsXFxuZGQsXFxuaDEsXFxuaDIsXFxuaDMsXFxuaDQsXFxuaDUsXFxuaDYsXFxuaHIsXFxuZmlndXJlLFxcbnAsXFxucHJlIHtcXG4gIG1hcmdpbjogMDtcXG59XFxuZmllbGRzZXQge1xcbiAgbWFyZ2luOiAwO1xcbiAgcGFkZGluZzogMDtcXG59XFxubGVnZW5kIHtcXG4gIHBhZGRpbmc6IDA7XFxufVxcbm9sLFxcbnVsLFxcbm1lbnUge1xcbiAgbGlzdC1zdHlsZTogbm9uZTtcXG4gIG1hcmdpbjogMDtcXG4gIHBhZGRpbmc6IDA7XFxufVxcbi8qXFxuUmVzZXQgZGVmYXVsdCBzdHlsaW5nIGZvciBkaWFsb2dzLlxcbiovXFxuZGlhbG9nIHtcXG4gIHBhZGRpbmc6IDA7XFxufVxcbi8qXFxuUHJldmVudCByZXNpemluZyB0ZXh0YXJlYXMgaG9yaXpvbnRhbGx5IGJ5IGRlZmF1bHQuXFxuKi9cXG50ZXh0YXJlYSB7XFxuICByZXNpemU6IHZlcnRpY2FsO1xcbn1cXG4vKlxcbjEuIFJlc2V0IHRoZSBkZWZhdWx0IHBsYWNlaG9sZGVyIG9wYWNpdHkgaW4gRmlyZWZveC4gKGh0dHBzOi8vZ2l0aHViLmNvbS90YWlsd2luZGxhYnMvdGFpbHdpbmRjc3MvaXNzdWVzLzMzMDApXFxuMi4gU2V0IHRoZSBkZWZhdWx0IHBsYWNlaG9sZGVyIGNvbG9yIHRvIHRoZSB1c2VyJ3MgY29uZmlndXJlZCBncmF5IDQwMCBjb2xvci5cXG4qL1xcbmlucHV0OjotbW96LXBsYWNlaG9sZGVyLCB0ZXh0YXJlYTo6LW1vei1wbGFjZWhvbGRlciB7XFxuICBvcGFjaXR5OiAxOyAvKiAxICovXFxuICBjb2xvcjogIzljYTNhZjsgLyogMiAqL1xcbn1cXG5pbnB1dDo6cGxhY2Vob2xkZXIsXFxudGV4dGFyZWE6OnBsYWNlaG9sZGVyIHtcXG4gIG9wYWNpdHk6IDE7IC8qIDEgKi9cXG4gIGNvbG9yOiAjOWNhM2FmOyAvKiAyICovXFxufVxcbi8qXFxuU2V0IHRoZSBkZWZhdWx0IGN1cnNvciBmb3IgYnV0dG9ucy5cXG4qL1xcbmJ1dHRvbixcXG5bcm9sZT1cXFwiYnV0dG9uXFxcIl0ge1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG4vKlxcbk1ha2Ugc3VyZSBkaXNhYmxlZCBidXR0b25zIGRvbid0IGdldCB0aGUgcG9pbnRlciBjdXJzb3IuXFxuKi9cXG46ZGlzYWJsZWQge1xcbiAgY3Vyc29yOiBkZWZhdWx0O1xcbn1cXG4vKlxcbjEuIE1ha2UgcmVwbGFjZWQgZWxlbWVudHMgYGRpc3BsYXk6IGJsb2NrYCBieSBkZWZhdWx0LiAoaHR0cHM6Ly9naXRodWIuY29tL21vemRldnMvY3NzcmVtZWR5L2lzc3Vlcy8xNClcXG4yLiBBZGQgYHZlcnRpY2FsLWFsaWduOiBtaWRkbGVgIHRvIGFsaWduIHJlcGxhY2VkIGVsZW1lbnRzIG1vcmUgc2Vuc2libHkgYnkgZGVmYXVsdC4gKGh0dHBzOi8vZ2l0aHViLmNvbS9qZW5zaW1tb25zL2Nzc3JlbWVkeS9pc3N1ZXMvMTQjaXNzdWVjb21tZW50LTYzNDkzNDIxMClcXG4gICBUaGlzIGNhbiB0cmlnZ2VyIGEgcG9vcmx5IGNvbnNpZGVyZWQgbGludCBlcnJvciBpbiBzb21lIHRvb2xzIGJ1dCBpcyBpbmNsdWRlZCBieSBkZXNpZ24uXFxuKi9cXG5pbWcsXFxuc3ZnLFxcbnZpZGVvLFxcbmNhbnZhcyxcXG5hdWRpbyxcXG5pZnJhbWUsXFxuZW1iZWQsXFxub2JqZWN0IHtcXG4gIGRpc3BsYXk6IGJsb2NrOyAvKiAxICovXFxuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyAvKiAyICovXFxufVxcbi8qXFxuQ29uc3RyYWluIGltYWdlcyBhbmQgdmlkZW9zIHRvIHRoZSBwYXJlbnQgd2lkdGggYW5kIHByZXNlcnZlIHRoZWlyIGludHJpbnNpYyBhc3BlY3QgcmF0aW8uIChodHRwczovL2dpdGh1Yi5jb20vbW96ZGV2cy9jc3NyZW1lZHkvaXNzdWVzLzE0KVxcbiovXFxuaW1nLFxcbnZpZGVvIHtcXG4gIG1heC13aWR0aDogMTAwJTtcXG4gIGhlaWdodDogYXV0bztcXG59XFxuLyogTWFrZSBlbGVtZW50cyB3aXRoIHRoZSBIVE1MIGhpZGRlbiBhdHRyaWJ1dGUgc3RheSBoaWRkZW4gYnkgZGVmYXVsdCAqL1xcbltoaWRkZW5dIHtcXG4gIGRpc3BsYXk6IG5vbmU7XFxufVxcbiosIDo6YmVmb3JlLCA6OmFmdGVye1xcbiAgLS10dy1ib3JkZXItc3BhY2luZy14OiAwO1xcbiAgLS10dy1ib3JkZXItc3BhY2luZy15OiAwO1xcbiAgLS10dy10cmFuc2xhdGUteDogMDtcXG4gIC0tdHctdHJhbnNsYXRlLXk6IDA7XFxuICAtLXR3LXJvdGF0ZTogMDtcXG4gIC0tdHctc2tldy14OiAwO1xcbiAgLS10dy1za2V3LXk6IDA7XFxuICAtLXR3LXNjYWxlLXg6IDE7XFxuICAtLXR3LXNjYWxlLXk6IDE7XFxuICAtLXR3LXBhbi14OiAgO1xcbiAgLS10dy1wYW4teTogIDtcXG4gIC0tdHctcGluY2gtem9vbTogIDtcXG4gIC0tdHctc2Nyb2xsLXNuYXAtc3RyaWN0bmVzczogcHJveGltaXR5O1xcbiAgLS10dy1ncmFkaWVudC1mcm9tLXBvc2l0aW9uOiAgO1xcbiAgLS10dy1ncmFkaWVudC12aWEtcG9zaXRpb246ICA7XFxuICAtLXR3LWdyYWRpZW50LXRvLXBvc2l0aW9uOiAgO1xcbiAgLS10dy1vcmRpbmFsOiAgO1xcbiAgLS10dy1zbGFzaGVkLXplcm86ICA7XFxuICAtLXR3LW51bWVyaWMtZmlndXJlOiAgO1xcbiAgLS10dy1udW1lcmljLXNwYWNpbmc6ICA7XFxuICAtLXR3LW51bWVyaWMtZnJhY3Rpb246ICA7XFxuICAtLXR3LXJpbmctaW5zZXQ6ICA7XFxuICAtLXR3LXJpbmctb2Zmc2V0LXdpZHRoOiAwcHg7XFxuICAtLXR3LXJpbmctb2Zmc2V0LWNvbG9yOiAjZmZmO1xcbiAgLS10dy1yaW5nLWNvbG9yOiByZ2IoNTkgMTMwIDI0NiAvIDAuNSk7XFxuICAtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdzogMCAwICMwMDAwO1xcbiAgLS10dy1yaW5nLXNoYWRvdzogMCAwICMwMDAwO1xcbiAgLS10dy1zaGFkb3c6IDAgMCAjMDAwMDtcXG4gIC0tdHctc2hhZG93LWNvbG9yZWQ6IDAgMCAjMDAwMDtcXG4gIC0tdHctYmx1cjogIDtcXG4gIC0tdHctYnJpZ2h0bmVzczogIDtcXG4gIC0tdHctY29udHJhc3Q6ICA7XFxuICAtLXR3LWdyYXlzY2FsZTogIDtcXG4gIC0tdHctaHVlLXJvdGF0ZTogIDtcXG4gIC0tdHctaW52ZXJ0OiAgO1xcbiAgLS10dy1zYXR1cmF0ZTogIDtcXG4gIC0tdHctc2VwaWE6ICA7XFxuICAtLXR3LWRyb3Atc2hhZG93OiAgO1xcbiAgLS10dy1iYWNrZHJvcC1ibHVyOiAgO1xcbiAgLS10dy1iYWNrZHJvcC1icmlnaHRuZXNzOiAgO1xcbiAgLS10dy1iYWNrZHJvcC1jb250cmFzdDogIDtcXG4gIC0tdHctYmFja2Ryb3AtZ3JheXNjYWxlOiAgO1xcbiAgLS10dy1iYWNrZHJvcC1odWUtcm90YXRlOiAgO1xcbiAgLS10dy1iYWNrZHJvcC1pbnZlcnQ6ICA7XFxuICAtLXR3LWJhY2tkcm9wLW9wYWNpdHk6ICA7XFxuICAtLXR3LWJhY2tkcm9wLXNhdHVyYXRlOiAgO1xcbiAgLS10dy1iYWNrZHJvcC1zZXBpYTogIDtcXG59XFxuOjpiYWNrZHJvcHtcXG4gIC0tdHctYm9yZGVyLXNwYWNpbmcteDogMDtcXG4gIC0tdHctYm9yZGVyLXNwYWNpbmcteTogMDtcXG4gIC0tdHctdHJhbnNsYXRlLXg6IDA7XFxuICAtLXR3LXRyYW5zbGF0ZS15OiAwO1xcbiAgLS10dy1yb3RhdGU6IDA7XFxuICAtLXR3LXNrZXcteDogMDtcXG4gIC0tdHctc2tldy15OiAwO1xcbiAgLS10dy1zY2FsZS14OiAxO1xcbiAgLS10dy1zY2FsZS15OiAxO1xcbiAgLS10dy1wYW4teDogIDtcXG4gIC0tdHctcGFuLXk6ICA7XFxuICAtLXR3LXBpbmNoLXpvb206ICA7XFxuICAtLXR3LXNjcm9sbC1zbmFwLXN0cmljdG5lc3M6IHByb3hpbWl0eTtcXG4gIC0tdHctZ3JhZGllbnQtZnJvbS1wb3NpdGlvbjogIDtcXG4gIC0tdHctZ3JhZGllbnQtdmlhLXBvc2l0aW9uOiAgO1xcbiAgLS10dy1ncmFkaWVudC10by1wb3NpdGlvbjogIDtcXG4gIC0tdHctb3JkaW5hbDogIDtcXG4gIC0tdHctc2xhc2hlZC16ZXJvOiAgO1xcbiAgLS10dy1udW1lcmljLWZpZ3VyZTogIDtcXG4gIC0tdHctbnVtZXJpYy1zcGFjaW5nOiAgO1xcbiAgLS10dy1udW1lcmljLWZyYWN0aW9uOiAgO1xcbiAgLS10dy1yaW5nLWluc2V0OiAgO1xcbiAgLS10dy1yaW5nLW9mZnNldC13aWR0aDogMHB4O1xcbiAgLS10dy1yaW5nLW9mZnNldC1jb2xvcjogI2ZmZjtcXG4gIC0tdHctcmluZy1jb2xvcjogcmdiKDU5IDEzMCAyNDYgLyAwLjUpO1xcbiAgLS10dy1yaW5nLW9mZnNldC1zaGFkb3c6IDAgMCAjMDAwMDtcXG4gIC0tdHctcmluZy1zaGFkb3c6IDAgMCAjMDAwMDtcXG4gIC0tdHctc2hhZG93OiAwIDAgIzAwMDA7XFxuICAtLXR3LXNoYWRvdy1jb2xvcmVkOiAwIDAgIzAwMDA7XFxuICAtLXR3LWJsdXI6ICA7XFxuICAtLXR3LWJyaWdodG5lc3M6ICA7XFxuICAtLXR3LWNvbnRyYXN0OiAgO1xcbiAgLS10dy1ncmF5c2NhbGU6ICA7XFxuICAtLXR3LWh1ZS1yb3RhdGU6ICA7XFxuICAtLXR3LWludmVydDogIDtcXG4gIC0tdHctc2F0dXJhdGU6ICA7XFxuICAtLXR3LXNlcGlhOiAgO1xcbiAgLS10dy1kcm9wLXNoYWRvdzogIDtcXG4gIC0tdHctYmFja2Ryb3AtYmx1cjogIDtcXG4gIC0tdHctYmFja2Ryb3AtYnJpZ2h0bmVzczogIDtcXG4gIC0tdHctYmFja2Ryb3AtY29udHJhc3Q6ICA7XFxuICAtLXR3LWJhY2tkcm9wLWdyYXlzY2FsZTogIDtcXG4gIC0tdHctYmFja2Ryb3AtaHVlLXJvdGF0ZTogIDtcXG4gIC0tdHctYmFja2Ryb3AtaW52ZXJ0OiAgO1xcbiAgLS10dy1iYWNrZHJvcC1vcGFjaXR5OiAgO1xcbiAgLS10dy1iYWNrZHJvcC1zYXR1cmF0ZTogIDtcXG4gIC0tdHctYmFja2Ryb3Atc2VwaWE6ICA7XFxufVxcbi5hYnNvbHV0ZXtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG59XFxuLnJpZ2h0LTV7XFxuICByaWdodDogMS4yNXJlbTtcXG59XFxuLnRvcC01e1xcbiAgdG9wOiAxLjI1cmVtO1xcbn1cXG4ucm91bmRlZHtcXG4gIGJvcmRlci1yYWRpdXM6IDAuMjVyZW07XFxufVxcbi5iZy1jeWJlcnB1bmtCbGFja3tcXG4gIC0tdHctYmctb3BhY2l0eTogMTtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigwIDAgMCAvIHZhcigtLXR3LWJnLW9wYWNpdHkpKTtcXG59XFxuLmJnLWN5YmVycHVua1llbGxvd3tcXG4gIC0tdHctYmctb3BhY2l0eTogMTtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyNTQgMjU1IDUgLyB2YXIoLS10dy1iZy1vcGFjaXR5KSk7XFxufVxcbi5weC02e1xcbiAgcGFkZGluZy1sZWZ0OiAxLjVyZW07XFxuICBwYWRkaW5nLXJpZ2h0OiAxLjVyZW07XFxufVxcbi5weS0ze1xcbiAgcGFkZGluZy10b3A6IDAuNzVyZW07XFxuICBwYWRkaW5nLWJvdHRvbTogMC43NXJlbTtcXG59XFxuLmZvbnQtY3liZXJwdW5re1xcbiAgZm9udC1mYW1pbHk6IE9yYml0cm9uLCBzYW5zLXNlcmlmO1xcbn1cXG4uZm9udC1ib2xke1xcbiAgZm9udC13ZWlnaHQ6IDcwMDtcXG59XFxuLnRleHQtY3liZXJwdW5rQmxhY2t7XFxuICAtLXR3LXRleHQtb3BhY2l0eTogMTtcXG4gIGNvbG9yOiByZ2IoMCAwIDAgLyB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKTtcXG59XFxuLnRleHQtY3liZXJwdW5rWWVsbG93e1xcbiAgLS10dy10ZXh0LW9wYWNpdHk6IDE7XFxuICBjb2xvcjogcmdiKDI1NCAyNTUgNSAvIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpO1xcbn1cXG4ub3BhY2l0eS03NXtcXG4gIG9wYWNpdHk6IDAuNzU7XFxufVxcbi50cmFuc2l0aW9ue1xcbiAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogY29sb3IsIGJhY2tncm91bmQtY29sb3IsIGJvcmRlci1jb2xvciwgdGV4dC1kZWNvcmF0aW9uLWNvbG9yLCBmaWxsLCBzdHJva2UsIG9wYWNpdHksIGJveC1zaGFkb3csIHRyYW5zZm9ybSwgZmlsdGVyLCAtd2Via2l0LWJhY2tkcm9wLWZpbHRlcjtcXG4gIHRyYW5zaXRpb24tcHJvcGVydHk6IGNvbG9yLCBiYWNrZ3JvdW5kLWNvbG9yLCBib3JkZXItY29sb3IsIHRleHQtZGVjb3JhdGlvbi1jb2xvciwgZmlsbCwgc3Ryb2tlLCBvcGFjaXR5LCBib3gtc2hhZG93LCB0cmFuc2Zvcm0sIGZpbHRlciwgYmFja2Ryb3AtZmlsdGVyO1xcbiAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogY29sb3IsIGJhY2tncm91bmQtY29sb3IsIGJvcmRlci1jb2xvciwgdGV4dC1kZWNvcmF0aW9uLWNvbG9yLCBmaWxsLCBzdHJva2UsIG9wYWNpdHksIGJveC1zaGFkb3csIHRyYW5zZm9ybSwgZmlsdGVyLCBiYWNrZHJvcC1maWx0ZXIsIC13ZWJraXQtYmFja2Ryb3AtZmlsdGVyO1xcbiAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllcigwLjQsIDAsIDAuMiwgMSk7XFxuICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAxNTBtcztcXG59XFxuLmR1cmF0aW9uLTMwMHtcXG4gIHRyYW5zaXRpb24tZHVyYXRpb246IDMwMG1zO1xcbn1cXG5cXG4uYnV0dG9uLWNvbm5lY3Qtd2FsbGV0IHtcXG4gIHdpZHRoOiA4ZW07XFxuICBwYWRkaW5nOiAwLjFlbSAwLjRlbTtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41KTsgLyogU2VtaS10cmFuc3BhcmVudCBiYWNrZ3JvdW5kICovXFxuICBjb2xvcjogI0ZFRkYwNTsgLyogQ3liZXJwdW5rIFllbGxvdyB0ZXh0ICovXFxuICBib3JkZXI6IDJweCBzb2xpZCAjRkVGRjA1OyAvKiBDeWJlcnB1bmsgWWVsbG93IGJvcmRlciAqL1xcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxuICBmb250LXNpemU6IDAuN2VtO1xcbiAgb3BhY2l0eTogMC45NTtcXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcXG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcywgY29sb3IgMC4zcywgYm9yZGVyIDAuM3MsIG9wYWNpdHkgMC4zcztcXG59XFxuXFxuLmJ1dHRvbi1jb25uZWN0LXdhbGxldDpob3ZlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkVGRjA1OyAvKiBDeWJlcnB1bmsgWWVsbG93IGJhY2tncm91bmQgKi9cXG4gIGNvbG9yOiAjMDAwMDAwOyAvKiBNYWtlIHRleHQgY29sb3IgbWF0Y2ggdGhlIGJhY2tncm91bmQgY29sb3IgZm9yICd0cmFuc3BhcmVudCcgZWZmZWN0ICovXFxuICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50OyAvKiBPcHRpb25hbDogbWFrZSBib3JkZXIgdHJhbnNwYXJlbnQgb24gaG92ZXIgKi9cXG4gIG9wYWNpdHk6IDAuOTU7XFxufVxcblxcbi52ZXJ0aWNhbC1idXR0b24ge1xcbiAgd2lkdGg6IDJlbTtcXG4gIHBhZGRpbmc6IDAuMWVtIDAuNGVtO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpOyAvKiBTZW1pLXRyYW5zcGFyZW50IGJhY2tncm91bmQgKi9cXG4gIGNvbG9yOiAjRkVGRjA1OyAvKiBDeWJlcnB1bmsgWWVsbG93IHRleHQgKi9cXG4gIGJvcmRlcjogMnB4IHNvbGlkICNGRUZGMDU7IC8qIEN5YmVycHVuayBZZWxsb3cgYm9yZGVyICovXFxuICBmb250LXdlaWdodDogYm9sZDtcXG4gIG9wYWNpdHk6IDAuOTU7XFxuICBib3JkZXItcmFkaXVzOiA1cHg7XFxuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MsIGNvbG9yIDAuM3MsIGJvcmRlciAwLjNzLCBvcGFjaXR5IDAuM3M7XFxufVxcblxcbi52ZXJ0aWNhbC1idXR0b246aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZFRkYwNTsgLyogQ3liZXJwdW5rIFllbGxvdyBiYWNrZ3JvdW5kICovXFxuICBjb2xvcjogIzAwMDAwMDsgLyogTWFrZSB0ZXh0IGNvbG9yIG1hdGNoIHRoZSBiYWNrZ3JvdW5kIGNvbG9yIGZvciAndHJhbnNwYXJlbnQnIGVmZmVjdCAqL1xcbiAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDsgLyogT3B0aW9uYWw6IG1ha2UgYm9yZGVyIHRyYW5zcGFyZW50IG9uIGhvdmVyICovXFxuICBvcGFjaXR5OiAwLjk1O1xcbn1cXG5cXG46cm9vdCB7XFxuICAtLWZvcmVncm91bmQtcmdiOiAwLCAwLCAwO1xcbiAgLS1iYWNrZ3JvdW5kLXN0YXJ0LXJnYjogMjE0LCAyMTksIDIyMDtcXG4gIC0tYmFja2dyb3VuZC1lbmQtcmdiOiAyNTUsIDI1NSwgMjU1O1xcbn1cXG5cXG5AbWVkaWEgKHByZWZlcnMtY29sb3Itc2NoZW1lOiBkYXJrKSB7XFxuICA6cm9vdCB7XFxuICAgIC0tZm9yZWdyb3VuZC1yZ2I6IDI1NSwgMjU1LCAyNTU7XFxuICAgIC0tYmFja2dyb3VuZC1zdGFydC1yZ2I6IDAsIDAsIDA7XFxuICAgIC0tYmFja2dyb3VuZC1lbmQtcmdiOiAwLCAwLCAwO1xcbiAgfVxcbn1cXG5cXG5ib2R5IHtcXG4gIGZvbnQtZmFtaWx5OiAnT3JiaXRyb24nLCBzYW5zLXNlcmlmO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDAwMDsgLyogQ3liZXJwdW5rIEJsYWNrICovXFxuICBjb2xvcjogI0ZFRkYwNTsgLyogQ3liZXJwdW5rIFllbGxvdyAqL1xcbn1cXG5cXG4udWZvIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIC8qIEFkanVzdCBzaXplIGFzIG5lZWRlZCAqL1xcbn1cXG5cXG4udWZvMSB7XFxuICBhbmltYXRpb246IHVmbzFBbmltYXRpb24gNXMgbGluZWFyIGluZmluaXRlO1xcbiAgd2lkdGg6IDdlbTsgLyogQWRqdXN0IHNpemUgYXMgbmVlZGVkICovXFxufVxcblxcbkBrZXlmcmFtZXMgdWZvMUFuaW1hdGlvbiB7XFxuICAwJSB7IHJpZ2h0OiAwJTsgfVxcbiAgMTAwJSB7IHJpZ2h0OiAyMDAlOyB9XFxufVxcblxcbi51Zm8yIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHdpZHRoOiA4MHB4OyAvKiBBZGp1c3Qgc2l6ZSBhcyBuZWVkZWQgKi9cXG4gIHRvcDogMTBweDsgLyogU3RhcnQganVzdCBvZmYgdGhlIHRvcCBvZiB0aGUgc2NyZWVuICovXFxuICBsZWZ0OiAtMTAwcHg7IC8qIFN0YXJ0IG9mZi1zY3JlZW4gdG8gdGhlIGxlZnQgKi9cXG4gIG9wYWNpdHk6IDA7IC8qIEluaXRpYWxseSBoaWRkZW4gKi9cXG4gIGFuaW1hdGlvbjogbm9uZTsgLyogTm8gYW5pbWF0aW9uIGluaXRpYWxseSAqL1xcbn1cXG5cXG5Aa2V5ZnJhbWVzIHVmbzJBbmltYXRpb24ge1xcbiAgMCUsIDEwMCUgeyBsZWZ0OiAtMTAwcHg7IG9wYWNpdHk6IDA7IH1cXG4gIDI1JSwgNzUlIHsgbGVmdDogMTIwcHg7IG9wYWNpdHk6IDE7IH0gLyogQWRqdXN0IGFzIG5lZWRlZCAqL1xcbn1cXG5cXG5Aa2V5ZnJhbWVzIGJvbWJBbmltYXRpb24ge1xcbiAgMCUsIDEwMCUgeyBvcGFjaXR5OiAwOyB9XFxuICA1MCUgeyBvcGFjaXR5OiAxOyB9XFxufVxcblxcbi5ib21iIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIGFuaW1hdGlvbjogYm9tYkFuaW1hdGlvbiAxLjdzIGxpbmVhcjtcXG4gIHdpZHRoOiAyOHB4OyAvKiBBZGp1c3Qgc2l6ZSBhcyBuZWVkZWQgKi9cXG4gIG9wYWNpdHk6IDAuODtcXG59XFxuXFxuLm5lb24tdGl0bGUtbWFpbiB7XFxuICBwYWRkaW5nLXRvcDogMC4yZW07XFxuICBmb250LXNpemU6IDJlbTsgLyogQWRqdXN0IHRoZSBzaXplIGFzIG5lZWRlZCAqL1xcbiAgdGV4dC1hbGlnbjogY2VudGVyOyAvKiBDZW50ZXIgYWxpZ24gdGhlIHRpdGxlICovXFxuICBtYXJnaW46IDAgYXV0bzsgLyogQ2VudGVyIHRoZSB0aXRsZSBibG9jayBpZiBuZWVkZWQgKi9cXG4gIGRpc3BsYXk6IGJsb2NrO1xcbiAgb3BhY2l0eTogMC45NjtcXG59XFxuLm5lb24tdGl0bGUtbWFpbjpob3ZlciB7XFxuICBmb250LXNpemU6IDIuMDFlbTsgLyogQWRqdXN0IHRoZSBzaXplIGFzIG5lZWRlZCAqL1xcbiAgdGV4dC1hbGlnbjogY2VudGVyOyAvKiBDZW50ZXIgYWxpZ24gdGhlIHRpdGxlICovXFxuICBtYXJnaW46IDAgYXV0bzsgLyogQ2VudGVyIHRoZSB0aXRsZSBibG9jayBpZiBuZWVkZWQgKi9cXG4gIGRpc3BsYXk6IGJsb2NrO1xcbiAgb3BhY2l0eTogMC45ODtcXG4gIGZpbHRlcjogYnJpZ2h0bmVzcygxMzAlKSBjb250cmFzdCgxMzAlKTtcXG59XFxuXFxuLyogTmVvbiBnbG93IGVmZmVjdCBmb3IgdGhlIHRpdGxlICovXFxuLm5lb24tdGl0bGUge1xcbiAgdGV4dC1zaGFkb3c6XFxuICAgIDAgMCAxcHggcmdiYSgyNTQsIDI1NSwgNSwgMC43KSwgLyogU2xpZ2h0bHkgdHJhbnNwYXJlbnQgKi9cXG4gICAgMCAwIDJweCByZ2JhKDI1NCwgMjU1LCA1LCAwLjUpLFxcbiAgICAwIDAgNHB4IHJnYmEoMjU0LCAyNTUsIDUsIDAuNCk7XFxufVxcblxcbi5uZW9uLXZhbHVlIHtcXG4gIGNvbG9yOiAjZTlmMWZmO1xcbiAgb3BhY2l0eTogMC45O1xcbiAgdGV4dC1zaGFkb3c6XFxuICAgIDAgMCAxcHggcmdiYSgyMzMsMjQxLDI1NSwgMC43KSwgLyogU2xpZ2h0bHkgdHJhbnNwYXJlbnQgKi9cXG4gICAgMCAwIDJweCByZ2JhKDIzMywyNDEsMjU1LCAwLjUpLFxcbiAgICAwIDAgNHB4IHJnYmEoMjMzLDI0MSwyNTUsIDAuNCk7XFxufVxcblxcblxcbi8qIE5lb24gZ2xvdyBlZmZlY3QgZm9yIHRoZSBidXR0b24gKi9cXG4ubmVvbi1idXR0b24sIC52ZXJ0aWNhbC1idXR0b24ge1xcbiAgYm94LXNoYWRvdzpcXG4gICAgMCAwIDFweCByZ2JhKDI1NCwgMjU1LCA1LCAwLjcpLFxcbiAgICAwIDAgMnB4IHJnYmEoMjU0LCAyNTUsIDUsIDAuNSksXFxuICAgIDAgMCA0cHggcmdiYSgyNTQsIDI1NSwgNSwgMC40KTtcXG59XFxuXFxuLm5lb24tYnV0dG9uOmhvdmVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNGRUZGMDU7IC8qIEN5YmVycHVuayBZZWxsb3cgYmFja2dyb3VuZCAqL1xcbiAgY29sb3I6ICMwMDAwMDA7IC8qIE1ha2UgdGV4dCBjb2xvciBtYXRjaCB0aGUgYmFja2dyb3VuZCBjb2xvciBmb3IgJ3RyYW5zcGFyZW50JyBlZmZlY3QgKi9cXG4gIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7IC8qIE9wdGlvbmFsOiBtYWtlIGJvcmRlciB0cmFuc3BhcmVudCBvbiBob3ZlciAqL1xcbiAgb3BhY2l0eTogMC45NTtcXG59XFxuXFxuLnRpdGxlLWJ1dHRvbi1jb250YWluZXIge1xcbiAgcG9zaXRpb246IGZpeGVkOyAvKiBGaXhlZCBwb3NpdGlvbiBhdCB0aGUgdG9wICovXFxuICB0b3A6IDA7IC8qIEFsaWduIHRvIHRoZSB0b3Agb2YgdGhlIHNjcmVlbiAqL1xcbiAgbGVmdDogMDsgLyogQWxpZ24gdG8gdGhlIGxlZnQgb2YgdGhlIHNjcmVlbiAqL1xcbiAgd2lkdGg6IDEwMCU7IC8qIFN0cmV0Y2ggYWNyb3NzIHRoZSBmdWxsIHdpZHRoICovXFxuXFxuICB6LWluZGV4OiAxMDAwOyAvKiBFbnN1cmUgaXQncyBhYm92ZSBvdGhlciBlbGVtZW50cyAqL1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsgLyogS2VlcCBleGlzdGluZyBhbGlnbm1lbnQgKi9cXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBwYWRkaW5nOiAxZW07IC8qIEFkZCBzb21lIHBhZGRpbmcgKi9cXG59XFxuXFxuLmludmlzaWJsZS1zcGFjZXIge1xcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xcbn1cXG5cXG4uaW52aXNpYmxlLWJ1dHRvbi1zcGFjZXIge1xcbiAgd2lkdGg6IHNhbWUtYXMtYnV0dG9uOyAvKiBSZXBsYWNlIHdpdGggdGhlIHdpZHRoIG9mIHlvdXIgYnV0dG9uICovXFxuICBoZWlnaHQ6IHNhbWUtYXMtYnV0dG9uOyAvKiBSZXBsYWNlIHdpdGggdGhlIGhlaWdodCBvZiB5b3VyIGJ1dHRvbiAqL1xcbiAgdmlzaWJpbGl0eTogaGlkZGVuOyAvKiBNYWtlIHRoZSBzcGFjZXIgaW52aXNpYmxlICovXFxufVxcblxcbkBrZXlmcmFtZXMgZmxpY2tlckFuaW1hdGlvbiB7XFxuICAwJSwgMTAwJSB7IGZpbHRlcjogYnJpZ2h0bmVzcyg5NyUpIGNvbnRyYXN0KDEwMyUpOyB9XFxuICAyMCUgeyBmaWx0ZXI6IGJyaWdodG5lc3MoOTklKSBjb250cmFzdCg5OCUpOyB9XFxuICA0MCUgeyBmaWx0ZXI6IGJyaWdodG5lc3MoOTUlKSBjb250cmFzdCgxMDUlKTsgfVxcbiAgNjAlIHsgZmlsdGVyOiBicmlnaHRuZXNzKDk5JSkgY29udHJhc3QoOTglKTsgfVxcbiAgODAlIHsgZmlsdGVyOiBicmlnaHRuZXNzKDk1JSkgY29udHJhc3QoMTA1JSk7IH1cXG59XFxuXFxuLm1haW4tYmFja2dyb3VuZCB7XFxuICBhbmltYXRpb246IGZsaWNrZXJBbmltYXRpb24gOHMgaW5maW5pdGU7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgcGFkZGluZy10b3A6IDVlbTsgLyogQWRkIHBhZGRpbmcgdG8gdGhlIHRvcCBlcXVhbCB0byB0aGUgaGVpZ2h0IG9mIHRoZSB0aXRsZSBiYXIgKi9cXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgLyogQ2VudGVyIHZlcnRpY2FsbHkgKi9cXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IC8qIENlbnRlciBob3Jpem9udGFsbHkgKi9cXG4gIG1pbi1oZWlnaHQ6IDEwMHZoO1xcbn1cXG5cXG4ubm90aWZpY2F0aW9uLXRleHQge1xcbiAgZGlzcGxheTogaW5saW5lOyAvKiBFbnN1cmUgaW5saW5lIGRpc3BsYXkgKi9cXG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7IC8qIFByZXZlbnQgbGluZSBicmVha3Mgd2l0aGluIHRoZSB0ZXh0ICovXFxufVxcblxcbi53YWxsZXQtYWRkcmVzcyB7XFxuICAvKiBBZGQgc3R5bGVzIHNpbWlsYXIgdG8geW91ciBvdGhlciB0ZXh0IGVsZW1lbnRzICovXFxuICBmb250LXNpemU6IDAuNzdlbTsgLyogQWRqdXN0IGFzIG5lZWRlZCAqL1xcbiAgY29sb3I6ICNGRUZGMDU7IC8qIEN5YmVycHVuayBZZWxsb3cgKi9cXG4gIC8qIEFkZCBhbnkgb3RoZXIgc3R5bGVzIHRvIG1hdGNoIHRoZSBwYWdlJ3MgdGhlbWUgKi9cXG59XFxuXFxuLmNvaW5zLWNvbnRhaW5lciB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC13cmFwOiB3cmFwO1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IC8qIEtlZXAgY29pbnMgY2VudGVyZWQgKi9cXG4gIGdhcDogMC4xZW07IC8qIEFkanVzdCBiYXNlZCBvbiB5b3VyIGxheW91dCAqL1xcbiAgZmxleC1iYXNpczogMTUlOyAvKiBBZGp1c3QgaWYgbmVjZXNzYXJ5IGJ1dCBtaWdodCBub3QgYmUgbmVlZGVkICovXFxuICBtYXgtd2lkdGg6IDgwJTsgXFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICBwYWRkaW5nOiAwLjJlbTsgLyogQWRkIHNvbWUgcGFkZGluZyBhcm91bmQgdGhlIGNvaW5zICovXFxuICBib3JkZXItcmFkaXVzOiA4cHg7IC8qIE9wdGlvbmFsOiBhZGRzIHJvdW5kZWQgY29ybmVycyAqL1xcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyMTEsIDIxMSwgMjExLCAwLjQ1KTtcXG59XFxuXFxuLmNvaW4taW1hZ2UtY29udGFpbmVyIHtcXG4gIHdpZHRoOiA1LjhlbTsgLyogRGlhbWV0ZXIgb2YgdGhlIGNpcmNsZSAqL1xcbiAgaGVpZ2h0OiA1LjhlbTsgLyogRGlhbWV0ZXIgb2YgdGhlIGNpcmNsZSAqL1xcbiAgYm9yZGVyLXJhZGl1czogNTAlOyAvKiBNYWtlcyBpdCBhIGNpcmNsZSAqL1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgLyogSGlkZXMgdGhlIG92ZXJmbG93IHRvIG1haW50YWluIHRoZSBjaXJjbGUgc2hhcGUgKi9cXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBvcGFjaXR5OiAwLjk7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblxcbi5jb2luLWltYWdlIHtcXG4gIHdpZHRoOiAxMDAlOyAvKiBGaWxsIHRoZSBjb250YWluZXIgKi9cXG4gIGhlaWdodDogMTAwJTtcXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcXG4gIC1vLW9iamVjdC1maXQ6IGNvdmVyO1xcbiAgICAgb2JqZWN0LWZpdDogY292ZXI7IC8qIEVuc3VyZSB0aGUgaW1hZ2UgY292ZXJzIHRoZSBjb250YWluZXIgKi9cXG4gIGltYWdlLXJlbmRlcmluZzogcGl4ZWxhdGVkOyAvKiBDcmVhdGVzIGEgcGl4ZWxhdGVkIGVmZmVjdCAqL1xcbiAgb3BhY2l0eTogMC44MjtcXG4gIGZpbHRlcjogYnJpZ2h0bmVzcyg5NyUpIGNvbnRyYXN0KDExNSUpO1xcbiAgdHJhbnNpdGlvbjogYm94LXNoYWRvdyAwLjNzIGVhc2UtaW4tb3V0LCBvcGFjaXR5IDAuM3MgZWFzZS1pbi1vdXQ7IC8qIFNtb290aCB0cmFuc2l0aW9uIGZvciBnbG93IGFuZCBvcGFjaXR5ICovXFxufVxcblxcbi5jb2luLWltYWdlOmhvdmVyIHtcXG4gIGJveC1zaGFkb3c6IDAgMCAxNXB4IDVweCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNik7IC8qIFdoaXRlIGdsb3cgKi9cXG4gIG9wYWNpdHk6IDAuOTk7IC8qIEluY3JlYXNlIG9wYWNpdHkgb24gaG92ZXIgZm9yIGVtcGhhc2lzICovXFxuICBmaWx0ZXI6IGJyaWdodG5lc3MoMTA1JSkgY29udHJhc3QoMTQ1JSk7XFxufVxcblxcbi5naWYtb3ZlcmxheSB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB0b3A6IDA7XFxuICBsZWZ0OiAwO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICAtby1vYmplY3QtZml0OiBjb3ZlcjtcXG4gICAgIG9iamVjdC1maXQ6IGNvdmVyOyAvKiBDb3ZlciB0aGUgY29pbiBpbWFnZSAqL1xcbn1cXG5cXG4uY29pbiB7XFxuICB3aWR0aDogNmVtO1xcbiAgaGVpZ2h0OiA5ZW07XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIG1hcmdpbjogMC4xZW07XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpOyAvKiBTZW1pLXRyYW5zcGFyZW50IGdyZXkgKi9cXG4gIGJvcmRlci1yYWRpdXM6IDhweDsgLyogT3B0aW9uYWw6IGZvciByb3VuZGVkIGNvcm5lcnMgKi9cXG4gIHBhZGRpbmc6IDAuMWVtOyAvKiBPcHRpb25hbDogZm9yIHNvbWUgc3BhY2UgaW5zaWRlIHRoZSBjb250YWluZXIgKi9cXG59XFxuXFxuLmNvaW46aG92ZXIge1xcbiAgd2lkdGg6IDZlbTtcXG4gIGhlaWdodDogOWVtO1xcbiAgbWFyZ2luOiAwLjFlbTtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC43NSk7IC8qIFNlbWktdHJhbnNwYXJlbnQgZ3JleSAqL1xcbiAgYm9yZGVyLXJhZGl1czogOHB4OyAvKiBPcHRpb25hbDogZm9yIHJvdW5kZWQgY29ybmVycyAqL1xcbiAgcGFkZGluZzogMC4yZW07IC8qIE9wdGlvbmFsOiBmb3Igc29tZSBzcGFjZSBpbnNpZGUgdGhlIGNvbnRhaW5lciAqL1xcbn1cXG5cXG5cXG4uY29pbi1uYW1lIHtcXG4gIHdpZHRoOiA2ZW07IC8qIE1hdGNoIHRoZSB3aWR0aCBvZiB0aGUgaW1hZ2UgKi9cXG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XFxuICBvdmVyZmxvdzogaGlkZGVuO1xcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XFxuICBmb250LXNpemU6IDFlbTtcXG4gIG9wYWNpdHk6IDAuOTtcXG59XFxuXFxuLmNvaW4tbmFtZTpob3ZlciB7XFxuICB3aWR0aDogNmVtOyAvKiBNYXRjaCB0aGUgd2lkdGggb2YgdGhlIGltYWdlICovXFxuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xcbiAgZm9udC1zaXplOiAxZW07XFxuICBvcGFjaXR5OiAwLjk3O1xcbn1cXG5cXG4uY29pbi12YWx1ZSB7XFxuICBmb250LXNpemU6IDAuOGVtO1xcbiAgb3BhY2l0eTogMC45O1xcbn1cXG5cXG4uY29pbi12YWx1ZTpob3ZlciB7XFxuICBmb250LXNpemU6IDAuOGVtO1xcbiAgb3BhY2l0eTogMC45NztcXG59XFxuXFxuI2JhY2tncm91bmQtdmlkZW8ge1xcbiAgd2lkdGg6IDEwMHZ3O1xcbiAgaGVpZ2h0OiAxMDB2aDtcXG4gIC1vLW9iamVjdC1maXQ6IGNvdmVyO1xcbiAgICAgb2JqZWN0LWZpdDogY292ZXI7XFxuICBwb3NpdGlvbjogZml4ZWQ7XFxuICBsZWZ0OiAwO1xcbiAgcmlnaHQ6IDA7XFxuICB0b3A6IDA7XFxuICBib3R0b206IDA7XFxuICB6LWluZGV4OiAtMTtcXG59XFxuXFxuLnJvYm90LWdpZiB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICBib3R0b206IDg1JTsgLyogUGxhY2UgdGhlIGJvdHRvbSBvZiB0aGUgcm9ib3QgYXQgdGhlIHRvcCBvZiB0aGUgd2F0ZXJtYXJrICovXFxuICB3aWR0aDogNGVtOyAvKiBBZGp1c3Qgc2l6ZSBhcyBuZWVkZWQgKi9cXG4gIGhlaWdodDogYXV0bztcXG59XFxuXFxuLndhdGVybWFyayB7XFxuICBwb3NpdGlvbjogZml4ZWQ7IC8qIEZpeGVkIHBvc2l0aW9uIHJlbGF0aXZlIHRvIHRoZSB2aWV3cG9ydCAqL1xcbiAgYm90dG9tOiAxJTsgLyogRGlzdGFuY2UgZnJvbSB0aGUgYm90dG9tICovXFxuICByaWdodDogMSU7IC8qIERpc3RhbmNlIGZyb20gdGhlIHJpZ2h0ICovXFxuICB3aWR0aDogMTYwcHg7IC8qIEFkanVzdCB0aGUgd2lkdGggYXMgbmVlZGVkICovXFxuICBoZWlnaHQ6IGF1dG87IC8qIE1haW50YWluIGFzcGVjdCByYXRpbyAqL1xcbiAgei1pbmRleDogMTAwMDsgLyogRW5zdXJlIGl0J3MgYWJvdmUgb3RoZXIgZWxlbWVudHMgKi9cXG4gIGZpbHRlcjogYnJpZ2h0bmVzcyg5OCUpIGNvbnRyYXN0KDEyMCUpO1xcbiAgb3BhY2l0eTogMC44NzsgLyogQWRqdXN0IG9wYWNpdHkgYXMgbmVlZGVkICovXFxuICBkaXNwbGF5OiBmbGV4OyAvKiBVc2UgZmxleGJveCB0byBjZW50ZXIgY2hpbGQgZWxlbWVudHMgKi9cXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyOyAvKiBDZW50ZXIgaG9yaXpvbnRhbGx5ICovXFxuICBhbGlnbi1pdGVtczogZW5kOyAvKiBBbGlnbiBhdCB0aGUgYm90dG9tICovXFxufVxcblxcbi53YXRlcm1hcms6aG92ZXIge1xcbiAgcG9zaXRpb246IGZpeGVkOyAvKiBGaXhlZCBwb3NpdGlvbiByZWxhdGl2ZSB0byB0aGUgdmlld3BvcnQgKi9cXG4gIGJvdHRvbTogMCU7IC8qIERpc3RhbmNlIGZyb20gdGhlIGJvdHRvbSAqL1xcbiAgcmlnaHQ6IDElOyAvKiBEaXN0YW5jZSBmcm9tIHRoZSByaWdodCAqL1xcbiAgd2lkdGg6IDI0MHB4OyAvKiBBZGp1c3QgdGhlIHdpZHRoIGFzIG5lZWRlZCAqL1xcbiAgZmlsdGVyOiBicmlnaHRuZXNzKDEwMCUpIGNvbnRyYXN0KDE0MCUpO1xcbiAgaGVpZ2h0OiBhdXRvOyAvKiBNYWludGFpbiBhc3BlY3QgcmF0aW8gKi9cXG4gIHotaW5kZXg6IDEwMDA7IC8qIEVuc3VyZSBpdCdzIGFib3ZlIG90aGVyIGVsZW1lbnRzICovXFxuICBvcGFjaXR5OiAwLjk0OyAvKiBBZGp1c3Qgb3BhY2l0eSBhcyBuZWVkZWQgKi9cXG4gIHRyYW5zaXRpb246IDAuNXMgZWFzZS1pbi1vdXQ7XFxufVxcblxcbi53YXRlcm1hcmsyIHtcXG4gIHBvc2l0aW9uOiBmaXhlZDsgLyogRml4ZWQgcG9zaXRpb24gcmVsYXRpdmUgdG8gdGhlIHZpZXdwb3J0ICovXFxuICBib3R0b206IDAlOyAvKiBEaXN0YW5jZSBmcm9tIHRoZSBib3R0b20gKi9cXG4gIGxlZnQ6IDAlOyAvKiBEaXN0YW5jZSBmcm9tIHRoZSBsZWZ0LCBjaGFuZ2VkIGZyb20gcmlnaHQgdG8gbGVmdCAqL1xcbiAgd2lkdGg6IDE2MHB4OyAvKiBBZGp1c3QgdGhlIHdpZHRoIGFzIG5lZWRlZCAqL1xcbiAgaGVpZ2h0OiBhdXRvOyAvKiBNYWludGFpbiBhc3BlY3QgcmF0aW8gKi9cXG4gIHotaW5kZXg6IDEwMDA7IC8qIEVuc3VyZSBpdCdzIGFib3ZlIG90aGVyIGVsZW1lbnRzICovXFxuICBmaWx0ZXI6IGJyaWdodG5lc3MoOTglKSBjb250cmFzdCgxMjAlKTtcXG4gIG9wYWNpdHk6IDAuODc7IC8qIEFkanVzdCBvcGFjaXR5IGFzIG5lZWRlZCAqL1xcbiAgZGlzcGxheTogbWlkZGxlOyAvKiBVc2UgZmxleGJveCB0byBjZW50ZXIgY2hpbGQgZWxlbWVudHMgKi9cXG4gIGp1c3RpZnktY29udGVudDogcmlnaHQ7IC8qIENlbnRlciBob3Jpem9udGFsbHkgKi9cXG4gIGFsaWduLWl0ZW1zOiByaWdodDsgLyogQWxpZ24gYXQgdGhlIGJvdHRvbSAqL1xcbn1cXG5cXG4ud2F0ZXJtYXJrMjpob3ZlciB7XFxuICBwb3NpdGlvbjogZml4ZWQ7IC8qIEZpeGVkIHBvc2l0aW9uIHJlbGF0aXZlIHRvIHRoZSB2aWV3cG9ydCAqL1xcbiAgYm90dG9tOiAwJTsgLyogRGlzdGFuY2UgZnJvbSB0aGUgYm90dG9tICovXFxuICBsZWZ0OiAwJTsgLyogRGlzdGFuY2UgZnJvbSB0aGUgbGVmdCwgY2hhbmdlZCBmcm9tIHJpZ2h0IHRvIGxlZnQgKi9cXG4gIHdpZHRoOiAyNDBweDsgLyogQWRqdXN0IHRoZSB3aWR0aCBhcyBuZWVkZWQgKi9cXG4gIGZpbHRlcjogYnJpZ2h0bmVzcygxMDAlKSBjb250cmFzdCgxNDAlKTtcXG4gIGhlaWdodDogYXV0bzsgLyogTWFpbnRhaW4gYXNwZWN0IHJhdGlvICovXFxuICB6LWluZGV4OiAxMDAwOyAvKiBFbnN1cmUgaXQncyBhYm92ZSBvdGhlciBlbGVtZW50cyAqL1xcbiAgb3BhY2l0eTogMC45NDsgLyogQWRqdXN0IG9wYWNpdHkgYXMgbmVlZGVkICovXFxuICB0cmFuc2l0aW9uOiAwLjVzIGVhc2UtaW4tb3V0O1xcbn1cXG5cXG4uYXBlLWdpZiB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICBib3R0b206IDkwJTsgLyogUGxhY2UgdGhlIGJvdHRvbSBvZiB0aGUgcm9ib3QgYXQgdGhlIHRvcCBvZiB0aGUgd2F0ZXJtYXJrICovXFxuICBsZWZ0OiAyOCU7XFxuICB3aWR0aDogNC41ZW07IC8qIEFkanVzdCBzaXplIGFzIG5lZWRlZCAqL1xcbiAgaGVpZ2h0OiBhdXRvO1xcbn1cXG5cXG4udmVydGljYWwtYnV0dG9ue1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBmb250LXdlaWdodDogYm9sZDtcXG4gIHdyaXRpbmctbW9kZTogaG9yaXpvbnRhbC10YjtcXG4gIHRleHQtb3JpZW50YXRpb246IHVwcmlnaHQ7XFxuICBwb3NpdGlvbjogZml4ZWQ7IC8qIEZpeGVkIHBvc2l0aW9uIHRvIHBsYWNlIHRoZW0gb24gdGhlIHNpZGVzICovXFxuICB6LWluZGV4OiAxMDsgLyogRW5zdXJlIHRoZXkncmUgYWJvdmUgb3RoZXIgZWxlbWVudHMgKi9cXG59XFxuXFxuLmJ1dHRvbi1tYWtlIHtcXG4gIHdpZHRoOiAyZW07XFxuICBwYWRkaW5nOiAwLjFlbSAwLjRlbTtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41KTsgLyogU2VtaS10cmFuc3BhcmVudCBiYWNrZ3JvdW5kICovXFxuICBjb2xvcjogI0ZFRkYwNTsgLyogQ3liZXJwdW5rIFllbGxvdyB0ZXh0ICovXFxuICBib3JkZXI6IDJweCBzb2xpZCAjRkVGRjA1OyAvKiBDeWJlcnB1bmsgWWVsbG93IGJvcmRlciAqL1xcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxuICBvcGFjaXR5OiAwLjk1O1xcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzLCBjb2xvciAwLjNzLCBib3JkZXIgMC4zcywgb3BhY2l0eSAwLjNzO1xcbn1cXG5cXG4uYnV0dG9uLW1ha2U6aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZFRkYwNTsgLyogQ3liZXJwdW5rIFllbGxvdyBiYWNrZ3JvdW5kICovXFxuICBjb2xvcjogIzAwMDAwMDsgLyogTWFrZSB0ZXh0IGNvbG9yIG1hdGNoIHRoZSBiYWNrZ3JvdW5kIGNvbG9yIGZvciAndHJhbnNwYXJlbnQnIGVmZmVjdCAqL1xcbiAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDsgLyogT3B0aW9uYWw6IG1ha2UgYm9yZGVyIHRyYW5zcGFyZW50IG9uIGhvdmVyICovXFxuICBvcGFjaXR5OiAwLjk1O1xcbn1cXG5cXG4uYnV0dG9uLW1ha2Uge1xcbiAgYm94LXNoYWRvdzpcXG4gICAgMCAwIDFweCByZ2JhKDI1NCwgMjU1LCA1LCAwLjcpLFxcbiAgICAwIDAgMnB4IHJnYmEoMjU0LCAyNTUsIDUsIDAuNSksXFxuICAgIDAgMCA0cHggcmdiYSgyNTQsIDI1NSwgNSwgMC40KTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxuICB3cml0aW5nLW1vZGU6IGhvcml6b250YWwtdGI7XFxuICB0ZXh0LW9yaWVudGF0aW9uOiB1cHJpZ2h0O1xcbiAgcG9zaXRpb246IGZpeGVkOyAvKiBGaXhlZCBwb3NpdGlvbiB0byBwbGFjZSB0aGVtIG9uIHRoZSBzaWRlcyAqL1xcbiAgei1pbmRleDogMTA7IC8qIEVuc3VyZSB0aGV5J3JlIGFib3ZlIG90aGVyIGVsZW1lbnRzICovXFxuICBsZWZ0OiAwLjVlbTsgLyogQWRqdXN0IGFzIG5lY2Vzc2FyeSBmb3Igc3BhY2luZyBmcm9tIHRoZSBsZWZ0IGVkZ2UgKi9cXG4gIHRvcDogNTAlOyAvKiBDZW50ZXIgdmVydGljYWxseSAqL1xcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpOyAvKiBBZGp1c3QgdmVydGljYWwgY2VudGVyaW5nICovXFxufVxcblxcbi5idXR0b24tdGFrZSB7XFxuICB3aWR0aDogMmVtO1xcbiAgcGFkZGluZzogMC4xZW0gMC40ZW07XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSk7IC8qIFNlbWktdHJhbnNwYXJlbnQgYmFja2dyb3VuZCAqL1xcbiAgY29sb3I6ICNGRUZGMDU7IC8qIEN5YmVycHVuayBZZWxsb3cgdGV4dCAqL1xcbiAgYm9yZGVyOiAycHggc29saWQgI0ZFRkYwNTsgLyogQ3liZXJwdW5rIFllbGxvdyBib3JkZXIgKi9cXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xcbiAgb3BhY2l0eTogMC45NTtcXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcXG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcywgY29sb3IgMC4zcywgYm9yZGVyIDAuM3MsIG9wYWNpdHkgMC4zcztcXG59XFxuXFxuLmJ1dHRvbi10YWtlOmhvdmVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNGRUZGMDU7IC8qIEN5YmVycHVuayBZZWxsb3cgYmFja2dyb3VuZCAqL1xcbiAgY29sb3I6ICMwMDAwMDA7IC8qIE1ha2UgdGV4dCBjb2xvciBtYXRjaCB0aGUgYmFja2dyb3VuZCBjb2xvciBmb3IgJ3RyYW5zcGFyZW50JyBlZmZlY3QgKi9cXG4gIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7IC8qIE9wdGlvbmFsOiBtYWtlIGJvcmRlciB0cmFuc3BhcmVudCBvbiBob3ZlciAqL1xcbiAgb3BhY2l0eTogMC45NTtcXG59XFxuXFxuLmJ1dHRvbi10YWtlIHtcXG4gIGJveC1zaGFkb3c6XFxuICAgIDAgMCAxcHggcmdiYSgyNTQsIDI1NSwgNSwgMC43KSxcXG4gICAgMCAwIDJweCByZ2JhKDI1NCwgMjU1LCA1LCAwLjUpLFxcbiAgICAwIDAgNHB4IHJnYmEoMjU0LCAyNTUsIDUsIDAuNCk7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xcbiAgd3JpdGluZy1tb2RlOiBob3Jpem9udGFsLXRiO1xcbiAgdGV4dC1vcmllbnRhdGlvbjogdXByaWdodDtcXG4gIHBvc2l0aW9uOiBmaXhlZDsgLyogRml4ZWQgcG9zaXRpb24gdG8gcGxhY2UgdGhlbSBvbiB0aGUgc2lkZXMgKi9cXG4gIHotaW5kZXg6IDEwOyAvKiBFbnN1cmUgdGhleSdyZSBhYm92ZSBvdGhlciBlbGVtZW50cyAqL1xcbiAgcmlnaHQ6IDAuNWVtOyAvKiBBZGp1c3QgYXMgbmVjZXNzYXJ5IGZvciBzcGFjaW5nIGZyb20gdGhlIHJpZ2h0IGVkZ2UgKi9cXG4gIHRvcDogNTAlOyAvKiBDZW50ZXIgdmVydGljYWxseSAqL1xcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpOyAvKiBBZGp1c3QgdmVydGljYWwgY2VudGVyaW5nICovXFxufVxcblxcbi5zb3J0LWRyb3Bkb3duIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xcbiAgY29sb3I6ICNGRUZGMDU7IC8qIFllbGxvdyB0ZXh0ICovXFxuICBib3JkZXI6IDJweCBzb2xpZCAjRkVGRjA1OyAvKiBZZWxsb3cgYm9yZGVyICovXFxuICBwYWRkaW5nOiA4cHg7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi5zb3J0LWRyb3Bkb3duOmhvdmVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNGRUZGMDU7IC8qIFllbGxvdyBiYWNrZ3JvdW5kICovXFxuICBjb2xvcjogYmxhY2s7IC8qIEJsYWNrIHRleHQgKi9cXG59XFxuXFxuLnNvcnQtZHJvcGRvd24gb3B0aW9uIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDAwMDA7IC8qIEN5YmVycHVuayBCbGFjayBmb3Igb3B0aW9ucyAqL1xcbiAgY29sb3I6ICNGRUZGMDU7IC8qIEN5YmVycHVuayBZZWxsb3cgdGV4dCBmb3Igb3B0aW9ucyAqL1xcbiAgZm9udC1mYW1pbHk6ICdPcmJpdHJvbic7IC8qIE1hdGNoIHRoZSBmb250IHdpdGggdGhlIHJlc3Qgb2YgdGhlIHNpdGUgKi9cXG59XFxuXFxuLmNvaW5zLXNlY3Rpb24ge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBhbGlnbi1pdGVtczogY2VudGVyOyAvKiBFbnN1cmUgdGhlIHNlY3Rpb24gaXMgY2VudGVyZWQgKi9cXG4gIHdpZHRoOiAxMDAlO1xcbiAgcGFkZGluZy1ib3R0b206IDdlbTtcXG59XFxuXFxuLnNlbGVjdG9yLWNvbnRhaW5lciB7XFxuICBtYXJnaW4tYm90dG9tOiAwLjVlbTsgLyogU3BhY2UgYmV0d2VlbiB0aGUgc2VsZWN0b3IgYW5kIHRoZSBjb2lucyAqL1xcbiAgbWFyZ2luLWxlZnQ6IDEwJTtcXG4gIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7IC8qIEFsaWduIHRoZSBkcm9wZG93biBzZWxlY3RvciAqL1xcbiAgd2lkdGg6IDE1JTsgXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSk7IC8qIFNlbWktdHJhbnNwYXJlbnQgZ3JleSAqL1xcbiAgYm9yZGVyLXJhZGl1czogMTBweDsgLyogUm91bmRlZCBjb3JuZXJzIGZvciB0aGUgY29udGFpbmVyICovXFxuICBib3gtc2hhZG93OiAwIDRweCA2cHggcmdiYSgwLCAwLCAwLCAwLjEpOyAvKiBPcHRpb25hbDogQWRkcyBhIHN1YnRsZSBzaGFkb3cgZm9yIGRlcHRoICovXFxuICB6LWluZGV4OiAxMDAwO1xcbn1cXG4uc2VsZWN0b3ItY29udGFpbmVyOmhvdmVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC43NSk7IC8qIERhcmtlciBzZW1pLXRyYW5zcGFyZW50IGdyZXkgb24gaG92ZXIgKi9cXG59XFxuXFxuLmN1c3RvbS1yZWFjdC1zZWxlY3QtY29udGFpbmVyOmhvdmVyIC5jdXN0b20tcmVhY3Qtc2VsZWN0X19jb250cm9sIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNGRUZGMDU7IC8qIFllbGxvdyBiYWNrZ3JvdW5kIG9uIGhvdmVyICovXFxuICBjb2xvcjogIzAwMDAwMDsgLyogQmxhY2sgdGV4dCBvbiBob3ZlciAqL1xcbn1cXG5cXG4uY3VzdG9tLXJlYWN0LXNlbGVjdC1jb250YWluZXI6aG92ZXIgLmN1c3RvbS1yZWFjdC1zZWxlY3RfX3NpbmdsZS12YWx1ZSB7XFxuICBjb2xvcjogIzAwMDAwMDsgLyogRW5zdXJlIHRleHQgY29sb3IgY2hhbmdlcyB0byBibGFjayBvbiBob3ZlciAqL1xcbn1cXG5cXG4uZ3JhdmUtYnV0dG9uIHtcXG4gIHBhZGRpbmc6IDZweCAxMnB4O1xcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpOyAvKiBTZW1pLXRyYW5zcGFyZW50IGJhY2tncm91bmQgKi9cXG4gIGNvbG9yOiAjRkVGRjA1OyAvKiBDeWJlcnB1bmsgWWVsbG93ICovXFxuICBib3JkZXI6IDJweCBzb2xpZCAjRkVGRjA1O1xcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxuICBvcGFjaXR5OiAwLjk1O1xcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzLCBjb2xvciAwLjNzLCBib3JkZXIgMC4zcztcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgLyogb3IgJ2Jsb2NrJyBpZiB5b3UgcHJlZmVyICovXFxufVxcblxcbi5ncmF2ZS1idXR0b246aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZFRkYwNTtcXG4gIGNvbG9yOiAjMDAwMDAwO1xcbiAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcXG59XFxuXFxuLmdyYXZleWFyZC1idXR0b24tY29udGFpbmVyIHtcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIG1hcmdpbi10b3A6IDUwcHg7IC8qIEFkanVzdCB0aGUgc3BhY2UgYWJvdmUgdGhlIGJ1dHRvbiAqL1xcbiAgYm90dG9tOiAyJTsgLyogRGlzdGFuY2UgZnJvbSB0aGUgYm90dG9tICovXFxuICB3aWR0aDogMzUlO1xcbn1cXG5cXG4uZ3JhdmV5YXJkLWNvaW4taW1hZ2Uge1xcbiAgZmlsdGVyOiBncmF5c2NhbGUoNTAlKSBicmlnaHRuZXNzKDc1JSk7XFxuICB0cmFuc2l0aW9uOiBmaWx0ZXIgMC4zcyBlYXNlO1xcbn1cXG5cXG4uZ3JhdmV5YXJkLWNvaW4taW1hZ2U6aG92ZXIge1xcbiAgZmlsdGVyOiBncmF5c2NhbGUoMjUlKSBicmlnaHRuZXNzKDkwJSk7XFxufVxcblxcbi5ncmF2ZS12YWx1ZSB7XFxuICBmb250LXNpemU6IDAuNmVtO1xcbiAgY29sb3I6ICNmZmE0YTg7XFxuICBvcGFjaXR5OiAwLjk7XFxuICB0ZXh0LXNoYWRvdzpcXG4gICAgMCAwIDFweCByZ2JhKDI1NSwxNjQsMTY4LCAwLjcpLCAvKiBTbGlnaHRseSB0cmFuc3BhcmVudCAqL1xcbiAgICAwIDAgMnB4IHJnYmEoMjU1LDE2NCwxNjgsIDAuNSksXFxuICAgIDAgMCA0cHggcmdiYSgyNTUsMTY0LDE2OCwgMC40KTtcXG59XFxuXFxuXFxuOnJvb3Qge1xcbiAgLS1zY2FsZS1mYWN0b3I6IDE7IC8qIERlZmF1bHQgc2NhbGUgZmFjdG9yICovXFxuICAtLXNwb3RsaWdodC1zaXplLWJhc2U6IDEwMHB4OyAvKiBCYXNlIHNpemUgb2YgdGhlIHNwb3RsaWdodCAqL1xcblxcbn1cXG5cXG5AbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcXG4gIC5zcG90bGlnaHQsIC5kb2dlZGFuY2UgLnNwb3RsaWdodCB7XFxuICAgIHdpZHRoOiBjYWxjKHZhcigtLXNwb3RsaWdodC1zaXplLWJhc2UpICogMC43NSk7IC8qIFNjYWxlIGRvd24gdGhlIHNpemUgZm9yIG1lZGl1bSBzY3JlZW5zICovXFxuICAgIGhlaWdodDogY2FsYyh2YXIoLS1zcG90bGlnaHQtc2l6ZS1iYXNlKSAqIDAuNzUpOyAvKiBTY2FsZSBkb3duIHRoZSBzaXplIGZvciBtZWRpdW0gc2NyZWVucyAqL1xcbiAgfVxcbiAgOnJvb3Qge1xcbiAgICAtLXNjYWxlLWZhY3RvcjogMC43NTsgLyogU2NhbGUgZG93biB0byA3NSUgb24gbWVkaXVtIHNjcmVlbnMgKi9cXG4gIH1cXG59XFxuXFxuQG1lZGlhIChtYXgtd2lkdGg6IDQ4MHB4KSB7XFxuICAuc3BvdGxpZ2h0LCAuZG9nZWRhbmNlIC5zcG90bGlnaHQge1xcbiAgICB3aWR0aDogY2FsYyh2YXIoLS1zcG90bGlnaHQtc2l6ZS1iYXNlKSAqIDAuNSk7IC8qIFNjYWxlIGRvd24gdGhlIHNpemUgZm9yIHNtYWxsIHNjcmVlbnMgKi9cXG4gICAgaGVpZ2h0OiBjYWxjKHZhcigtLXNwb3RsaWdodC1zaXplLWJhc2UpICogMC41KTsgLyogU2NhbGUgZG93biB0aGUgc2l6ZSBmb3Igc21hbGwgc2NyZWVucyAqL1xcbiAgfVxcbiAgOnJvb3Qge1xcbiAgICAtLXNjYWxlLWZhY3RvcjogMC41OyAvKiBTY2FsZSBkb3duIHRvIDUwJSBvbiBzbWFsbCBzY3JlZW5zICovXFxuICB9XFxufVxcblxcbi5kYW5jZWhhbGwge1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBtaW4taGVpZ2h0OiAxMDB2aDtcXG4gIG92ZXJmbG93OiBoaWRkZW47XFxufVxcblxcbi5kYW5jZWhhbGwtYmFja2dyb3VuZCB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogMTAwJTtcXG4gIHotaW5kZXg6IC0xO1xcbn1cXG5cXG4uZ2lmcy1jb250YWluZXIge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgbGVmdDogMjUlOyAvKiBTdGFydCBvZiB0aGUgZGFuY2UgZmxvb3IgKi9cXG4gIHJpZ2h0OiAyNSU7IC8qIEVuZCBvZiB0aGUgZGFuY2UgZmxvb3IgKi9cXG4gIGJvdHRvbTogMTAlOyAvKiBCb3R0b20gb2YgdGhlIGRhbmNlIGZsb29yICovXFxuICB0b3A6IDcwJTsgLyogVG9wIG9mIHRoZSBkYW5jZSBmbG9vciAqL1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtd3JhcDogd3JhcDtcXG4gIGFsaWduLWNvbnRlbnQ6IGZsZXgtZW5kO1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XFxufVxcblxcbi5naWYge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MgZWFzZSwgZmlsdGVyIDAuM3MgZWFzZTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblxcbi5naWY6aG92ZXIge1xcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjE1KTsgLyogSW5jcmVhc2Ugc2l6ZSAqL1xcbiAgZmlsdGVyOiBicmlnaHRuZXNzKDEuMjUpIGNvbnRyYXN0KDEuMik7IC8qIE1ha2UgaXQgYnJpZ2h0ZXIgKi9cXG59XFxuXFxuLnNwb3RsaWdodCB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICBib3R0b206IDA7IC8qIFN0YXJ0IGJlbG93IHRoZSBHSUYgKi9cXG4gIGxlZnQ6IDUwJTtcXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSB0cmFuc2xhdGVZKDQwJSk7XFxuICB3aWR0aDogdmFyKC0tc3BvdGxpZ2h0LXNpemUtYmFzZSk7XFxuICBoZWlnaHQ6IHZhcigtLXNwb3RsaWdodC1zaXplLWJhc2UpO1xcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xcbiAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjI1KTsgLyogU2VtaS10cmFuc3BhcmVudCB3aGl0ZSBmb3IgdGhlIHNwb3RsaWdodCBlZmZlY3QgKi9cXG4gIHotaW5kZXg6IC0xOyAvKiBFbnN1cmUgaXQncyB1bmRlciB0aGUgR0lGICovXFxuICB0cmFuc2l0aW9uOiB3aWR0aCAwLjNzIGVhc2UsIGhlaWdodCAwLjNzIGVhc2U7IC8qIFNtb290aCB0cmFuc2l0aW9uIGZvciByZXNpemluZyAqL1xcbn1cXG5cXG4uc3BlY2lhbC1zcG90bGlnaHQge1xcbiAgYm90dG9tOiAtMjAlOyAvKiBBZGp1c3QgZm9yIGRvZ2VkYW5jZS5naWYgdG8gbW92ZSB0aGUgc3BvdGxpZ2h0IGxvd2VyICovXFxufVxcblxcbi5kb2dlZGFuY2UgLnNwb3RsaWdodCB7XFxuICBib3R0b206IC0zMCU7IC8qIExvd2VyIHRoZSBzcG90bGlnaHQgZm9yIHRoZSBkb2dlZGFuY2UuZ2lmICovXFxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgdHJhbnNsYXRlWSg1MCUpOyAvKiBBZGp1c3Qgc3BlY2lmaWNhbGx5IGZvciBkb2dlZGFuY2UuZ2lmICovXFxufVxcblxcbi5ob21lLWJ1dHRvbi1jb250YWluZXIge1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbiAgbGVmdDogNTAlO1xcbiAgYm90dG9tOiAzJTtcXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcXG4gIHotaW5kZXg6IDEwMDsgLyogQWRqdXN0IGFzIG5lZWRlZCB0byBlbnN1cmUgaXQncyBhYm92ZSBvdGhlciBlbGVtZW50cyAqL1xcbn1cXG5cXG4uaG9tZS1idXR0b24ge1xcbiAgcGFkZGluZzogNnB4IDEycHg7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSk7IC8qIFNlbWktdHJhbnNwYXJlbnQgYmFja2dyb3VuZCAqL1xcbiAgY29sb3I6ICNGRUZGMDU7IC8qIEN5YmVycHVuayBZZWxsb3cgdGV4dCAqL1xcbiAgYm9yZGVyOiAycHggc29saWQgI0ZFRkYwNTsgLyogQ3liZXJwdW5rIFllbGxvdyBib3JkZXIgKi9cXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xcbiAgb3BhY2l0eTogMC45NTtcXG4gIGxlZnQ6IDA7XFxuICByaWdodDogMDtcXG4gIGJvdHRvbTogMCU7IC8qIEFkanVzdCB0aGlzIHZhbHVlIGFzIG5lZWRlZCB0byBtb3ZlIHRoZSBidXR0b24gbG93ZXIgKi8gXFxuICBib3JkZXItcmFkaXVzOiA1cHg7XFxuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MsIGNvbG9yIDAuM3MsIGJvcmRlciAwLjNzO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyAvKiBFbnN1cmVzIHRoZSBsaW5rIGJlaGF2ZXMgbGlrZSBhIGJ1dHRvbiAqL1xcbn1cXG5cXG4uaG9tZS1idXR0b246aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZFRkYwNTsgLyogQ3liZXJwdW5rIFllbGxvdyBiYWNrZ3JvdW5kIG9uIGhvdmVyICovXFxuICBjb2xvcjogIzAwMDAwMDsgLyogVGV4dCBjb2xvciBvbiBob3ZlciAqL1xcbiAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDsgLyogQm9yZGVyIGNvbG9yIG9uIGhvdmVyICovXFxufVxcblxcbi5zb25nLXNlbGVjdG9yLWNvbnRhaW5lciB7XFxuICBwb3NpdGlvbjogZml4ZWQ7XFxuICBsZWZ0OiAxMCU7XFxuICB0b3A6IDQwJTtcXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcXG4gIHotaW5kZXg6IDEwMDtcXG4gIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7IC8qIEFsaWduIHRoZSBkcm9wZG93biBzZWxlY3RvciAqL1xcbiAgd2lkdGg6IDIwJTsgXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSk7IC8qIFNlbWktdHJhbnNwYXJlbnQgZ3JleSAqL1xcbiAgYm9yZGVyLXJhZGl1czogMTBweDsgLyogUm91bmRlZCBjb3JuZXJzIGZvciB0aGUgY29udGFpbmVyICovXFxuICBib3gtc2hhZG93OiAwIDRweCA2cHggcmdiYSgwLCAwLCAwLCAwLjEpOyAvKiBPcHRpb25hbDogQWRkcyBhIHN1YnRsZSBzaGFkb3cgZm9yIGRlcHRoICovXFxufVxcblxcbi5zb25nLXNlbGVjdG9yIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC44KTtcXG4gIGNvbG9yOiAjRkVGRjA1OyAvKiBDeWJlcnB1bmsgWWVsbG93ICovXFxuICBib3JkZXI6IDFweCBzb2xpZCAjRkVGRjA1OyAvKiBDeWJlcnB1bmsgWWVsbG93IGJvcmRlciAqL1xcbiAgZm9udC1mYW1pbHk6ICdPcmJpdHJvbicsIHNhbnMtc2VyaWY7XFxuICBwYWRkaW5nOiAxMHB4O1xcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgb3BhY2l0eTogMC45NTtcXG59XFxuXFxuLnNvbmctc2VsZWN0b3I6aG92ZXIge1xcbiAgZmlsdGVyOiBicmlnaHRuZXNzKDEuMik7XFxufVxcbi8qIGdsb2JhbHMuY3NzICovXFxuLmVsb25HaWYge1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbiAgYm90dG9tOiAwO1xcbiAgd2lkdGg6IDE1JTsgLyogQWRqdXN0IGJhc2VkIG9uIHlvdXIgcHJlZmVyZW5jZSAqL1xcbiAgaGVpZ2h0OiAxMCU7IC8qIEV4YW1wbGUgaGVpZ2h0ICovXFxuICB6LWluZGV4OiAxOyAvKiBBZGp1c3QgYmFzZWQgb24gbGF5ZXJpbmcgbmVlZHMgKi9cXG59XFxuLmZpbGxlZFpvb21HaWYge1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbiAgYm90dG9tOiAwO1xcbiAgd2lkdGg6IDEyJTsgLyogQWRqdXN0IGJhc2VkIG9uIHlvdXIgcHJlZmVyZW5jZSAqL1xcbiAgaGVpZ2h0OiAxMiU7IC8qIEV4YW1wbGUgaGVpZ2h0ICovXFxuICB6LWluZGV4OiAxOyAvKiBBZGp1c3QgYmFzZWQgb24gbGF5ZXJpbmcgbmVlZHMgKi9cXG59XFxuLnBlcGVJbWFnZSB7XFxuICBwb3NpdGlvbjogZml4ZWQ7XFxuICBib3R0b206IDA7XFxuICB3aWR0aDogMTElOyAvKiBBZGp1c3QgYmFzZWQgb24geW91ciBwcmVmZXJlbmNlICovXFxuICBoZWlnaHQ6IDExJTsgLyogRXhhbXBsZSBoZWlnaHQgKi9cXG4gIHotaW5kZXg6IDE7IC8qIEFkanVzdCBiYXNlZCBvbiBsYXllcmluZyBuZWVkcyAqL1xcbn1cXG4uZWdnZG9nSW1hZ2Uge1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbiAgYm90dG9tOiAwO1xcbiAgd2lkdGg6IDExJTsgLyogQWRqdXN0IGJhc2VkIG9uIHlvdXIgcHJlZmVyZW5jZSAqL1xcbiAgaGVpZ2h0OiAxMSU7IC8qIEV4YW1wbGUgaGVpZ2h0ICovXFxuICB6LWluZGV4OiAxOyAvKiBBZGp1c3QgYmFzZWQgb24gbGF5ZXJpbmcgbmVlZHMgKi9cXG59XFxuXFxuLmxlZnRJbWFnZSB7XFxuICBwb3NpdGlvbjogZml4ZWQ7XFxuICBib3R0b206IDA7XFxuICB3aWR0aDogMjglOyAvKiBBZGp1c3QgYmFzZWQgb24geW91ciBwcmVmZXJlbmNlICovXFxuICBoZWlnaHQ6IDEyJTsgLyogRXhhbXBsZSBoZWlnaHQgKi9cXG4gIHotaW5kZXg6IDE7IC8qIEFkanVzdCBiYXNlZCBvbiBsYXllcmluZyBuZWVkcyAqL1xcbn1cXG5cXG4ucmlnaHRJbWFnZSB7XFxuICBwb3NpdGlvbjogZml4ZWQ7XFxuICBib3R0b206IDA7XFxuICB3aWR0aDogMjAlOyAvKiBBZGp1c3QgYmFzZWQgb24geW91ciBwcmVmZXJlbmNlICovXFxuICBoZWlnaHQ6IDEzJTsgLyogRXhhbXBsZSBoZWlnaHQgKi9cXG4gIHotaW5kZXg6IDIzOyAvKiBBZGp1c3QgYmFzZWQgb24gbGF5ZXJpbmcgbmVlZHMgKi9cXG59XFxuXFxuLmxlZnRJbWFnZSB7XFxuICBsZWZ0OiAxMCU7XFxufVxcblxcbi5yaWdodEltYWdlIHtcXG4gIHJpZ2h0OiAxMCU7XFxuICB6LWluZGV4OiAzO1xcbn1cXG5cXG4uZWxvbkdpZiB7XFxuICByaWdodDogMjAlOyAvKiBQb3NpdGlvbiB0byB0aGUgbGVmdCBvZiByaWdodC5wbmcgKi9cXG4gIHotaW5kZXg6IDI7XFxufVxcblxcbi5maWxsZWRab29tR2lmIHtcXG4gIGxlZnQ6IDI5JTsgLyogUG9zaXRpb24gdG8gdGhlIHJpZ2h0IG9mIGxlZnQucG5nICovXFxuICB6LWluZGV4OiAyO1xcbn1cXG5cXG4ucGVwZUltYWdlIHtcXG4gIHJpZ2h0OiAxNSU7XFxuICB0b3A6IDcwJTtcXG4gIHotaW5kZXg6IDI7XFxufVxcblxcbi5lZ2dkb2dJbWFnZSB7XFxuICBsZWZ0OiAxNSU7XFxuICB0b3A6IDcwJTtcXG4gIHotaW5kZXg6IDI7XFxufVxcblxcblxcbi5sZWZ0SW1hZ2U6aG92ZXIsIC5yaWdodEltYWdlOmhvdmVyLCAuZWxvbkdpZjpob3ZlciwgLmZpbGxlZFpvb21HaWY6aG92ZXIsIC5wZXBlSW1hZ2U6aG92ZXIsIC5lZ2dkb2dJbWFnZTpob3ZlciB7XFxuICAvKiBJbmNyZWFzZSBzaXplICovXFxuICB0cmFuc2Zvcm06IHNjYWxlKDEuMSk7XFxuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcyBlYXNlLCBmaWx0ZXIgMC4zcyBlYXNlO1xcblxcbiAgLyogR2xvdyBlZmZlY3QgKi9cXG4gIGZpbHRlcjogZHJvcC1zaGFkb3coMCAwIDhweCAjRkVGRjA1KSBkcm9wLXNoYWRvdygwIDAgMTJweCAjRkVGRjA1KTtcXG4gIHotaW5kZXg6IDEwOyAvKiBFbnN1cmUgdGhlIGhvdmVyZWQgZWxlbWVudCBpcyBhYm92ZSBvdGhlcnMgKi9cXG59XFxuXFxuLyogRW5zdXJlIHRoZSB0cmFuc2Zvcm0gb3JpZ2luIGlzIHRoZSBib3R0b20gY2VudGVyIGZvciBhIG5hdHVyYWwgZ3Jvd3RoIGVmZmVjdCAqL1xcbi5sZWZ0SW1hZ2UsIC5yaWdodEltYWdlLCAuZWxvbkdpZiwgLmZpbGxlZFpvb21HaWYsIC5wZXBlSW1hZ2UsIC5lZ2dkb2dJbWFnZSB7XFxuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcyBlYXNlLCBmaWx0ZXIgMC4zcyBlYXNlOyAvKiBTbW9vdGggdHJhbnNpdGlvbiBmb3IgdHJhbnNmb3JtIGFuZCBmaWx0ZXIgKi9cXG4gIHRyYW5zZm9ybS1vcmlnaW46IGJvdHRvbSBjZW50ZXI7IC8qIEdyb3cgZnJvbSB0aGUgYm90dG9tICovXFxufVxcblxcbi5hcGUtZ2lmOmhvdmVyIHtcXG4gIGZpbHRlcjogYnJpZ2h0bmVzcygxLjIpIGRyb3Atc2hhZG93KDAgMCAxMHB4ICNGRUZGMDUpOyAvKiBHbG93IGVmZmVjdCAqL1xcbiAgdHJhbnNpdGlvbjogZmlsdGVyIDAuM3MgZWFzZTtcXG59XFxuXFxuLmFwZS1jb250YWluZXI6aG92ZXIge1xcbiAgY3Vyc29yOiB1cmwoJy9zcGVjaWFsLWN1cnNvci5wbmcnKSwgYXV0bztcXG59XFxuXFxuLmFwZS1jb250YWluZXI6aG92ZXIgLmFwZS1naWYge1xcbiAgZmlsdGVyOiBicmlnaHRuZXNzKDEuMikgZHJvcC1zaGFkb3coMCAwIDEwcHggI0ZFRkYwNSk7IC8qIEdsb3cgZWZmZWN0ICovXFxuICB0cmFuc2Zvcm06IHNjYWxlKDEuMSk7IC8qIFNsaWdodCBpbmNyZWFzZSBpbiBzaXplICovXFxuICB0cmFuc2l0aW9uOiBmaWx0ZXIgMC4zcyBlYXNlLCB0cmFuc2Zvcm0gMC4zcyBlYXNlOyAvKiBTbW9vdGggdHJhbnNpdGlvbiAqL1xcbn1cXG5cXG4udGl0bGUtYmFja2dyb3VuZCB7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IC8qIG9yICdibG9jaycgZGVwZW5kaW5nIG9uIHlvdXIgbGF5b3V0ICovXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSk7IC8qIFNlbWktdHJhbnNwYXJlbnQgYmxhY2sgKi9cXG4gIGJvcmRlci1yYWRpdXM6IDhweDsgLyogQWRqdXN0IGFzIG5lZWRlZCBmb3Igcm91bmRlZCBjb3JuZXJzICovXFxuICBwYWRkaW5nOiA1cHg7IC8qIEFkanVzdCBwYWRkaW5nIHRvIGNvbnRyb2wgdGhlIHNwYWNlIGFyb3VuZCB0aGUgdGV4dCAqL1xcbiAgY29sb3I6ICNGRUZGMDU7IC8qIEV4YW1wbGUgdGV4dCBjb2xvciwgYWRqdXN0IGFzIG5lZWRlZCAqL1xcbiAgbWFyZ2luOiAwIGF1dG87IC8qIENlbnRlciB0aGUgdGl0bGUgaWYgbmVlZGVkICovXFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7IC8qIENlbnRlciB0ZXh0IHdpdGhpbiB0aGUgYmFja2dyb3VuZCAqL1xcbn1cXG5cXG4uaG92ZXJcXFxcOm9wYWNpdHktMTAwOmhvdmVye1xcbiAgb3BhY2l0eTogMTtcXG59XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovL3NyYy9zdHlsZXMvZ2xvYmFscy5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUEsNkVBQTZFO0FBQzdFOztDQUFjO0FBQWQ7OztDQUFjO0FBQWQ7OztFQUFBLHNCQUFjLEVBQWQsTUFBYztFQUFkLGVBQWMsRUFBZCxNQUFjO0VBQWQsbUJBQWMsRUFBZCxNQUFjO0VBQWQscUJBQWMsRUFBZCxNQUFjO0FBQUE7QUFBZDs7RUFBQSxnQkFBYztBQUFBO0FBQWQ7Ozs7Ozs7O0NBQWM7QUFBZDs7RUFBQSxnQkFBYyxFQUFkLE1BQWM7RUFBZCw4QkFBYyxFQUFkLE1BQWM7RUFBZCxnQkFBYyxFQUFkLE1BQWM7RUFBZCxjQUFjO0tBQWQsV0FBYyxFQUFkLE1BQWM7RUFBZCwrSEFBYyxFQUFkLE1BQWM7RUFBZCw2QkFBYyxFQUFkLE1BQWM7RUFBZCwrQkFBYyxFQUFkLE1BQWM7RUFBZCx3Q0FBYyxFQUFkLE1BQWM7QUFBQTtBQUFkOzs7Q0FBYztBQUFkO0VBQUEsU0FBYyxFQUFkLE1BQWM7RUFBZCxvQkFBYyxFQUFkLE1BQWM7QUFBQTtBQUFkOzs7O0NBQWM7QUFBZDtFQUFBLFNBQWMsRUFBZCxNQUFjO0VBQWQsY0FBYyxFQUFkLE1BQWM7RUFBZCxxQkFBYyxFQUFkLE1BQWM7QUFBQTtBQUFkOztDQUFjO0FBQWQ7RUFBQSx5Q0FBYztVQUFkLGlDQUFjO0FBQUE7QUFBZDs7Q0FBYztBQUFkOzs7Ozs7RUFBQSxrQkFBYztFQUFkLG9CQUFjO0FBQUE7QUFBZDs7Q0FBYztBQUFkO0VBQUEsY0FBYztFQUFkLHdCQUFjO0FBQUE7QUFBZDs7Q0FBYztBQUFkOztFQUFBLG1CQUFjO0FBQUE7QUFBZDs7Ozs7Q0FBYztBQUFkOzs7O0VBQUEsK0dBQWMsRUFBZCxNQUFjO0VBQWQsNkJBQWMsRUFBZCxNQUFjO0VBQWQsK0JBQWMsRUFBZCxN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RUFBRSw0QkFBNEI7RUFDbkQsaURBQWlELEVBQUUsc0JBQXNCO0FBQzNFOztBQUVBO0VBQ0UscUJBQXFCLEVBQUUsd0NBQXdDO0VBQy9ELG9DQUFvQyxFQUFFLDJCQUEyQjtFQUNqRSxrQkFBa0IsRUFBRSx5Q0FBeUM7RUFDN0QsWUFBWSxFQUFFLHdEQUF3RDtFQUN0RSxjQUFjLEVBQUUseUNBQXlDO0VBQ3pELGNBQWMsRUFBRSwrQkFBK0I7RUFDL0Msa0JBQWtCLEVBQUUsc0NBQXNDO0FBQzVEOztBQTd3QkE7RUFBQTtBQTZ3QkNcIixcInNvdXJjZXNDb250ZW50XCI6W1wiQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9T3JiaXRyb24mZGlzcGxheT1zd2FwJyk7XFxuQHRhaWx3aW5kIGJhc2U7XFxuQHRhaWx3aW5kIGNvbXBvbmVudHM7XFxuQHRhaWx3aW5kIHV0aWxpdGllcztcXG5cXG4uYnV0dG9uLWNvbm5lY3Qtd2FsbGV0IHtcXG4gIHdpZHRoOiA4ZW07XFxuICBwYWRkaW5nOiAwLjFlbSAwLjRlbTtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41KTsgLyogU2VtaS10cmFuc3BhcmVudCBiYWNrZ3JvdW5kICovXFxuICBjb2xvcjogI0ZFRkYwNTsgLyogQ3liZXJwdW5rIFllbGxvdyB0ZXh0ICovXFxuICBib3JkZXI6IDJweCBzb2xpZCAjRkVGRjA1OyAvKiBDeWJlcnB1bmsgWWVsbG93IGJvcmRlciAqL1xcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxuICBmb250LXNpemU6IDAuN2VtO1xcbiAgb3BhY2l0eTogMC45NTtcXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcXG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcywgY29sb3IgMC4zcywgYm9yZGVyIDAuM3MsIG9wYWNpdHkgMC4zcztcXG59XFxuXFxuLmJ1dHRvbi1jb25uZWN0LXdhbGxldDpob3ZlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkVGRjA1OyAvKiBDeWJlcnB1bmsgWWVsbG93IGJhY2tncm91bmQgKi9cXG4gIGNvbG9yOiAjMDAwMDAwOyAvKiBNYWtlIHRleHQgY29sb3IgbWF0Y2ggdGhlIGJhY2tncm91bmQgY29sb3IgZm9yICd0cmFuc3BhcmVudCcgZWZmZWN0ICovXFxuICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50OyAvKiBPcHRpb25hbDogbWFrZSBib3JkZXIgdHJhbnNwYXJlbnQgb24gaG92ZXIgKi9cXG4gIG9wYWNpdHk6IDAuOTU7XFxufVxcblxcbi52ZXJ0aWNhbC1idXR0b24ge1xcbiAgd2lkdGg6IDJlbTtcXG4gIHBhZGRpbmc6IDAuMWVtIDAuNGVtO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpOyAvKiBTZW1pLXRyYW5zcGFyZW50IGJhY2tncm91bmQgKi9cXG4gIGNvbG9yOiAjRkVGRjA1OyAvKiBDeWJlcnB1bmsgWWVsbG93IHRleHQgKi9cXG4gIGJvcmRlcjogMnB4IHNvbGlkICNGRUZGMDU7IC8qIEN5YmVycHVuayBZZWxsb3cgYm9yZGVyICovXFxuICBmb250LXdlaWdodDogYm9sZDtcXG4gIG9wYWNpdHk6IDAuOTU7XFxuICBib3JkZXItcmFkaXVzOiA1cHg7XFxuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MsIGNvbG9yIDAuM3MsIGJvcmRlciAwLjNzLCBvcGFjaXR5IDAuM3M7XFxufVxcblxcbi52ZXJ0aWNhbC1idXR0b246aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZFRkYwNTsgLyogQ3liZXJwdW5rIFllbGxvdyBiYWNrZ3JvdW5kICovXFxuICBjb2xvcjogIzAwMDAwMDsgLyogTWFrZSB0ZXh0IGNvbG9yIG1hdGNoIHRoZSBiYWNrZ3JvdW5kIGNvbG9yIGZvciAndHJhbnNwYXJlbnQnIGVmZmVjdCAqL1xcbiAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDsgLyogT3B0aW9uYWw6IG1ha2UgYm9yZGVyIHRyYW5zcGFyZW50IG9uIGhvdmVyICovXFxuICBvcGFjaXR5OiAwLjk1O1xcbn1cXG5cXG46cm9vdCB7XFxuICAtLWZvcmVncm91bmQtcmdiOiAwLCAwLCAwO1xcbiAgLS1iYWNrZ3JvdW5kLXN0YXJ0LXJnYjogMjE0LCAyMTksIDIyMDtcXG4gIC0tYmFja2dyb3VuZC1lbmQtcmdiOiAyNTUsIDI1NSwgMjU1O1xcbn1cXG5cXG5AbWVkaWEgKHByZWZlcnMtY29sb3Itc2NoZW1lOiBkYXJrKSB7XFxuICA6cm9vdCB7XFxuICAgIC0tZm9yZWdyb3VuZC1yZ2I6IDI1NSwgMjU1LCAyNTU7XFxuICAgIC0tYmFja2dyb3VuZC1zdGFydC1yZ2I6IDAsIDAsIDA7XFxuICAgIC0tYmFja2dyb3VuZC1lbmQtcmdiOiAwLCAwLCAwO1xcbiAgfVxcbn1cXG5cXG5ib2R5IHtcXG4gIGZvbnQtZmFtaWx5OiAnT3JiaXRyb24nLCBzYW5zLXNlcmlmO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDAwMDsgLyogQ3liZXJwdW5rIEJsYWNrICovXFxuICBjb2xvcjogI0ZFRkYwNTsgLyogQ3liZXJwdW5rIFllbGxvdyAqL1xcbn1cXG5cXG5cXG5AbGF5ZXIgdXRpbGl0aWVzIHtcXG4gIC50ZXh0LWJhbGFuY2Uge1xcbiAgICB0ZXh0LXdyYXA6IGJhbGFuY2U7XFxuICB9XFxufVxcblxcbi51Zm8ge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgLyogQWRqdXN0IHNpemUgYXMgbmVlZGVkICovXFxufVxcblxcbi51Zm8xIHtcXG4gIGFuaW1hdGlvbjogdWZvMUFuaW1hdGlvbiA1cyBsaW5lYXIgaW5maW5pdGU7XFxuICB3aWR0aDogN2VtOyAvKiBBZGp1c3Qgc2l6ZSBhcyBuZWVkZWQgKi9cXG59XFxuXFxuQGtleWZyYW1lcyB1Zm8xQW5pbWF0aW9uIHtcXG4gIDAlIHsgcmlnaHQ6IDAlOyB9XFxuICAxMDAlIHsgcmlnaHQ6IDIwMCU7IH1cXG59XFxuXFxuLnVmbzIge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgd2lkdGg6IDgwcHg7IC8qIEFkanVzdCBzaXplIGFzIG5lZWRlZCAqL1xcbiAgdG9wOiAxMHB4OyAvKiBTdGFydCBqdXN0IG9mZiB0aGUgdG9wIG9mIHRoZSBzY3JlZW4gKi9cXG4gIGxlZnQ6IC0xMDBweDsgLyogU3RhcnQgb2ZmLXNjcmVlbiB0byB0aGUgbGVmdCAqL1xcbiAgb3BhY2l0eTogMDsgLyogSW5pdGlhbGx5IGhpZGRlbiAqL1xcbiAgYW5pbWF0aW9uOiBub25lOyAvKiBObyBhbmltYXRpb24gaW5pdGlhbGx5ICovXFxufVxcblxcbkBrZXlmcmFtZXMgdWZvMkFuaW1hdGlvbiB7XFxuICAwJSwgMTAwJSB7IGxlZnQ6IC0xMDBweDsgb3BhY2l0eTogMDsgfVxcbiAgMjUlLCA3NSUgeyBsZWZ0OiAxMjBweDsgb3BhY2l0eTogMTsgfSAvKiBBZGp1c3QgYXMgbmVlZGVkICovXFxufVxcblxcbkBrZXlmcmFtZXMgYm9tYkFuaW1hdGlvbiB7XFxuICAwJSwgMTAwJSB7IG9wYWNpdHk6IDA7IH1cXG4gIDUwJSB7IG9wYWNpdHk6IDE7IH1cXG59XFxuXFxuLmJvbWIge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgYW5pbWF0aW9uOiBib21iQW5pbWF0aW9uIDEuN3MgbGluZWFyO1xcbiAgd2lkdGg6IDI4cHg7IC8qIEFkanVzdCBzaXplIGFzIG5lZWRlZCAqL1xcbiAgb3BhY2l0eTogMC44O1xcbn1cXG5cXG4ubmVvbi10aXRsZS1tYWluIHtcXG4gIHBhZGRpbmctdG9wOiAwLjJlbTtcXG4gIGZvbnQtc2l6ZTogMmVtOyAvKiBBZGp1c3QgdGhlIHNpemUgYXMgbmVlZGVkICovXFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7IC8qIENlbnRlciBhbGlnbiB0aGUgdGl0bGUgKi9cXG4gIG1hcmdpbjogMCBhdXRvOyAvKiBDZW50ZXIgdGhlIHRpdGxlIGJsb2NrIGlmIG5lZWRlZCAqL1xcbiAgZGlzcGxheTogYmxvY2s7XFxuICBvcGFjaXR5OiAwLjk2O1xcbn1cXG4ubmVvbi10aXRsZS1tYWluOmhvdmVyIHtcXG4gIGZvbnQtc2l6ZTogMi4wMWVtOyAvKiBBZGp1c3QgdGhlIHNpemUgYXMgbmVlZGVkICovXFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7IC8qIENlbnRlciBhbGlnbiB0aGUgdGl0bGUgKi9cXG4gIG1hcmdpbjogMCBhdXRvOyAvKiBDZW50ZXIgdGhlIHRpdGxlIGJsb2NrIGlmIG5lZWRlZCAqL1xcbiAgZGlzcGxheTogYmxvY2s7XFxuICBvcGFjaXR5OiAwLjk4O1xcbiAgZmlsdGVyOiBicmlnaHRuZXNzKDEzMCUpIGNvbnRyYXN0KDEzMCUpO1xcbn1cXG5cXG4vKiBOZW9uIGdsb3cgZWZmZWN0IGZvciB0aGUgdGl0bGUgKi9cXG4ubmVvbi10aXRsZSB7XFxuICB0ZXh0LXNoYWRvdzpcXG4gICAgMCAwIDFweCByZ2JhKDI1NCwgMjU1LCA1LCAwLjcpLCAvKiBTbGlnaHRseSB0cmFuc3BhcmVudCAqL1xcbiAgICAwIDAgMnB4IHJnYmEoMjU0LCAyNTUsIDUsIDAuNSksXFxuICAgIDAgMCA0cHggcmdiYSgyNTQsIDI1NSwgNSwgMC40KTtcXG59XFxuXFxuLm5lb24tdmFsdWUge1xcbiAgY29sb3I6ICNlOWYxZmY7XFxuICBvcGFjaXR5OiAwLjk7XFxuICB0ZXh0LXNoYWRvdzpcXG4gICAgMCAwIDFweCByZ2JhKDIzMywyNDEsMjU1LCAwLjcpLCAvKiBTbGlnaHRseSB0cmFuc3BhcmVudCAqL1xcbiAgICAwIDAgMnB4IHJnYmEoMjMzLDI0MSwyNTUsIDAuNSksXFxuICAgIDAgMCA0cHggcmdiYSgyMzMsMjQxLDI1NSwgMC40KTtcXG59XFxuXFxuXFxuLyogTmVvbiBnbG93IGVmZmVjdCBmb3IgdGhlIGJ1dHRvbiAqL1xcbi5uZW9uLWJ1dHRvbiwgLnZlcnRpY2FsLWJ1dHRvbiB7XFxuICBib3gtc2hhZG93OlxcbiAgICAwIDAgMXB4IHJnYmEoMjU0LCAyNTUsIDUsIDAuNyksXFxuICAgIDAgMCAycHggcmdiYSgyNTQsIDI1NSwgNSwgMC41KSxcXG4gICAgMCAwIDRweCByZ2JhKDI1NCwgMjU1LCA1LCAwLjQpO1xcbn1cXG5cXG4ubmVvbi1idXR0b246aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZFRkYwNTsgLyogQ3liZXJwdW5rIFllbGxvdyBiYWNrZ3JvdW5kICovXFxuICBjb2xvcjogIzAwMDAwMDsgLyogTWFrZSB0ZXh0IGNvbG9yIG1hdGNoIHRoZSBiYWNrZ3JvdW5kIGNvbG9yIGZvciAndHJhbnNwYXJlbnQnIGVmZmVjdCAqL1xcbiAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDsgLyogT3B0aW9uYWw6IG1ha2UgYm9yZGVyIHRyYW5zcGFyZW50IG9uIGhvdmVyICovXFxuICBvcGFjaXR5OiAwLjk1O1xcbn1cXG5cXG4udGl0bGUtYnV0dG9uLWNvbnRhaW5lciB7XFxuICBwb3NpdGlvbjogZml4ZWQ7IC8qIEZpeGVkIHBvc2l0aW9uIGF0IHRoZSB0b3AgKi9cXG4gIHRvcDogMDsgLyogQWxpZ24gdG8gdGhlIHRvcCBvZiB0aGUgc2NyZWVuICovXFxuICBsZWZ0OiAwOyAvKiBBbGlnbiB0byB0aGUgbGVmdCBvZiB0aGUgc2NyZWVuICovXFxuICB3aWR0aDogMTAwJTsgLyogU3RyZXRjaCBhY3Jvc3MgdGhlIGZ1bGwgd2lkdGggKi9cXG5cXG4gIHotaW5kZXg6IDEwMDA7IC8qIEVuc3VyZSBpdCdzIGFib3ZlIG90aGVyIGVsZW1lbnRzICovXFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOyAvKiBLZWVwIGV4aXN0aW5nIGFsaWdubWVudCAqL1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIHBhZGRpbmc6IDFlbTsgLyogQWRkIHNvbWUgcGFkZGluZyAqL1xcbn1cXG5cXG4uaW52aXNpYmxlLXNwYWNlciB7XFxuICB2aXNpYmlsaXR5OiBoaWRkZW47XFxufVxcblxcbi5pbnZpc2libGUtYnV0dG9uLXNwYWNlciB7XFxuICB3aWR0aDogc2FtZS1hcy1idXR0b247IC8qIFJlcGxhY2Ugd2l0aCB0aGUgd2lkdGggb2YgeW91ciBidXR0b24gKi9cXG4gIGhlaWdodDogc2FtZS1hcy1idXR0b247IC8qIFJlcGxhY2Ugd2l0aCB0aGUgaGVpZ2h0IG9mIHlvdXIgYnV0dG9uICovXFxuICB2aXNpYmlsaXR5OiBoaWRkZW47IC8qIE1ha2UgdGhlIHNwYWNlciBpbnZpc2libGUgKi9cXG59XFxuXFxuQGtleWZyYW1lcyBmbGlja2VyQW5pbWF0aW9uIHtcXG4gIDAlLCAxMDAlIHsgZmlsdGVyOiBicmlnaHRuZXNzKDk3JSkgY29udHJhc3QoMTAzJSk7IH1cXG4gIDIwJSB7IGZpbHRlcjogYnJpZ2h0bmVzcyg5OSUpIGNvbnRyYXN0KDk4JSk7IH1cXG4gIDQwJSB7IGZpbHRlcjogYnJpZ2h0bmVzcyg5NSUpIGNvbnRyYXN0KDEwNSUpOyB9XFxuICA2MCUgeyBmaWx0ZXI6IGJyaWdodG5lc3MoOTklKSBjb250cmFzdCg5OCUpOyB9XFxuICA4MCUgeyBmaWx0ZXI6IGJyaWdodG5lc3MoOTUlKSBjb250cmFzdCgxMDUlKTsgfVxcbn1cXG5cXG4ubWFpbi1iYWNrZ3JvdW5kIHtcXG4gIGFuaW1hdGlvbjogZmxpY2tlckFuaW1hdGlvbiA4cyBpbmZpbml0ZTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBwYWRkaW5nLXRvcDogNWVtOyAvKiBBZGQgcGFkZGluZyB0byB0aGUgdG9wIGVxdWFsIHRvIHRoZSBoZWlnaHQgb2YgdGhlIHRpdGxlIGJhciAqL1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyOyAvKiBDZW50ZXIgdmVydGljYWxseSAqL1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjsgLyogQ2VudGVyIGhvcml6b250YWxseSAqL1xcbiAgbWluLWhlaWdodDogMTAwdmg7XFxufVxcblxcbi5ub3RpZmljYXRpb24tdGV4dCB7XFxuICBkaXNwbGF5OiBpbmxpbmU7IC8qIEVuc3VyZSBpbmxpbmUgZGlzcGxheSAqL1xcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDsgLyogUHJldmVudCBsaW5lIGJyZWFrcyB3aXRoaW4gdGhlIHRleHQgKi9cXG59XFxuXFxuLndhbGxldC1hZGRyZXNzIHtcXG4gIC8qIEFkZCBzdHlsZXMgc2ltaWxhciB0byB5b3VyIG90aGVyIHRleHQgZWxlbWVudHMgKi9cXG4gIGZvbnQtc2l6ZTogMC43N2VtOyAvKiBBZGp1c3QgYXMgbmVlZGVkICovXFxuICBjb2xvcjogI0ZFRkYwNTsgLyogQ3liZXJwdW5rIFllbGxvdyAqL1xcbiAgLyogQWRkIGFueSBvdGhlciBzdHlsZXMgdG8gbWF0Y2ggdGhlIHBhZ2UncyB0aGVtZSAqL1xcbn1cXG5cXG4uY29pbnMtY29udGFpbmVyIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LXdyYXA6IHdyYXA7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgLyogS2VlcCBjb2lucyBjZW50ZXJlZCAqL1xcbiAgZ2FwOiAwLjFlbTsgLyogQWRqdXN0IGJhc2VkIG9uIHlvdXIgbGF5b3V0ICovXFxuICBmbGV4LWJhc2lzOiAxNSU7IC8qIEFkanVzdCBpZiBuZWNlc3NhcnkgYnV0IG1pZ2h0IG5vdCBiZSBuZWVkZWQgKi9cXG4gIG1heC13aWR0aDogODAlOyBcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIHBhZGRpbmc6IDAuMmVtOyAvKiBBZGQgc29tZSBwYWRkaW5nIGFyb3VuZCB0aGUgY29pbnMgKi9cXG4gIGJvcmRlci1yYWRpdXM6IDhweDsgLyogT3B0aW9uYWw6IGFkZHMgcm91bmRlZCBjb3JuZXJzICovXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIxMSwgMjExLCAyMTEsIDAuNDUpO1xcbn1cXG5cXG4uY29pbi1pbWFnZS1jb250YWluZXIge1xcbiAgd2lkdGg6IDUuOGVtOyAvKiBEaWFtZXRlciBvZiB0aGUgY2lyY2xlICovXFxuICBoZWlnaHQ6IDUuOGVtOyAvKiBEaWFtZXRlciBvZiB0aGUgY2lyY2xlICovXFxuICBib3JkZXItcmFkaXVzOiA1MCU7IC8qIE1ha2VzIGl0IGEgY2lyY2xlICovXFxuICBvdmVyZmxvdzogaGlkZGVuOyAvKiBIaWRlcyB0aGUgb3ZlcmZsb3cgdG8gbWFpbnRhaW4gdGhlIGNpcmNsZSBzaGFwZSAqL1xcbiAgZGlzcGxheTogZmxleDtcXG4gIG9wYWNpdHk6IDAuOTtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuLmNvaW4taW1hZ2Uge1xcbiAgd2lkdGg6IDEwMCU7IC8qIEZpbGwgdGhlIGNvbnRhaW5lciAqL1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xcbiAgb2JqZWN0LWZpdDogY292ZXI7IC8qIEVuc3VyZSB0aGUgaW1hZ2UgY292ZXJzIHRoZSBjb250YWluZXIgKi9cXG4gIGltYWdlLXJlbmRlcmluZzogcGl4ZWxhdGVkOyAvKiBDcmVhdGVzIGEgcGl4ZWxhdGVkIGVmZmVjdCAqL1xcbiAgb3BhY2l0eTogMC44MjtcXG4gIGZpbHRlcjogYnJpZ2h0bmVzcyg5NyUpIGNvbnRyYXN0KDExNSUpO1xcbiAgdHJhbnNpdGlvbjogYm94LXNoYWRvdyAwLjNzIGVhc2UtaW4tb3V0LCBvcGFjaXR5IDAuM3MgZWFzZS1pbi1vdXQ7IC8qIFNtb290aCB0cmFuc2l0aW9uIGZvciBnbG93IGFuZCBvcGFjaXR5ICovXFxufVxcblxcbi5jb2luLWltYWdlOmhvdmVyIHtcXG4gIGJveC1zaGFkb3c6IDAgMCAxNXB4IDVweCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNik7IC8qIFdoaXRlIGdsb3cgKi9cXG4gIG9wYWNpdHk6IDAuOTk7IC8qIEluY3JlYXNlIG9wYWNpdHkgb24gaG92ZXIgZm9yIGVtcGhhc2lzICovXFxuICBmaWx0ZXI6IGJyaWdodG5lc3MoMTA1JSkgY29udHJhc3QoMTQ1JSk7XFxufVxcblxcbi5naWYtb3ZlcmxheSB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB0b3A6IDA7XFxuICBsZWZ0OiAwO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICBvYmplY3QtZml0OiBjb3ZlcjsgLyogQ292ZXIgdGhlIGNvaW4gaW1hZ2UgKi9cXG59XFxuXFxuLmNvaW4ge1xcbiAgd2lkdGg6IDZlbTtcXG4gIGhlaWdodDogOWVtO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBtYXJnaW46IDAuMWVtO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41KTsgLyogU2VtaS10cmFuc3BhcmVudCBncmV5ICovXFxuICBib3JkZXItcmFkaXVzOiA4cHg7IC8qIE9wdGlvbmFsOiBmb3Igcm91bmRlZCBjb3JuZXJzICovXFxuICBwYWRkaW5nOiAwLjFlbTsgLyogT3B0aW9uYWw6IGZvciBzb21lIHNwYWNlIGluc2lkZSB0aGUgY29udGFpbmVyICovXFxufVxcblxcbi5jb2luOmhvdmVyIHtcXG4gIHdpZHRoOiA2ZW07XFxuICBoZWlnaHQ6IDllbTtcXG4gIG1hcmdpbjogMC4xZW07XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNzUpOyAvKiBTZW1pLXRyYW5zcGFyZW50IGdyZXkgKi9cXG4gIGJvcmRlci1yYWRpdXM6IDhweDsgLyogT3B0aW9uYWw6IGZvciByb3VuZGVkIGNvcm5lcnMgKi9cXG4gIHBhZGRpbmc6IDAuMmVtOyAvKiBPcHRpb25hbDogZm9yIHNvbWUgc3BhY2UgaW5zaWRlIHRoZSBjb250YWluZXIgKi9cXG59XFxuXFxuXFxuLmNvaW4tbmFtZSB7XFxuICB3aWR0aDogNmVtOyAvKiBNYXRjaCB0aGUgd2lkdGggb2YgdGhlIGltYWdlICovXFxuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xcbiAgZm9udC1zaXplOiAxZW07XFxuICBvcGFjaXR5OiAwLjk7XFxufVxcblxcbi5jb2luLW5hbWU6aG92ZXIge1xcbiAgd2lkdGg6IDZlbTsgLyogTWF0Y2ggdGhlIHdpZHRoIG9mIHRoZSBpbWFnZSAqL1xcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcXG4gIG92ZXJmbG93OiBoaWRkZW47XFxuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcXG4gIGZvbnQtc2l6ZTogMWVtO1xcbiAgb3BhY2l0eTogMC45NztcXG59XFxuXFxuLmNvaW4tdmFsdWUge1xcbiAgZm9udC1zaXplOiAwLjhlbTtcXG4gIG9wYWNpdHk6IDAuOTtcXG59XFxuXFxuLmNvaW4tdmFsdWU6aG92ZXIge1xcbiAgZm9udC1zaXplOiAwLjhlbTtcXG4gIG9wYWNpdHk6IDAuOTc7XFxufVxcblxcbiNiYWNrZ3JvdW5kLXZpZGVvIHtcXG4gIHdpZHRoOiAxMDB2dztcXG4gIGhlaWdodDogMTAwdmg7XFxuICBvYmplY3QtZml0OiBjb3ZlcjtcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXG4gIGxlZnQ6IDA7XFxuICByaWdodDogMDtcXG4gIHRvcDogMDtcXG4gIGJvdHRvbTogMDtcXG4gIHotaW5kZXg6IC0xO1xcbn1cXG5cXG4ucm9ib3QtZ2lmIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIGJvdHRvbTogODUlOyAvKiBQbGFjZSB0aGUgYm90dG9tIG9mIHRoZSByb2JvdCBhdCB0aGUgdG9wIG9mIHRoZSB3YXRlcm1hcmsgKi9cXG4gIHdpZHRoOiA0ZW07IC8qIEFkanVzdCBzaXplIGFzIG5lZWRlZCAqL1xcbiAgaGVpZ2h0OiBhdXRvO1xcbn1cXG5cXG4ud2F0ZXJtYXJrIHtcXG4gIHBvc2l0aW9uOiBmaXhlZDsgLyogRml4ZWQgcG9zaXRpb24gcmVsYXRpdmUgdG8gdGhlIHZpZXdwb3J0ICovXFxuICBib3R0b206IDElOyAvKiBEaXN0YW5jZSBmcm9tIHRoZSBib3R0b20gKi9cXG4gIHJpZ2h0OiAxJTsgLyogRGlzdGFuY2UgZnJvbSB0aGUgcmlnaHQgKi9cXG4gIHdpZHRoOiAxNjBweDsgLyogQWRqdXN0IHRoZSB3aWR0aCBhcyBuZWVkZWQgKi9cXG4gIGhlaWdodDogYXV0bzsgLyogTWFpbnRhaW4gYXNwZWN0IHJhdGlvICovXFxuICB6LWluZGV4OiAxMDAwOyAvKiBFbnN1cmUgaXQncyBhYm92ZSBvdGhlciBlbGVtZW50cyAqL1xcbiAgZmlsdGVyOiBicmlnaHRuZXNzKDk4JSkgY29udHJhc3QoMTIwJSk7XFxuICBvcGFjaXR5OiAwLjg3OyAvKiBBZGp1c3Qgb3BhY2l0eSBhcyBuZWVkZWQgKi9cXG4gIGRpc3BsYXk6IGZsZXg7IC8qIFVzZSBmbGV4Ym94IHRvIGNlbnRlciBjaGlsZCBlbGVtZW50cyAqL1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IC8qIENlbnRlciBob3Jpem9udGFsbHkgKi9cXG4gIGFsaWduLWl0ZW1zOiBlbmQ7IC8qIEFsaWduIGF0IHRoZSBib3R0b20gKi9cXG59XFxuXFxuLndhdGVybWFyazpob3ZlciB7XFxuICBwb3NpdGlvbjogZml4ZWQ7IC8qIEZpeGVkIHBvc2l0aW9uIHJlbGF0aXZlIHRvIHRoZSB2aWV3cG9ydCAqL1xcbiAgYm90dG9tOiAwJTsgLyogRGlzdGFuY2UgZnJvbSB0aGUgYm90dG9tICovXFxuICByaWdodDogMSU7IC8qIERpc3RhbmNlIGZyb20gdGhlIHJpZ2h0ICovXFxuICB3aWR0aDogMjQwcHg7IC8qIEFkanVzdCB0aGUgd2lkdGggYXMgbmVlZGVkICovXFxuICBmaWx0ZXI6IGJyaWdodG5lc3MoMTAwJSkgY29udHJhc3QoMTQwJSk7XFxuICBoZWlnaHQ6IGF1dG87IC8qIE1haW50YWluIGFzcGVjdCByYXRpbyAqL1xcbiAgei1pbmRleDogMTAwMDsgLyogRW5zdXJlIGl0J3MgYWJvdmUgb3RoZXIgZWxlbWVudHMgKi9cXG4gIG9wYWNpdHk6IDAuOTQ7IC8qIEFkanVzdCBvcGFjaXR5IGFzIG5lZWRlZCAqL1xcbiAgdHJhbnNpdGlvbjogMC41cyBlYXNlLWluLW91dDtcXG59XFxuXFxuLndhdGVybWFyazIge1xcbiAgcG9zaXRpb246IGZpeGVkOyAvKiBGaXhlZCBwb3NpdGlvbiByZWxhdGl2ZSB0byB0aGUgdmlld3BvcnQgKi9cXG4gIGJvdHRvbTogMCU7IC8qIERpc3RhbmNlIGZyb20gdGhlIGJvdHRvbSAqL1xcbiAgbGVmdDogMCU7IC8qIERpc3RhbmNlIGZyb20gdGhlIGxlZnQsIGNoYW5nZWQgZnJvbSByaWdodCB0byBsZWZ0ICovXFxuICB3aWR0aDogMTYwcHg7IC8qIEFkanVzdCB0aGUgd2lkdGggYXMgbmVlZGVkICovXFxuICBoZWlnaHQ6IGF1dG87IC8qIE1haW50YWluIGFzcGVjdCByYXRpbyAqL1xcbiAgei1pbmRleDogMTAwMDsgLyogRW5zdXJlIGl0J3MgYWJvdmUgb3RoZXIgZWxlbWVudHMgKi9cXG4gIGZpbHRlcjogYnJpZ2h0bmVzcyg5OCUpIGNvbnRyYXN0KDEyMCUpO1xcbiAgb3BhY2l0eTogMC44NzsgLyogQWRqdXN0IG9wYWNpdHkgYXMgbmVlZGVkICovXFxuICBkaXNwbGF5OiBtaWRkbGU7IC8qIFVzZSBmbGV4Ym94IHRvIGNlbnRlciBjaGlsZCBlbGVtZW50cyAqL1xcbiAganVzdGlmeS1jb250ZW50OiByaWdodDsgLyogQ2VudGVyIGhvcml6b250YWxseSAqL1xcbiAgYWxpZ24taXRlbXM6IHJpZ2h0OyAvKiBBbGlnbiBhdCB0aGUgYm90dG9tICovXFxufVxcblxcbi53YXRlcm1hcmsyOmhvdmVyIHtcXG4gIHBvc2l0aW9uOiBmaXhlZDsgLyogRml4ZWQgcG9zaXRpb24gcmVsYXRpdmUgdG8gdGhlIHZpZXdwb3J0ICovXFxuICBib3R0b206IDAlOyAvKiBEaXN0YW5jZSBmcm9tIHRoZSBib3R0b20gKi9cXG4gIGxlZnQ6IDAlOyAvKiBEaXN0YW5jZSBmcm9tIHRoZSBsZWZ0LCBjaGFuZ2VkIGZyb20gcmlnaHQgdG8gbGVmdCAqL1xcbiAgd2lkdGg6IDI0MHB4OyAvKiBBZGp1c3QgdGhlIHdpZHRoIGFzIG5lZWRlZCAqL1xcbiAgZmlsdGVyOiBicmlnaHRuZXNzKDEwMCUpIGNvbnRyYXN0KDE0MCUpO1xcbiAgaGVpZ2h0OiBhdXRvOyAvKiBNYWludGFpbiBhc3BlY3QgcmF0aW8gKi9cXG4gIHotaW5kZXg6IDEwMDA7IC8qIEVuc3VyZSBpdCdzIGFib3ZlIG90aGVyIGVsZW1lbnRzICovXFxuICBvcGFjaXR5OiAwLjk0OyAvKiBBZGp1c3Qgb3BhY2l0eSBhcyBuZWVkZWQgKi9cXG4gIHRyYW5zaXRpb246IDAuNXMgZWFzZS1pbi1vdXQ7XFxufVxcblxcbi5hcGUtZ2lmIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIGJvdHRvbTogOTAlOyAvKiBQbGFjZSB0aGUgYm90dG9tIG9mIHRoZSByb2JvdCBhdCB0aGUgdG9wIG9mIHRoZSB3YXRlcm1hcmsgKi9cXG4gIGxlZnQ6IDI4JTtcXG4gIHdpZHRoOiA0LjVlbTsgLyogQWRqdXN0IHNpemUgYXMgbmVlZGVkICovXFxuICBoZWlnaHQ6IGF1dG87XFxufVxcblxcbi52ZXJ0aWNhbC1idXR0b24ge1xcbiAgQGFwcGx5IGZsZXggZmxleC1jb2wganVzdGlmeS1jZW50ZXIgaXRlbXMtY2VudGVyO1xcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxuICB3cml0aW5nLW1vZGU6IGhvcml6b250YWwtdGI7XFxuICB0ZXh0LW9yaWVudGF0aW9uOiB1cHJpZ2h0O1xcbiAgcG9zaXRpb246IGZpeGVkOyAvKiBGaXhlZCBwb3NpdGlvbiB0byBwbGFjZSB0aGVtIG9uIHRoZSBzaWRlcyAqL1xcbiAgei1pbmRleDogMTA7IC8qIEVuc3VyZSB0aGV5J3JlIGFib3ZlIG90aGVyIGVsZW1lbnRzICovXFxufVxcblxcbi5idXR0b24tbWFrZSB7XFxuICBAYXBwbHkgdmVydGljYWwtYnV0dG9uO1xcbiAgbGVmdDogMC41ZW07IC8qIEFkanVzdCBhcyBuZWNlc3NhcnkgZm9yIHNwYWNpbmcgZnJvbSB0aGUgbGVmdCBlZGdlICovXFxuICB0b3A6IDUwJTsgLyogQ2VudGVyIHZlcnRpY2FsbHkgKi9cXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTsgLyogQWRqdXN0IHZlcnRpY2FsIGNlbnRlcmluZyAqL1xcbn1cXG5cXG4uYnV0dG9uLXRha2Uge1xcbiAgQGFwcGx5IHZlcnRpY2FsLWJ1dHRvbjtcXG4gIHJpZ2h0OiAwLjVlbTsgLyogQWRqdXN0IGFzIG5lY2Vzc2FyeSBmb3Igc3BhY2luZyBmcm9tIHRoZSByaWdodCBlZGdlICovXFxuICB0b3A6IDUwJTsgLyogQ2VudGVyIHZlcnRpY2FsbHkgKi9cXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTsgLyogQWRqdXN0IHZlcnRpY2FsIGNlbnRlcmluZyAqL1xcbn1cXG5cXG4uc29ydC1kcm9wZG93biB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcXG4gIGNvbG9yOiAjRkVGRjA1OyAvKiBZZWxsb3cgdGV4dCAqL1xcbiAgYm9yZGVyOiAycHggc29saWQgI0ZFRkYwNTsgLyogWWVsbG93IGJvcmRlciAqL1xcbiAgcGFkZGluZzogOHB4O1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4uc29ydC1kcm9wZG93bjpob3ZlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkVGRjA1OyAvKiBZZWxsb3cgYmFja2dyb3VuZCAqL1xcbiAgY29sb3I6IGJsYWNrOyAvKiBCbGFjayB0ZXh0ICovXFxufVxcblxcbi5zb3J0LWRyb3Bkb3duIG9wdGlvbiB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwMDAwOyAvKiBDeWJlcnB1bmsgQmxhY2sgZm9yIG9wdGlvbnMgKi9cXG4gIGNvbG9yOiAjRkVGRjA1OyAvKiBDeWJlcnB1bmsgWWVsbG93IHRleHQgZm9yIG9wdGlvbnMgKi9cXG4gIGZvbnQtZmFtaWx5OiAnT3JiaXRyb24nOyAvKiBNYXRjaCB0aGUgZm9udCB3aXRoIHRoZSByZXN0IG9mIHRoZSBzaXRlICovXFxufVxcblxcbi5jb2lucy1zZWN0aW9uIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjsgLyogRW5zdXJlIHRoZSBzZWN0aW9uIGlzIGNlbnRlcmVkICovXFxuICB3aWR0aDogMTAwJTtcXG4gIHBhZGRpbmctYm90dG9tOiA3ZW07XFxufVxcblxcbi5zZWxlY3Rvci1jb250YWluZXIge1xcbiAgbWFyZ2luLWJvdHRvbTogMC41ZW07IC8qIFNwYWNlIGJldHdlZW4gdGhlIHNlbGVjdG9yIGFuZCB0aGUgY29pbnMgKi9cXG4gIG1hcmdpbi1sZWZ0OiAxMCU7XFxuICBhbGlnbi1zZWxmOiBmbGV4LXN0YXJ0OyAvKiBBbGlnbiB0aGUgZHJvcGRvd24gc2VsZWN0b3IgKi9cXG4gIHdpZHRoOiAxNSU7IFxcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpOyAvKiBTZW1pLXRyYW5zcGFyZW50IGdyZXkgKi9cXG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7IC8qIFJvdW5kZWQgY29ybmVycyBmb3IgdGhlIGNvbnRhaW5lciAqL1xcbiAgYm94LXNoYWRvdzogMCA0cHggNnB4IHJnYmEoMCwgMCwgMCwgMC4xKTsgLyogT3B0aW9uYWw6IEFkZHMgYSBzdWJ0bGUgc2hhZG93IGZvciBkZXB0aCAqL1xcbiAgei1pbmRleDogMTAwMDtcXG59XFxuLnNlbGVjdG9yLWNvbnRhaW5lcjpob3ZlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNzUpOyAvKiBEYXJrZXIgc2VtaS10cmFuc3BhcmVudCBncmV5IG9uIGhvdmVyICovXFxufVxcblxcbi5jdXN0b20tcmVhY3Qtc2VsZWN0LWNvbnRhaW5lcjpob3ZlciAuY3VzdG9tLXJlYWN0LXNlbGVjdF9fY29udHJvbCB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkVGRjA1OyAvKiBZZWxsb3cgYmFja2dyb3VuZCBvbiBob3ZlciAqL1xcbiAgY29sb3I6ICMwMDAwMDA7IC8qIEJsYWNrIHRleHQgb24gaG92ZXIgKi9cXG59XFxuXFxuLmN1c3RvbS1yZWFjdC1zZWxlY3QtY29udGFpbmVyOmhvdmVyIC5jdXN0b20tcmVhY3Qtc2VsZWN0X19zaW5nbGUtdmFsdWUge1xcbiAgY29sb3I6ICMwMDAwMDA7IC8qIEVuc3VyZSB0ZXh0IGNvbG9yIGNoYW5nZXMgdG8gYmxhY2sgb24gaG92ZXIgKi9cXG59XFxuXFxuLmdyYXZlLWJ1dHRvbiB7XFxuICBwYWRkaW5nOiA2cHggMTJweDtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41KTsgLyogU2VtaS10cmFuc3BhcmVudCBiYWNrZ3JvdW5kICovXFxuICBjb2xvcjogI0ZFRkYwNTsgLyogQ3liZXJwdW5rIFllbGxvdyAqL1xcbiAgYm9yZGVyOiAycHggc29saWQgI0ZFRkYwNTtcXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xcbiAgb3BhY2l0eTogMC45NTtcXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcXG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcywgY29sb3IgMC4zcywgYm9yZGVyIDAuM3M7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IC8qIG9yICdibG9jaycgaWYgeW91IHByZWZlciAqL1xcbn1cXG5cXG4uZ3JhdmUtYnV0dG9uOmhvdmVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNGRUZGMDU7XFxuICBjb2xvcjogIzAwMDAwMDtcXG4gIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XFxufVxcblxcbi5ncmF2ZXlhcmQtYnV0dG9uLWNvbnRhaW5lciB7XFxuICBwb3NpdGlvbjogZml4ZWQ7XFxuICB3aWR0aDogMTAwJTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIG1hcmdpbi10b3A6IDUwcHg7IC8qIEFkanVzdCB0aGUgc3BhY2UgYWJvdmUgdGhlIGJ1dHRvbiAqL1xcbiAgYm90dG9tOiAyJTsgLyogRGlzdGFuY2UgZnJvbSB0aGUgYm90dG9tICovXFxuICB3aWR0aDogMzUlO1xcbn1cXG5cXG4uZ3JhdmV5YXJkLWNvaW4taW1hZ2Uge1xcbiAgZmlsdGVyOiBncmF5c2NhbGUoNTAlKSBicmlnaHRuZXNzKDc1JSk7XFxuICB0cmFuc2l0aW9uOiBmaWx0ZXIgMC4zcyBlYXNlO1xcbn1cXG5cXG4uZ3JhdmV5YXJkLWNvaW4taW1hZ2U6aG92ZXIge1xcbiAgZmlsdGVyOiBncmF5c2NhbGUoMjUlKSBicmlnaHRuZXNzKDkwJSk7XFxufVxcblxcbi5ncmF2ZS12YWx1ZSB7XFxuICBmb250LXNpemU6IDAuNmVtO1xcbiAgY29sb3I6ICNmZmE0YTg7XFxuICBvcGFjaXR5OiAwLjk7XFxuICB0ZXh0LXNoYWRvdzpcXG4gICAgMCAwIDFweCByZ2JhKDI1NSwxNjQsMTY4LCAwLjcpLCAvKiBTbGlnaHRseSB0cmFuc3BhcmVudCAqL1xcbiAgICAwIDAgMnB4IHJnYmEoMjU1LDE2NCwxNjgsIDAuNSksXFxuICAgIDAgMCA0cHggcmdiYSgyNTUsMTY0LDE2OCwgMC40KTtcXG59XFxuXFxuXFxuOnJvb3Qge1xcbiAgLS1zY2FsZS1mYWN0b3I6IDE7IC8qIERlZmF1bHQgc2NhbGUgZmFjdG9yICovXFxuICAtLXNwb3RsaWdodC1zaXplLWJhc2U6IDEwMHB4OyAvKiBCYXNlIHNpemUgb2YgdGhlIHNwb3RsaWdodCAqL1xcblxcbn1cXG5cXG5AbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcXG4gIC5zcG90bGlnaHQsIC5kb2dlZGFuY2UgLnNwb3RsaWdodCB7XFxuICAgIHdpZHRoOiBjYWxjKHZhcigtLXNwb3RsaWdodC1zaXplLWJhc2UpICogMC43NSk7IC8qIFNjYWxlIGRvd24gdGhlIHNpemUgZm9yIG1lZGl1bSBzY3JlZW5zICovXFxuICAgIGhlaWdodDogY2FsYyh2YXIoLS1zcG90bGlnaHQtc2l6ZS1iYXNlKSAqIDAuNzUpOyAvKiBTY2FsZSBkb3duIHRoZSBzaXplIGZvciBtZWRpdW0gc2NyZWVucyAqL1xcbiAgfVxcbiAgOnJvb3Qge1xcbiAgICAtLXNjYWxlLWZhY3RvcjogMC43NTsgLyogU2NhbGUgZG93biB0byA3NSUgb24gbWVkaXVtIHNjcmVlbnMgKi9cXG4gIH1cXG59XFxuXFxuQG1lZGlhIChtYXgtd2lkdGg6IDQ4MHB4KSB7XFxuICAuc3BvdGxpZ2h0LCAuZG9nZWRhbmNlIC5zcG90bGlnaHQge1xcbiAgICB3aWR0aDogY2FsYyh2YXIoLS1zcG90bGlnaHQtc2l6ZS1iYXNlKSAqIDAuNSk7IC8qIFNjYWxlIGRvd24gdGhlIHNpemUgZm9yIHNtYWxsIHNjcmVlbnMgKi9cXG4gICAgaGVpZ2h0OiBjYWxjKHZhcigtLXNwb3RsaWdodC1zaXplLWJhc2UpICogMC41KTsgLyogU2NhbGUgZG93biB0aGUgc2l6ZSBmb3Igc21hbGwgc2NyZWVucyAqL1xcbiAgfVxcbiAgOnJvb3Qge1xcbiAgICAtLXNjYWxlLWZhY3RvcjogMC41OyAvKiBTY2FsZSBkb3duIHRvIDUwJSBvbiBzbWFsbCBzY3JlZW5zICovXFxuICB9XFxufVxcblxcbi5kYW5jZWhhbGwge1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBtaW4taGVpZ2h0OiAxMDB2aDtcXG4gIG92ZXJmbG93OiBoaWRkZW47XFxufVxcblxcbi5kYW5jZWhhbGwtYmFja2dyb3VuZCB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogMTAwJTtcXG4gIHotaW5kZXg6IC0xO1xcbn1cXG5cXG4uZ2lmcy1jb250YWluZXIge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgbGVmdDogMjUlOyAvKiBTdGFydCBvZiB0aGUgZGFuY2UgZmxvb3IgKi9cXG4gIHJpZ2h0OiAyNSU7IC8qIEVuZCBvZiB0aGUgZGFuY2UgZmxvb3IgKi9cXG4gIGJvdHRvbTogMTAlOyAvKiBCb3R0b20gb2YgdGhlIGRhbmNlIGZsb29yICovXFxuICB0b3A6IDcwJTsgLyogVG9wIG9mIHRoZSBkYW5jZSBmbG9vciAqL1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtd3JhcDogd3JhcDtcXG4gIGFsaWduLWNvbnRlbnQ6IGZsZXgtZW5kO1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XFxufVxcblxcbi5naWYge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MgZWFzZSwgZmlsdGVyIDAuM3MgZWFzZTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblxcbi5naWY6aG92ZXIge1xcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjE1KTsgLyogSW5jcmVhc2Ugc2l6ZSAqL1xcbiAgZmlsdGVyOiBicmlnaHRuZXNzKDEuMjUpIGNvbnRyYXN0KDEuMik7IC8qIE1ha2UgaXQgYnJpZ2h0ZXIgKi9cXG59XFxuXFxuLnNwb3RsaWdodCB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICBib3R0b206IDA7IC8qIFN0YXJ0IGJlbG93IHRoZSBHSUYgKi9cXG4gIGxlZnQ6IDUwJTtcXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSB0cmFuc2xhdGVZKDQwJSk7XFxuICB3aWR0aDogdmFyKC0tc3BvdGxpZ2h0LXNpemUtYmFzZSk7XFxuICBoZWlnaHQ6IHZhcigtLXNwb3RsaWdodC1zaXplLWJhc2UpO1xcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xcbiAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjI1KTsgLyogU2VtaS10cmFuc3BhcmVudCB3aGl0ZSBmb3IgdGhlIHNwb3RsaWdodCBlZmZlY3QgKi9cXG4gIHotaW5kZXg6IC0xOyAvKiBFbnN1cmUgaXQncyB1bmRlciB0aGUgR0lGICovXFxuICB0cmFuc2l0aW9uOiB3aWR0aCAwLjNzIGVhc2UsIGhlaWdodCAwLjNzIGVhc2U7IC8qIFNtb290aCB0cmFuc2l0aW9uIGZvciByZXNpemluZyAqL1xcbn1cXG5cXG4uc3BlY2lhbC1zcG90bGlnaHQge1xcbiAgYm90dG9tOiAtMjAlOyAvKiBBZGp1c3QgZm9yIGRvZ2VkYW5jZS5naWYgdG8gbW92ZSB0aGUgc3BvdGxpZ2h0IGxvd2VyICovXFxufVxcblxcbi5kb2dlZGFuY2UgLnNwb3RsaWdodCB7XFxuICBib3R0b206IC0zMCU7IC8qIExvd2VyIHRoZSBzcG90bGlnaHQgZm9yIHRoZSBkb2dlZGFuY2UuZ2lmICovXFxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgdHJhbnNsYXRlWSg1MCUpOyAvKiBBZGp1c3Qgc3BlY2lmaWNhbGx5IGZvciBkb2dlZGFuY2UuZ2lmICovXFxufVxcblxcbi5ob21lLWJ1dHRvbi1jb250YWluZXIge1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbiAgbGVmdDogNTAlO1xcbiAgYm90dG9tOiAzJTtcXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcXG4gIHotaW5kZXg6IDEwMDsgLyogQWRqdXN0IGFzIG5lZWRlZCB0byBlbnN1cmUgaXQncyBhYm92ZSBvdGhlciBlbGVtZW50cyAqL1xcbn1cXG5cXG4uaG9tZS1idXR0b24ge1xcbiAgcGFkZGluZzogNnB4IDEycHg7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSk7IC8qIFNlbWktdHJhbnNwYXJlbnQgYmFja2dyb3VuZCAqL1xcbiAgY29sb3I6ICNGRUZGMDU7IC8qIEN5YmVycHVuayBZZWxsb3cgdGV4dCAqL1xcbiAgYm9yZGVyOiAycHggc29saWQgI0ZFRkYwNTsgLyogQ3liZXJwdW5rIFllbGxvdyBib3JkZXIgKi9cXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xcbiAgb3BhY2l0eTogMC45NTtcXG4gIGxlZnQ6IDA7XFxuICByaWdodDogMDtcXG4gIGJvdHRvbTogMCU7IC8qIEFkanVzdCB0aGlzIHZhbHVlIGFzIG5lZWRlZCB0byBtb3ZlIHRoZSBidXR0b24gbG93ZXIgKi8gXFxuICBib3JkZXItcmFkaXVzOiA1cHg7XFxuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MsIGNvbG9yIDAuM3MsIGJvcmRlciAwLjNzO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyAvKiBFbnN1cmVzIHRoZSBsaW5rIGJlaGF2ZXMgbGlrZSBhIGJ1dHRvbiAqL1xcbn1cXG5cXG4uaG9tZS1idXR0b246aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZFRkYwNTsgLyogQ3liZXJwdW5rIFllbGxvdyBiYWNrZ3JvdW5kIG9uIGhvdmVyICovXFxuICBjb2xvcjogIzAwMDAwMDsgLyogVGV4dCBjb2xvciBvbiBob3ZlciAqL1xcbiAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDsgLyogQm9yZGVyIGNvbG9yIG9uIGhvdmVyICovXFxufVxcblxcbi5zb25nLXNlbGVjdG9yLWNvbnRhaW5lciB7XFxuICBwb3NpdGlvbjogZml4ZWQ7XFxuICBsZWZ0OiAxMCU7XFxuICB0b3A6IDQwJTtcXG4gIHdpZHRoOiAyMCU7XFxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XFxuICB6LWluZGV4OiAxMDA7XFxuICBhbGlnbi1zZWxmOiBmbGV4LXN0YXJ0OyAvKiBBbGlnbiB0aGUgZHJvcGRvd24gc2VsZWN0b3IgKi9cXG4gIHdpZHRoOiAyMCU7IFxcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpOyAvKiBTZW1pLXRyYW5zcGFyZW50IGdyZXkgKi9cXG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7IC8qIFJvdW5kZWQgY29ybmVycyBmb3IgdGhlIGNvbnRhaW5lciAqL1xcbiAgYm94LXNoYWRvdzogMCA0cHggNnB4IHJnYmEoMCwgMCwgMCwgMC4xKTsgLyogT3B0aW9uYWw6IEFkZHMgYSBzdWJ0bGUgc2hhZG93IGZvciBkZXB0aCAqL1xcbn1cXG5cXG4uc29uZy1zZWxlY3RvciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuOCk7XFxuICBjb2xvcjogI0ZFRkYwNTsgLyogQ3liZXJwdW5rIFllbGxvdyAqL1xcbiAgYm9yZGVyOiAxcHggc29saWQgI0ZFRkYwNTsgLyogQ3liZXJwdW5rIFllbGxvdyBib3JkZXIgKi9cXG4gIGZvbnQtZmFtaWx5OiAnT3JiaXRyb24nLCBzYW5zLXNlcmlmO1xcbiAgcGFkZGluZzogMTBweDtcXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIG9wYWNpdHk6IDAuOTU7XFxufVxcblxcbi5zb25nLXNlbGVjdG9yOmhvdmVyIHtcXG4gIGZpbHRlcjogYnJpZ2h0bmVzcygxLjIpO1xcbn1cXG4vKiBnbG9iYWxzLmNzcyAqL1xcbi5lbG9uR2lmIHtcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXG4gIGJvdHRvbTogMDtcXG4gIHdpZHRoOiAxNSU7IC8qIEFkanVzdCBiYXNlZCBvbiB5b3VyIHByZWZlcmVuY2UgKi9cXG4gIGhlaWdodDogMTAlOyAvKiBFeGFtcGxlIGhlaWdodCAqL1xcbiAgei1pbmRleDogMTsgLyogQWRqdXN0IGJhc2VkIG9uIGxheWVyaW5nIG5lZWRzICovXFxufVxcbi5maWxsZWRab29tR2lmIHtcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXG4gIGJvdHRvbTogMDtcXG4gIHdpZHRoOiAxMiU7IC8qIEFkanVzdCBiYXNlZCBvbiB5b3VyIHByZWZlcmVuY2UgKi9cXG4gIGhlaWdodDogMTIlOyAvKiBFeGFtcGxlIGhlaWdodCAqL1xcbiAgei1pbmRleDogMTsgLyogQWRqdXN0IGJhc2VkIG9uIGxheWVyaW5nIG5lZWRzICovXFxufVxcbi5wZXBlSW1hZ2Uge1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbiAgYm90dG9tOiAwO1xcbiAgd2lkdGg6IDExJTsgLyogQWRqdXN0IGJhc2VkIG9uIHlvdXIgcHJlZmVyZW5jZSAqL1xcbiAgaGVpZ2h0OiAxMSU7IC8qIEV4YW1wbGUgaGVpZ2h0ICovXFxuICB6LWluZGV4OiAxOyAvKiBBZGp1c3QgYmFzZWQgb24gbGF5ZXJpbmcgbmVlZHMgKi9cXG59XFxuLmVnZ2RvZ0ltYWdlIHtcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXG4gIGJvdHRvbTogMDtcXG4gIHdpZHRoOiAxMSU7IC8qIEFkanVzdCBiYXNlZCBvbiB5b3VyIHByZWZlcmVuY2UgKi9cXG4gIGhlaWdodDogMTElOyAvKiBFeGFtcGxlIGhlaWdodCAqL1xcbiAgei1pbmRleDogMTsgLyogQWRqdXN0IGJhc2VkIG9uIGxheWVyaW5nIG5lZWRzICovXFxufVxcblxcbi5sZWZ0SW1hZ2Uge1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbiAgYm90dG9tOiAwO1xcbiAgd2lkdGg6IDI4JTsgLyogQWRqdXN0IGJhc2VkIG9uIHlvdXIgcHJlZmVyZW5jZSAqL1xcbiAgaGVpZ2h0OiAxMiU7IC8qIEV4YW1wbGUgaGVpZ2h0ICovXFxuICB6LWluZGV4OiAxOyAvKiBBZGp1c3QgYmFzZWQgb24gbGF5ZXJpbmcgbmVlZHMgKi9cXG59XFxuXFxuLnJpZ2h0SW1hZ2Uge1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbiAgYm90dG9tOiAwO1xcbiAgd2lkdGg6IDIwJTsgLyogQWRqdXN0IGJhc2VkIG9uIHlvdXIgcHJlZmVyZW5jZSAqL1xcbiAgaGVpZ2h0OiAxMyU7IC8qIEV4YW1wbGUgaGVpZ2h0ICovXFxuICB6LWluZGV4OiAyMzsgLyogQWRqdXN0IGJhc2VkIG9uIGxheWVyaW5nIG5lZWRzICovXFxufVxcblxcbi5sZWZ0SW1hZ2Uge1xcbiAgbGVmdDogMTAlO1xcbn1cXG5cXG4ucmlnaHRJbWFnZSB7XFxuICByaWdodDogMTAlO1xcbiAgei1pbmRleDogMztcXG59XFxuXFxuLmVsb25HaWYge1xcbiAgcmlnaHQ6IDIwJTsgLyogUG9zaXRpb24gdG8gdGhlIGxlZnQgb2YgcmlnaHQucG5nICovXFxuICB6LWluZGV4OiAyO1xcbn1cXG5cXG4uZmlsbGVkWm9vbUdpZiB7XFxuICBsZWZ0OiAyOSU7IC8qIFBvc2l0aW9uIHRvIHRoZSByaWdodCBvZiBsZWZ0LnBuZyAqL1xcbiAgei1pbmRleDogMjtcXG59XFxuXFxuLnBlcGVJbWFnZSB7XFxuICByaWdodDogMTUlO1xcbiAgdG9wOiA3MCU7XFxuICB6LWluZGV4OiAyO1xcbn1cXG5cXG4uZWdnZG9nSW1hZ2Uge1xcbiAgbGVmdDogMTUlO1xcbiAgdG9wOiA3MCU7XFxuICB6LWluZGV4OiAyO1xcbn1cXG5cXG5cXG4ubGVmdEltYWdlOmhvdmVyLCAucmlnaHRJbWFnZTpob3ZlciwgLmVsb25HaWY6aG92ZXIsIC5maWxsZWRab29tR2lmOmhvdmVyLCAucGVwZUltYWdlOmhvdmVyLCAuZWdnZG9nSW1hZ2U6aG92ZXIge1xcbiAgLyogSW5jcmVhc2Ugc2l6ZSAqL1xcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjEpO1xcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MgZWFzZSwgZmlsdGVyIDAuM3MgZWFzZTtcXG5cXG4gIC8qIEdsb3cgZWZmZWN0ICovXFxuICBmaWx0ZXI6IGRyb3Atc2hhZG93KDAgMCA4cHggI0ZFRkYwNSkgZHJvcC1zaGFkb3coMCAwIDEycHggI0ZFRkYwNSk7XFxuICB6LWluZGV4OiAxMDsgLyogRW5zdXJlIHRoZSBob3ZlcmVkIGVsZW1lbnQgaXMgYWJvdmUgb3RoZXJzICovXFxufVxcblxcbi8qIEVuc3VyZSB0aGUgdHJhbnNmb3JtIG9yaWdpbiBpcyB0aGUgYm90dG9tIGNlbnRlciBmb3IgYSBuYXR1cmFsIGdyb3d0aCBlZmZlY3QgKi9cXG4ubGVmdEltYWdlLCAucmlnaHRJbWFnZSwgLmVsb25HaWYsIC5maWxsZWRab29tR2lmLCAucGVwZUltYWdlLCAuZWdnZG9nSW1hZ2Uge1xcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MgZWFzZSwgZmlsdGVyIDAuM3MgZWFzZTsgLyogU21vb3RoIHRyYW5zaXRpb24gZm9yIHRyYW5zZm9ybSBhbmQgZmlsdGVyICovXFxuICB0cmFuc2Zvcm0tb3JpZ2luOiBib3R0b20gY2VudGVyOyAvKiBHcm93IGZyb20gdGhlIGJvdHRvbSAqL1xcbn1cXG5cXG4uYXBlLWdpZjpob3ZlciB7XFxuICBmaWx0ZXI6IGJyaWdodG5lc3MoMS4yKSBkcm9wLXNoYWRvdygwIDAgMTBweCAjRkVGRjA1KTsgLyogR2xvdyBlZmZlY3QgKi9cXG4gIHRyYW5zaXRpb246IGZpbHRlciAwLjNzIGVhc2U7XFxufVxcblxcbi5hcGUtY29udGFpbmVyOmhvdmVyIHtcXG4gIGN1cnNvcjogdXJsKCcvc3BlY2lhbC1jdXJzb3IucG5nJyksIGF1dG87XFxufVxcblxcbi5hcGUtY29udGFpbmVyOmhvdmVyIC5hcGUtZ2lmIHtcXG4gIGZpbHRlcjogYnJpZ2h0bmVzcygxLjIpIGRyb3Atc2hhZG93KDAgMCAxMHB4ICNGRUZGMDUpOyAvKiBHbG93IGVmZmVjdCAqL1xcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjEpOyAvKiBTbGlnaHQgaW5jcmVhc2UgaW4gc2l6ZSAqL1xcbiAgdHJhbnNpdGlvbjogZmlsdGVyIDAuM3MgZWFzZSwgdHJhbnNmb3JtIDAuM3MgZWFzZTsgLyogU21vb3RoIHRyYW5zaXRpb24gKi9cXG59XFxuXFxuLnRpdGxlLWJhY2tncm91bmQge1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyAvKiBvciAnYmxvY2snIGRlcGVuZGluZyBvbiB5b3VyIGxheW91dCAqL1xcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpOyAvKiBTZW1pLXRyYW5zcGFyZW50IGJsYWNrICovXFxuICBib3JkZXItcmFkaXVzOiA4cHg7IC8qIEFkanVzdCBhcyBuZWVkZWQgZm9yIHJvdW5kZWQgY29ybmVycyAqL1xcbiAgcGFkZGluZzogNXB4OyAvKiBBZGp1c3QgcGFkZGluZyB0byBjb250cm9sIHRoZSBzcGFjZSBhcm91bmQgdGhlIHRleHQgKi9cXG4gIGNvbG9yOiAjRkVGRjA1OyAvKiBFeGFtcGxlIHRleHQgY29sb3IsIGFkanVzdCBhcyBuZWVkZWQgKi9cXG4gIG1hcmdpbjogMCBhdXRvOyAvKiBDZW50ZXIgdGhlIHRpdGxlIGlmIG5lZWRlZCAqL1xcbiAgdGV4dC1hbGlnbjogY2VudGVyOyAvKiBDZW50ZXIgdGV4dCB3aXRoaW4gdGhlIGJhY2tncm91bmQgKi9cXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[11].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[11].oneOf[14].use[2]!./src/styles/globals.css\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js":
/*!************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js ***!
  \************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/ // css base code, injected by the css-loader\n// eslint-disable-next-line func-names\n\nmodule.exports = function(useSourceMap) {\n    var list = [] // return the list of modules as css string\n    ;\n    list.toString = function toString() {\n        return this.map(function(item) {\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            var content = cssWithMappingToString(item, useSourceMap);\n            if (item[2]) {\n                return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n            }\n            return content;\n        }).join(\"\");\n    } // import a list of modules into the list\n    ;\n    // eslint-disable-next-line func-names\n    // @ts-expect-error TODO: fix type\n    list.i = function(modules, mediaQuery, dedupe) {\n        if (typeof modules === \"string\") {\n            // eslint-disable-next-line no-param-reassign\n            modules = [\n                [\n                    null,\n                    modules,\n                    \"\"\n                ]\n            ];\n        }\n        var alreadyImportedModules = {};\n        if (dedupe) {\n            for(var i = 0; i < this.length; i++){\n                // eslint-disable-next-line prefer-destructuring\n                var id = this[i][0];\n                if (id != null) {\n                    alreadyImportedModules[id] = true;\n                }\n            }\n        }\n        for(var _i = 0; _i < modules.length; _i++){\n            var item = [].concat(modules[_i]);\n            if (dedupe && alreadyImportedModules[item[0]]) {\n                continue;\n            }\n            if (mediaQuery) {\n                if (!item[2]) {\n                    item[2] = mediaQuery;\n                } else {\n                    item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n                }\n            }\n            list.push(item);\n        }\n    };\n    return list;\n};\nfunction cssWithMappingToString(item, useSourceMap) {\n    var content = item[1] || \"\" // eslint-disable-next-line prefer-destructuring\n    ;\n    var cssMapping = item[3];\n    if (!cssMapping) {\n        return content;\n    }\n    if (useSourceMap && typeof btoa === \"function\") {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        var sourceMapping = toComment(cssMapping);\n        var sourceURLs = cssMapping.sources.map(function(source) {\n            return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n        });\n        return [\n            content\n        ].concat(sourceURLs).concat([\n            sourceMapping\n        ]).join(\"\\n\");\n    }\n    return [\n        content\n    ].join(\"\\n\");\n} // Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n    // eslint-disable-next-line no-undef\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    return \"/*# \".concat(data, \" */\");\n}\n\n//# sourceMappingURL=api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9ydW50aW1lL2FwaS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELHFCQUFxQjtBQUN6RTtBQUNBO0FBQ0EsU0FBUztBQUNULE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixpQkFBaUI7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IscUJBQXFCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RCxjQUFjO0FBQ3JFO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvcnVudGltZS9hcGkuanM/Y2E0ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qLyAvLyBjc3MgYmFzZSBjb2RlLCBpbmplY3RlZCBieSB0aGUgY3NzLWxvYWRlclxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcblwidXNlIHN0cmljdFwiO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbih1c2VTb3VyY2VNYXApIHtcbiAgICB2YXIgbGlzdCA9IFtdIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgICA7XG4gICAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24oaXRlbSkge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11c2UtYmVmb3JlLWRlZmluZVxuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCk7XG4gICAgICAgICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoY29udGVudCwgXCJ9XCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgICAgIH0pLmpvaW4oXCJcIik7XG4gICAgfSAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICAgIDtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgVE9ETzogZml4IHR5cGVcbiAgICBsaXN0LmkgPSBmdW5jdGlvbihtb2R1bGVzLCBtZWRpYVF1ZXJ5LCBkZWR1cGUpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICAgICAgICAgIG1vZHVsZXMgPSBbXG4gICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb2R1bGVzLFxuICAgICAgICAgICAgICAgICAgICBcIlwiXG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgXTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgICAgICBpZiAoZGVkdXBlKSB7XG4gICAgICAgICAgICBmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKyl7XG4gICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXG4gICAgICAgICAgICAgICAgdmFyIGlkID0gdGhpc1tpXVswXTtcbiAgICAgICAgICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZvcih2YXIgX2kgPSAwOyBfaSA8IG1vZHVsZXMubGVuZ3RoOyBfaSsrKXtcbiAgICAgICAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2ldKTtcbiAgICAgICAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG1lZGlhUXVlcnkpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICAgICAgICAgICAgaXRlbVsyXSA9IG1lZGlhUXVlcnk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaXRlbVsyXSA9IFwiXCIuY29uY2F0KG1lZGlhUXVlcnksIFwiIGFuZCBcIikuY29uY2F0KGl0ZW1bMl0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIGxpc3Q7XG59O1xuZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApIHtcbiAgICB2YXIgY29udGVudCA9IGl0ZW1bMV0gfHwgXCJcIiAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcbiAgICA7XG4gICAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICAgIGlmICghY3NzTWFwcGluZykge1xuICAgICAgICByZXR1cm4gY29udGVudDtcbiAgICB9XG4gICAgaWYgKHVzZVNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdXNlLWJlZm9yZS1kZWZpbmVcbiAgICAgICAgdmFyIHNvdXJjZU1hcHBpbmcgPSB0b0NvbW1lbnQoY3NzTWFwcGluZyk7XG4gICAgICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbihzb3VyY2UpIHtcbiAgICAgICAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCBcIlwiKS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBjb250ZW50XG4gICAgICAgIF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbXG4gICAgICAgICAgICBzb3VyY2VNYXBwaW5nXG4gICAgICAgIF0pLmpvaW4oXCJcXG5cIik7XG4gICAgfVxuICAgIHJldHVybiBbXG4gICAgICAgIGNvbnRlbnRcbiAgICBdLmpvaW4oXCJcXG5cIik7XG59IC8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgcmV0dXJuIFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app! ***!
  \*******************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/_app\",\n      function () {\n        return __webpack_require__(/*! private-next-pages/_app */ \"./pages/_app.js\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/_app\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWNsaWVudC1wYWdlcy1sb2FkZXIuanM/YWJzb2x1dGVQYWdlUGF0aD1wcml2YXRlLW5leHQtcGFnZXMlMkZfYXBwJnBhZ2U9JTJGX2FwcCEiLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxnREFBeUI7QUFDaEQ7QUFDQTtBQUNBLE9BQU8sSUFBVTtBQUNqQixNQUFNLFVBQVU7QUFDaEI7QUFDQSxPQUFPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvPzY3ODIiXSwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgKHdpbmRvdy5fX05FWFRfUCA9IHdpbmRvdy5fX05FWFRfUCB8fCBbXSkucHVzaChbXG4gICAgICBcIi9fYXBwXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiByZXF1aXJlKFwicHJpdmF0ZS1uZXh0LXBhZ2VzL19hcHBcIik7XG4gICAgICB9XG4gICAgXSk7XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgd2luZG93Ll9fTkVYVF9QLnB1c2goW1wiL19hcHBcIl0pXG4gICAgICB9KTtcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!\n"));

/***/ }),

/***/ "./src/styles/globals.css":
/*!********************************!*\
  !*** ./src/styles/globals.css ***!
  \********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var api = __webpack_require__(/*! !../../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !!../../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[11].oneOf[14].use[1]!../../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[11].oneOf[14].use[2]!./globals.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[11].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[11].oneOf[14].use[2]!./src/styles/globals.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(element) {\n                    // By default, style-loader injects CSS into the bottom\n                    // of <head>. This causes ordering problems between dev\n                    // and prod. To fix this, we render a <noscript> tag as\n                    // an anchor for the styles to be placed before. These\n                    // styles will be applied _before_ <style jsx global>.\n                    // These elements should always exist. If they do not,\n                    // this code should fail.\n                    var anchorElement = document.querySelector(\"#__next_css__DO_NOT_USE__\");\n                    var parentNode = anchorElement.parentNode// Normally <head>\n                    ;\n                    // Each style tag should be placed right before our\n                    // anchor. By inserting before and not after, we do not\n                    // need to track the last inserted element.\n                    parentNode.insertBefore(element, anchorElement);\n                };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (true) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n    if (!a && b || a && !b) {\n        return false;\n    }\n    let p;\n    for(p in a){\n        if (isNamedExport && p === \"default\") {\n            continue;\n        }\n        if (a[p] !== b[p]) {\n            return false;\n        }\n    }\n    for(p in b){\n        if (isNamedExport && p === \"default\") {\n            continue;\n        }\n        if (!a[p]) {\n            return false;\n        }\n    }\n    return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      /*! !!../../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[11].oneOf[14].use[1]!../../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[11].oneOf[14].use[2]!./globals.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[11].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[11].oneOf[14].use[2]!./src/styles/globals.css\",\n      function () {\n        content = __webpack_require__(/*! !!../../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[11].oneOf[14].use[1]!../../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[11].oneOf[14].use[2]!./globals.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[11].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[11].oneOf[14].use[2]!./src/styles/globals.css\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc3R5bGVzL2dsb2JhbHMuY3NzIiwibWFwcGluZ3MiOiJBQUFBLFVBQVUsbUJBQU8sQ0FBQyx1TkFBMkc7QUFDN0gsMEJBQTBCLG1CQUFPLENBQUMseWZBQXlQOztBQUUzUjs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7O0FBR0EsSUFBSSxJQUFVO0FBQ2QseUJBQXlCLFVBQVU7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLElBQUksaUJBQWlCO0FBQ3JCLE1BQU0seWZBQXlQO0FBQy9QO0FBQ0Esa0JBQWtCLG1CQUFPLENBQUMseWZBQXlQOztBQUVuUjs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxnQkFBZ0IsVUFBVTs7QUFFMUI7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxFQUFFLFVBQVU7QUFDWjtBQUNBLEdBQUc7QUFDSDs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvc3R5bGVzL2dsb2JhbHMuY3NzPzMzNDYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGFwaSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1zdHlsZS1sb2FkZXIvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL2Nzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzExXS5vbmVPZlsxNF0udXNlWzFdIS4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1sxMV0ub25lT2ZbMTRdLnVzZVsyXSEuL2dsb2JhbHMuY3NzXCIpO1xuXG4gICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICB9XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gZnVuY3Rpb24oZWxlbWVudCkge1xuICAgICAgICAgICAgICAgICAgICAvLyBCeSBkZWZhdWx0LCBzdHlsZS1sb2FkZXIgaW5qZWN0cyBDU1MgaW50byB0aGUgYm90dG9tXG4gICAgICAgICAgICAgICAgICAgIC8vIG9mIDxoZWFkPi4gVGhpcyBjYXVzZXMgb3JkZXJpbmcgcHJvYmxlbXMgYmV0d2VlbiBkZXZcbiAgICAgICAgICAgICAgICAgICAgLy8gYW5kIHByb2QuIFRvIGZpeCB0aGlzLCB3ZSByZW5kZXIgYSA8bm9zY3JpcHQ+IHRhZyBhc1xuICAgICAgICAgICAgICAgICAgICAvLyBhbiBhbmNob3IgZm9yIHRoZSBzdHlsZXMgdG8gYmUgcGxhY2VkIGJlZm9yZS4gVGhlc2VcbiAgICAgICAgICAgICAgICAgICAgLy8gc3R5bGVzIHdpbGwgYmUgYXBwbGllZCBfYmVmb3JlXyA8c3R5bGUganN4IGdsb2JhbD4uXG4gICAgICAgICAgICAgICAgICAgIC8vIFRoZXNlIGVsZW1lbnRzIHNob3VsZCBhbHdheXMgZXhpc3QuIElmIHRoZXkgZG8gbm90LFxuICAgICAgICAgICAgICAgICAgICAvLyB0aGlzIGNvZGUgc2hvdWxkIGZhaWwuXG4gICAgICAgICAgICAgICAgICAgIHZhciBhbmNob3JFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNfX25leHRfY3NzX19ET19OT1RfVVNFX19cIik7XG4gICAgICAgICAgICAgICAgICAgIHZhciBwYXJlbnROb2RlID0gYW5jaG9yRWxlbWVudC5wYXJlbnROb2RlLy8gTm9ybWFsbHkgPGhlYWQ+XG4gICAgICAgICAgICAgICAgICAgIDtcbiAgICAgICAgICAgICAgICAgICAgLy8gRWFjaCBzdHlsZSB0YWcgc2hvdWxkIGJlIHBsYWNlZCByaWdodCBiZWZvcmUgb3VyXG4gICAgICAgICAgICAgICAgICAgIC8vIGFuY2hvci4gQnkgaW5zZXJ0aW5nIGJlZm9yZSBhbmQgbm90IGFmdGVyLCB3ZSBkbyBub3RcbiAgICAgICAgICAgICAgICAgICAgLy8gbmVlZCB0byB0cmFjayB0aGUgbGFzdCBpbnNlcnRlZCBlbGVtZW50LlxuICAgICAgICAgICAgICAgICAgICBwYXJlbnROb2RlLmluc2VydEJlZm9yZShlbGVtZW50LCBhbmNob3JFbGVtZW50KTtcbiAgICAgICAgICAgICAgICB9O1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxuXG5pZiAobW9kdWxlLmhvdCkge1xuICBpZiAoIWNvbnRlbnQubG9jYWxzIHx8IG1vZHVsZS5ob3QuaW52YWxpZGF0ZSkge1xuICAgIHZhciBpc0VxdWFsTG9jYWxzID0gZnVuY3Rpb24gaXNFcXVhbExvY2FscyhhLCBiLCBpc05hbWVkRXhwb3J0KSB7XG4gICAgaWYgKCFhICYmIGIgfHwgYSAmJiAhYikge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGxldCBwO1xuICAgIGZvcihwIGluIGEpe1xuICAgICAgICBpZiAoaXNOYW1lZEV4cG9ydCAmJiBwID09PSBcImRlZmF1bHRcIikge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGFbcF0gIT09IGJbcF0pIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmb3IocCBpbiBiKXtcbiAgICAgICAgaWYgKGlzTmFtZWRFeHBvcnQgJiYgcCA9PT0gXCJkZWZhdWx0XCIpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmICghYVtwXSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufTtcbiAgICB2YXIgb2xkTG9jYWxzID0gY29udGVudC5sb2NhbHM7XG5cbiAgICBtb2R1bGUuaG90LmFjY2VwdChcbiAgICAgIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1sxMV0ub25lT2ZbMTRdLnVzZVsxXSEuLi8uLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbMTFdLm9uZU9mWzE0XS51c2VbMl0hLi9nbG9iYWxzLmNzc1wiLFxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbMTFdLm9uZU9mWzE0XS51c2VbMV0hLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzExXS5vbmVPZlsxNF0udXNlWzJdIS4vZ2xvYmFscy5jc3NcIik7XG5cbiAgICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGlmICghaXNFcXVhbExvY2FscyhvbGRMb2NhbHMsIGNvbnRlbnQubG9jYWxzKSkge1xuICAgICAgICAgICAgICAgIG1vZHVsZS5ob3QuaW52YWxpZGF0ZSgpO1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgb2xkTG9jYWxzID0gY29udGVudC5sb2NhbHM7XG5cbiAgICAgICAgICAgICAgdXBkYXRlKGNvbnRlbnQpO1xuICAgICAgfVxuICAgIClcbiAgfVxuXG4gIG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHtcbiAgICB1cGRhdGUoKTtcbiAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/styles/globals.css\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js ***!
  \************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nconst isOldIE = function isOldIE() {\n    let memo;\n    return function memorize() {\n        if (typeof memo === \"undefined\") {\n            // Test for IE <= 9 as proposed by Browserhacks\n            // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n            // Tests for existence of standard globals is to allow style-loader\n            // to operate correctly into non-standard environments\n            // @see https://github.com/webpack-contrib/style-loader/issues/177\n            memo = Boolean(window && document && document.all && !window.atob);\n        }\n        return memo;\n    };\n}();\nconst getTargetElement = function() {\n    const memo = {};\n    return function memorize(target) {\n        if (typeof memo[target] === \"undefined\") {\n            let styleTarget = document.querySelector(target);\n            // Special case to return head of iframe instead of iframe itself\n            if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n                try {\n                    // This will throw an exception if access to iframe is blocked\n                    // due to cross-origin restrictions\n                    styleTarget = styleTarget.contentDocument.head;\n                } catch (e) {\n                    // istanbul ignore next\n                    styleTarget = null;\n                }\n            }\n            memo[target] = styleTarget;\n        }\n        return memo[target];\n    };\n}();\nconst stylesInDom = [];\nfunction getIndexByIdentifier(identifier) {\n    let result = -1;\n    for(let i = 0; i < stylesInDom.length; i++){\n        if (stylesInDom[i].identifier === identifier) {\n            result = i;\n            break;\n        }\n    }\n    return result;\n}\nfunction modulesToDom(list, options) {\n    const idCountMap = {};\n    const identifiers = [];\n    for(let i = 0; i < list.length; i++){\n        const item = list[i];\n        const id = options.base ? item[0] + options.base : item[0];\n        const count = idCountMap[id] || 0;\n        const identifier = id + \" \" + count.toString();\n        idCountMap[id] = count + 1;\n        const index = getIndexByIdentifier(identifier);\n        const obj = {\n            css: item[1],\n            media: item[2],\n            sourceMap: item[3]\n        };\n        if (index !== -1) {\n            stylesInDom[index].references++;\n            stylesInDom[index].updater(obj);\n        } else {\n            stylesInDom.push({\n                identifier: identifier,\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                updater: addStyle(obj, options),\n                references: 1\n            });\n        }\n        identifiers.push(identifier);\n    }\n    return identifiers;\n}\nfunction insertStyleElement(options) {\n    const style = document.createElement(\"style\");\n    const attributes = options.attributes || {};\n    if (typeof attributes.nonce === \"undefined\") {\n        const nonce = // eslint-disable-next-line no-undef\n         true ? __webpack_require__.nc : 0;\n        if (nonce) {\n            attributes.nonce = nonce;\n        }\n    }\n    Object.keys(attributes).forEach(function(key) {\n        style.setAttribute(key, attributes[key]);\n    });\n    if (typeof options.insert === \"function\") {\n        options.insert(style);\n    } else {\n        const target = getTargetElement(options.insert || \"head\");\n        if (!target) {\n            throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n        }\n        target.appendChild(style);\n    }\n    return style;\n}\nfunction removeStyleElement(style) {\n    // istanbul ignore if\n    if (style.parentNode === null) {\n        return false;\n    }\n    style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */ const replaceText = function replaceText() {\n    const textStore = [];\n    return function replace(index, replacement) {\n        textStore[index] = replacement;\n        return textStore.filter(Boolean).join(\"\\n\");\n    };\n}();\nfunction applyToSingletonTag(style, index, remove, obj) {\n    const css = remove ? \"\" : obj.media ? \"@media \" + obj.media + \" {\" + obj.css + \"}\" : obj.css;\n    // For old IE\n    /* istanbul ignore if  */ if (style.styleSheet) {\n        style.styleSheet.cssText = replaceText(index, css);\n    } else {\n        const cssNode = document.createTextNode(css);\n        const childNodes = style.childNodes;\n        if (childNodes[index]) {\n            style.removeChild(childNodes[index]);\n        }\n        if (childNodes.length) {\n            style.insertBefore(cssNode, childNodes[index]);\n        } else {\n            style.appendChild(cssNode);\n        }\n    }\n}\nfunction applyToTag(style, _options, obj) {\n    let css = obj.css;\n    const media = obj.media;\n    const sourceMap = obj.sourceMap;\n    if (media) {\n        style.setAttribute(\"media\", media);\n    } else {\n        style.removeAttribute(\"media\");\n    }\n    if (sourceMap && typeof btoa !== \"undefined\") {\n        css += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n    }\n    // For old IE\n    /* istanbul ignore if  */ if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n    } else {\n        while(style.firstChild){\n            style.removeChild(style.firstChild);\n        }\n        style.appendChild(document.createTextNode(css));\n    }\n}\nlet singleton = null;\nlet singletonCounter = 0;\nfunction addStyle(obj, options) {\n    let style;\n    let update;\n    let remove;\n    if (options.singleton) {\n        const styleIndex = singletonCounter++;\n        style = singleton || (singleton = insertStyleElement(options));\n        update = applyToSingletonTag.bind(null, style, styleIndex, false);\n        remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n    } else {\n        style = insertStyleElement(options);\n        update = applyToTag.bind(null, style, options);\n        remove = function() {\n            removeStyleElement(style);\n        };\n    }\n    update(obj);\n    return function updateStyle(newObj) {\n        if (newObj) {\n            if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n                return;\n            }\n            update(obj = newObj);\n        } else {\n            remove();\n        }\n    };\n}\nmodule.exports = function(list, options) {\n    options = options || {};\n    // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n    // tags it will allow on a page\n    if (!options.singleton && typeof options.singleton !== \"boolean\") {\n        options.singleton = isOldIE();\n    }\n    list = list || [];\n    let lastIdentifiers = modulesToDom(list, options);\n    return function update(newList) {\n        newList = newList || [];\n        if (Object.prototype.toString.call(newList) !== \"[object Array]\") {\n            return;\n        }\n        for(let i = 0; i < lastIdentifiers.length; i++){\n            const identifier = lastIdentifiers[i];\n            const index = getIndexByIdentifier(identifier);\n            stylesInDom[index].references--;\n        }\n        const newLastIdentifiers = modulesToDom(newList, options);\n        for(let i = 0; i < lastIdentifiers.length; i++){\n            const identifier = lastIdentifiers[i];\n            const index = getIndexByIdentifier(identifier);\n            if (stylesInDom[index].references === 0) {\n                stylesInDom[index].updater();\n                stylesInDom.splice(index, 1);\n            }\n        }\n        lastIdentifiers = newLastIdentifiers;\n    };\n};\n\n//# sourceMappingURL=injectStylesIntoStyleTag.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\n"));

/***/ }),

/***/ "./pages/_app.js":
/*!***********************!*\
  !*** ./pages/_app.js ***!
  \***********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ MyApp; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var _src_styles_globals_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/styles/globals.css */ \"./src/styles/globals.css\");\n/* harmony import */ var _src_styles_globals_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_src_styles_globals_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _vercel_analytics_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @vercel/analytics/react */ \"./node_modules/@vercel/analytics/dist/react/index.js\");\n// pages/_app.js\n\n\n\nfunction MyApp(param) {\n    let { Component, pageProps } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n                ...pageProps\n            }, void 0, false, {\n                fileName: \"/Users/willchristian/Desktop/MemeRunner/frontend/pages/_app.js\",\n                lineNumber: 9,\n                columnNumber: 5\n            }, this),\n            \";\",\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_vercel_analytics_react__WEBPACK_IMPORTED_MODULE_2__.Analytics, {}, void 0, false, {\n                fileName: \"/Users/willchristian/Desktop/MemeRunner/frontend/pages/_app.js\",\n                lineNumber: 10,\n                columnNumber: 5\n            }, this)\n        ]\n    }, void 0, true);\n}\n_c = MyApp;\nvar _c;\n$RefreshReg$(_c, \"MyApp\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9fYXBwLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsZ0JBQWdCOztBQUNtQjtBQUNpQjtBQUdyQyxTQUFTQyxNQUFNLEtBQXdCO1FBQXhCLEVBQUVDLFNBQVMsRUFBRUMsU0FBUyxFQUFFLEdBQXhCO0lBQzVCLHFCQUNBOzswQkFDRSw4REFBQ0Q7Z0JBQVcsR0FBR0MsU0FBUzs7Ozs7O1lBQUk7MEJBQzVCLDhEQUFDSCw4REFBU0E7Ozs7Ozs7QUFHZDtLQVB3QkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vcGFnZXMvX2FwcC5qcz9lMGFkIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHBhZ2VzL19hcHAuanNcbmltcG9ydCAnLi4vc3JjL3N0eWxlcy9nbG9iYWxzLmNzcyc7XG5pbXBvcnQgeyBBbmFseXRpY3MgfSBmcm9tICdAdmVyY2VsL2FuYWx5dGljcy9yZWFjdCc7XG5cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTXlBcHAoeyBDb21wb25lbnQsIHBhZ2VQcm9wcyB9KSB7XG4gIHJldHVybiAoXG4gIDw+XG4gICAgPENvbXBvbmVudCB7Li4ucGFnZVByb3BzfSAvPjtcbiAgICA8QW5hbHl0aWNzIC8+XG4gICAgPC8+XG4gICk7XG59XG4iXSwibmFtZXMiOlsiQW5hbHl0aWNzIiwiTXlBcHAiLCJDb21wb25lbnQiLCJwYWdlUHJvcHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./pages/_app.js\n"));

/***/ }),

/***/ "./node_modules/react/cjs/react-jsx-dev-runtime.development.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react/cjs/react-jsx-dev-runtime.development.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n\nvar jsxDEV$1 =  jsxWithValidation ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV$1;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "./node_modules/react/jsx-dev-runtime.js":
/*!***********************************************!*\
  !*** ./node_modules/react/jsx-dev-runtime.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"./node_modules/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSx1SkFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2pzeC1kZXYtcnVudGltZS5qcz81Nzc3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "./node_modules/@vercel/analytics/dist/react/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@vercel/analytics/dist/react/index.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Analytics: function() { return /* binding */ Analytics; },\n/* harmony export */   track: function() { return /* binding */ track; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\"use client\";\n\n// src/react.tsx\n\n\n// package.json\nvar name = \"@vercel/analytics\";\nvar version = \"1.1.2\";\n\n// src/queue.ts\nvar initQueue = () => {\n  if (window.va)\n    return;\n  window.va = function a(...params) {\n    (window.vaq = window.vaq || []).push(params);\n  };\n};\n\n// src/utils.ts\nfunction isBrowser() {\n  return typeof window !== \"undefined\";\n}\nfunction detectEnvironment() {\n  try {\n    const env = \"development\";\n    if (env === \"development\" || env === \"test\") {\n      return \"development\";\n    }\n  } catch (e) {\n  }\n  return \"production\";\n}\nfunction setMode(mode = \"auto\") {\n  if (mode === \"auto\") {\n    window.vam = detectEnvironment();\n    return;\n  }\n  window.vam = mode;\n}\nfunction getMode() {\n  const mode = isBrowser() ? window.vam : detectEnvironment();\n  return mode || \"production\";\n}\nfunction isProduction() {\n  return getMode() === \"production\";\n}\nfunction isDevelopment() {\n  return getMode() === \"development\";\n}\nfunction removeKey(key, { [key]: _, ...rest }) {\n  return rest;\n}\nfunction parseProperties(properties, options) {\n  if (!properties)\n    return void 0;\n  let props = properties;\n  const errorProperties = [];\n  for (const [key, value] of Object.entries(properties)) {\n    if (typeof value === \"object\" && value !== null) {\n      if (options.strip) {\n        props = removeKey(key, props);\n      } else {\n        errorProperties.push(key);\n      }\n    }\n  }\n  if (errorProperties.length > 0 && !options.strip) {\n    throw Error(\n      `The following properties are not valid: ${errorProperties.join(\n        \", \"\n      )}. Only strings, numbers, booleans, and null are allowed.`\n    );\n  }\n  return props;\n}\n\n// src/generic.ts\nfunction inject(props = {\n  debug: true\n}) {\n  var _a;\n  if (!isBrowser())\n    return;\n  setMode(props.mode);\n  initQueue();\n  if (props.beforeSend) {\n    (_a = window.va) == null ? void 0 : _a.call(window, \"beforeSend\", props.beforeSend);\n  }\n  const src = isDevelopment() ? \"https://va.vercel-scripts.com/v1/script.debug.js\" : \"/_vercel/insights/script.js\";\n  if (document.head.querySelector(`script[src*=\"${src}\"]`))\n    return;\n  const script = document.createElement(\"script\");\n  script.src = src;\n  script.defer = true;\n  script.setAttribute(\"data-sdkn\", name);\n  script.setAttribute(\"data-sdkv\", version);\n  script.onerror = () => {\n    const errorMessage = isDevelopment() ? \"Please check if any ad blockers are enabled and try again.\" : \"Be sure to enable Web Analytics for your project and deploy again. See https://vercel.com/docs/analytics/quickstart for more information.\";\n    console.log(\n      `[Vercel Web Analytics] Failed to load script from ${src}. ${errorMessage}`\n    );\n  };\n  if (isDevelopment() && props.debug === false) {\n    script.setAttribute(\"data-debug\", \"false\");\n  }\n  document.head.appendChild(script);\n}\nfunction track(name2, properties) {\n  var _a, _b;\n  if (!isBrowser()) {\n    const msg = \"[Vercel Web Analytics] Please import `track` from `@vercel/analytics/server` when using this function in a server environment\";\n    if (isProduction()) {\n      console.warn(msg);\n    } else {\n      throw new Error(msg);\n    }\n    return;\n  }\n  if (!properties) {\n    (_a = window.va) == null ? void 0 : _a.call(window, \"event\", { name: name2 });\n    return;\n  }\n  try {\n    const props = parseProperties(properties, {\n      strip: isProduction()\n    });\n    (_b = window.va) == null ? void 0 : _b.call(window, \"event\", {\n      name: name2,\n      data: props\n    });\n  } catch (err) {\n    if (err instanceof Error && isDevelopment()) {\n      console.error(err);\n    }\n  }\n}\n\n// src/react.tsx\nfunction Analytics({\n  beforeSend,\n  debug = true,\n  mode = \"auto\"\n}) {\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    inject({ beforeSend, debug, mode });\n  }, [beforeSend, debug, mode]);\n  return null;\n}\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZlcmNlbC9hbmFseXRpY3MvZGlzdC9yZWFjdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7QUFFQTtBQUNrQzs7QUFFbEM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGFBQW9CO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLG1CQUFtQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRDtBQUNqRDtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0RBQWtELElBQUk7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkRBQTJELElBQUksSUFBSSxhQUFhO0FBQ2hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtRUFBbUUsYUFBYTtBQUNoRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELEVBQUUsZ0RBQVM7QUFDWCxhQUFhLHlCQUF5QjtBQUN0QyxHQUFHO0FBQ0g7QUFDQTtBQUlFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B2ZXJjZWwvYW5hbHl0aWNzL2Rpc3QvcmVhY3QvaW5kZXguanM/Yzg1OSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcblxuLy8gc3JjL3JlYWN0LnRzeFxuaW1wb3J0IHsgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XG5cbi8vIHBhY2thZ2UuanNvblxudmFyIG5hbWUgPSBcIkB2ZXJjZWwvYW5hbHl0aWNzXCI7XG52YXIgdmVyc2lvbiA9IFwiMS4xLjJcIjtcblxuLy8gc3JjL3F1ZXVlLnRzXG52YXIgaW5pdFF1ZXVlID0gKCkgPT4ge1xuICBpZiAod2luZG93LnZhKVxuICAgIHJldHVybjtcbiAgd2luZG93LnZhID0gZnVuY3Rpb24gYSguLi5wYXJhbXMpIHtcbiAgICAod2luZG93LnZhcSA9IHdpbmRvdy52YXEgfHwgW10pLnB1c2gocGFyYW1zKTtcbiAgfTtcbn07XG5cbi8vIHNyYy91dGlscy50c1xuZnVuY3Rpb24gaXNCcm93c2VyKCkge1xuICByZXR1cm4gdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIjtcbn1cbmZ1bmN0aW9uIGRldGVjdEVudmlyb25tZW50KCkge1xuICB0cnkge1xuICAgIGNvbnN0IGVudiA9IHByb2Nlc3MuZW52Lk5PREVfRU5WO1xuICAgIGlmIChlbnYgPT09IFwiZGV2ZWxvcG1lbnRcIiB8fCBlbnYgPT09IFwidGVzdFwiKSB7XG4gICAgICByZXR1cm4gXCJkZXZlbG9wbWVudFwiO1xuICAgIH1cbiAgfSBjYXRjaCAoZSkge1xuICB9XG4gIHJldHVybiBcInByb2R1Y3Rpb25cIjtcbn1cbmZ1bmN0aW9uIHNldE1vZGUobW9kZSA9IFwiYXV0b1wiKSB7XG4gIGlmIChtb2RlID09PSBcImF1dG9cIikge1xuICAgIHdpbmRvdy52YW0gPSBkZXRlY3RFbnZpcm9ubWVudCgpO1xuICAgIHJldHVybjtcbiAgfVxuICB3aW5kb3cudmFtID0gbW9kZTtcbn1cbmZ1bmN0aW9uIGdldE1vZGUoKSB7XG4gIGNvbnN0IG1vZGUgPSBpc0Jyb3dzZXIoKSA/IHdpbmRvdy52YW0gOiBkZXRlY3RFbnZpcm9ubWVudCgpO1xuICByZXR1cm4gbW9kZSB8fCBcInByb2R1Y3Rpb25cIjtcbn1cbmZ1bmN0aW9uIGlzUHJvZHVjdGlvbigpIHtcbiAgcmV0dXJuIGdldE1vZGUoKSA9PT0gXCJwcm9kdWN0aW9uXCI7XG59XG5mdW5jdGlvbiBpc0RldmVsb3BtZW50KCkge1xuICByZXR1cm4gZ2V0TW9kZSgpID09PSBcImRldmVsb3BtZW50XCI7XG59XG5mdW5jdGlvbiByZW1vdmVLZXkoa2V5LCB7IFtrZXldOiBfLCAuLi5yZXN0IH0pIHtcbiAgcmV0dXJuIHJlc3Q7XG59XG5mdW5jdGlvbiBwYXJzZVByb3BlcnRpZXMocHJvcGVydGllcywgb3B0aW9ucykge1xuICBpZiAoIXByb3BlcnRpZXMpXG4gICAgcmV0dXJuIHZvaWQgMDtcbiAgbGV0IHByb3BzID0gcHJvcGVydGllcztcbiAgY29uc3QgZXJyb3JQcm9wZXJ0aWVzID0gW107XG4gIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKHByb3BlcnRpZXMpKSB7XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJvYmplY3RcIiAmJiB2YWx1ZSAhPT0gbnVsbCkge1xuICAgICAgaWYgKG9wdGlvbnMuc3RyaXApIHtcbiAgICAgICAgcHJvcHMgPSByZW1vdmVLZXkoa2V5LCBwcm9wcyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBlcnJvclByb3BlcnRpZXMucHVzaChrZXkpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBpZiAoZXJyb3JQcm9wZXJ0aWVzLmxlbmd0aCA+IDAgJiYgIW9wdGlvbnMuc3RyaXApIHtcbiAgICB0aHJvdyBFcnJvcihcbiAgICAgIGBUaGUgZm9sbG93aW5nIHByb3BlcnRpZXMgYXJlIG5vdCB2YWxpZDogJHtlcnJvclByb3BlcnRpZXMuam9pbihcbiAgICAgICAgXCIsIFwiXG4gICAgICApfS4gT25seSBzdHJpbmdzLCBudW1iZXJzLCBib29sZWFucywgYW5kIG51bGwgYXJlIGFsbG93ZWQuYFxuICAgICk7XG4gIH1cbiAgcmV0dXJuIHByb3BzO1xufVxuXG4vLyBzcmMvZ2VuZXJpYy50c1xuZnVuY3Rpb24gaW5qZWN0KHByb3BzID0ge1xuICBkZWJ1ZzogdHJ1ZVxufSkge1xuICB2YXIgX2E7XG4gIGlmICghaXNCcm93c2VyKCkpXG4gICAgcmV0dXJuO1xuICBzZXRNb2RlKHByb3BzLm1vZGUpO1xuICBpbml0UXVldWUoKTtcbiAgaWYgKHByb3BzLmJlZm9yZVNlbmQpIHtcbiAgICAoX2EgPSB3aW5kb3cudmEpID09IG51bGwgPyB2b2lkIDAgOiBfYS5jYWxsKHdpbmRvdywgXCJiZWZvcmVTZW5kXCIsIHByb3BzLmJlZm9yZVNlbmQpO1xuICB9XG4gIGNvbnN0IHNyYyA9IGlzRGV2ZWxvcG1lbnQoKSA/IFwiaHR0cHM6Ly92YS52ZXJjZWwtc2NyaXB0cy5jb20vdjEvc2NyaXB0LmRlYnVnLmpzXCIgOiBcIi9fdmVyY2VsL2luc2lnaHRzL3NjcmlwdC5qc1wiO1xuICBpZiAoZG9jdW1lbnQuaGVhZC5xdWVyeVNlbGVjdG9yKGBzY3JpcHRbc3JjKj1cIiR7c3JjfVwiXWApKVxuICAgIHJldHVybjtcbiAgY29uc3Qgc2NyaXB0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNjcmlwdFwiKTtcbiAgc2NyaXB0LnNyYyA9IHNyYztcbiAgc2NyaXB0LmRlZmVyID0gdHJ1ZTtcbiAgc2NyaXB0LnNldEF0dHJpYnV0ZShcImRhdGEtc2RrblwiLCBuYW1lKTtcbiAgc2NyaXB0LnNldEF0dHJpYnV0ZShcImRhdGEtc2RrdlwiLCB2ZXJzaW9uKTtcbiAgc2NyaXB0Lm9uZXJyb3IgPSAoKSA9PiB7XG4gICAgY29uc3QgZXJyb3JNZXNzYWdlID0gaXNEZXZlbG9wbWVudCgpID8gXCJQbGVhc2UgY2hlY2sgaWYgYW55IGFkIGJsb2NrZXJzIGFyZSBlbmFibGVkIGFuZCB0cnkgYWdhaW4uXCIgOiBcIkJlIHN1cmUgdG8gZW5hYmxlIFdlYiBBbmFseXRpY3MgZm9yIHlvdXIgcHJvamVjdCBhbmQgZGVwbG95IGFnYWluLiBTZWUgaHR0cHM6Ly92ZXJjZWwuY29tL2RvY3MvYW5hbHl0aWNzL3F1aWNrc3RhcnQgZm9yIG1vcmUgaW5mb3JtYXRpb24uXCI7XG4gICAgY29uc29sZS5sb2coXG4gICAgICBgW1ZlcmNlbCBXZWIgQW5hbHl0aWNzXSBGYWlsZWQgdG8gbG9hZCBzY3JpcHQgZnJvbSAke3NyY30uICR7ZXJyb3JNZXNzYWdlfWBcbiAgICApO1xuICB9O1xuICBpZiAoaXNEZXZlbG9wbWVudCgpICYmIHByb3BzLmRlYnVnID09PSBmYWxzZSkge1xuICAgIHNjcmlwdC5zZXRBdHRyaWJ1dGUoXCJkYXRhLWRlYnVnXCIsIFwiZmFsc2VcIik7XG4gIH1cbiAgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChzY3JpcHQpO1xufVxuZnVuY3Rpb24gdHJhY2sobmFtZTIsIHByb3BlcnRpZXMpIHtcbiAgdmFyIF9hLCBfYjtcbiAgaWYgKCFpc0Jyb3dzZXIoKSkge1xuICAgIGNvbnN0IG1zZyA9IFwiW1ZlcmNlbCBXZWIgQW5hbHl0aWNzXSBQbGVhc2UgaW1wb3J0IGB0cmFja2AgZnJvbSBgQHZlcmNlbC9hbmFseXRpY3Mvc2VydmVyYCB3aGVuIHVzaW5nIHRoaXMgZnVuY3Rpb24gaW4gYSBzZXJ2ZXIgZW52aXJvbm1lbnRcIjtcbiAgICBpZiAoaXNQcm9kdWN0aW9uKCkpIHtcbiAgICAgIGNvbnNvbGUud2Fybihtc2cpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IobXNnKTtcbiAgICB9XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmICghcHJvcGVydGllcykge1xuICAgIChfYSA9IHdpbmRvdy52YSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLmNhbGwod2luZG93LCBcImV2ZW50XCIsIHsgbmFtZTogbmFtZTIgfSk7XG4gICAgcmV0dXJuO1xuICB9XG4gIHRyeSB7XG4gICAgY29uc3QgcHJvcHMgPSBwYXJzZVByb3BlcnRpZXMocHJvcGVydGllcywge1xuICAgICAgc3RyaXA6IGlzUHJvZHVjdGlvbigpXG4gICAgfSk7XG4gICAgKF9iID0gd2luZG93LnZhKSA9PSBudWxsID8gdm9pZCAwIDogX2IuY2FsbCh3aW5kb3csIFwiZXZlbnRcIiwge1xuICAgICAgbmFtZTogbmFtZTIsXG4gICAgICBkYXRhOiBwcm9wc1xuICAgIH0pO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICBpZiAoZXJyIGluc3RhbmNlb2YgRXJyb3IgJiYgaXNEZXZlbG9wbWVudCgpKSB7XG4gICAgICBjb25zb2xlLmVycm9yKGVycik7XG4gICAgfVxuICB9XG59XG5cbi8vIHNyYy9yZWFjdC50c3hcbmZ1bmN0aW9uIEFuYWx5dGljcyh7XG4gIGJlZm9yZVNlbmQsXG4gIGRlYnVnID0gdHJ1ZSxcbiAgbW9kZSA9IFwiYXV0b1wiXG59KSB7XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaW5qZWN0KHsgYmVmb3JlU2VuZCwgZGVidWcsIG1vZGUgfSk7XG4gIH0sIFtiZWZvcmVTZW5kLCBkZWJ1ZywgbW9kZV0pO1xuICByZXR1cm4gbnVsbDtcbn1cbmV4cG9ydCB7XG4gIEFuYWx5dGljcyxcbiAgdHJhY2tcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@vercel/analytics/dist/react/index.js\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main"], function() { return __webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!"), __webpack_exec__("./node_modules/next/dist/client/router.js"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);